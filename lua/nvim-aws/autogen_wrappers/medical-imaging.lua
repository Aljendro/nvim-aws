-- AUTOGENERATED FILE - DO NOT EDIT
-- AWS Service: medical-imaging

local common = require("nvim-aws.common")

--- AWS medical-imaging service functions
local M = {}

--- AWS medical-imaging copy-image-set operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.copy_image_set(input, callbacks)
	return common.execute_aws_command_skeleton({ "medical-imaging", "copy-image-set" }, input, callbacks)
end

--- AWS medical-imaging create-datastore operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_datastore(input, callbacks)
	return common.execute_aws_command_skeleton({ "medical-imaging", "create-datastore" }, input, callbacks)
end

--- AWS medical-imaging delete-datastore operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_datastore(input, callbacks)
	return common.execute_aws_command_skeleton({ "medical-imaging", "delete-datastore" }, input, callbacks)
end

--- AWS medical-imaging delete-image-set operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_image_set(input, callbacks)
	return common.execute_aws_command_skeleton({ "medical-imaging", "delete-image-set" }, input, callbacks)
end

--- AWS medical-imaging get-datastore operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_datastore(input, callbacks)
	return common.execute_aws_command_skeleton({ "medical-imaging", "get-datastore" }, input, callbacks)
end

--- AWS medical-imaging get-dicom-import-job operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_dicom_import_job(input, callbacks)
	return common.execute_aws_command_skeleton({ "medical-imaging", "get-dicom-import-job" }, input, callbacks)
end

--- AWS medical-imaging get-image-frame operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_image_frame(input, callbacks)
	return common.execute_aws_command({ "medical-imaging", "get-image-frame" }, input, callbacks)
end

--- AWS medical-imaging get-image-set operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_image_set(input, callbacks)
	return common.execute_aws_command_skeleton({ "medical-imaging", "get-image-set" }, input, callbacks)
end

--- AWS medical-imaging get-image-set-metadata operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_image_set_metadata(input, callbacks)
	return common.execute_aws_command({ "medical-imaging", "get-image-set-metadata" }, input, callbacks)
end

--- AWS medical-imaging list-datastores operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_datastores(input, callbacks)
	return common.execute_aws_command_skeleton({ "medical-imaging", "list-datastores" }, input, callbacks)
end

--- AWS medical-imaging list-dicom-import-jobs operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_dicom_import_jobs(input, callbacks)
	return common.execute_aws_command_skeleton({ "medical-imaging", "list-dicom-import-jobs" }, input, callbacks)
end

--- AWS medical-imaging list-image-set-versions operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_image_set_versions(input, callbacks)
	return common.execute_aws_command_skeleton({ "medical-imaging", "list-image-set-versions" }, input, callbacks)
end

--- AWS medical-imaging list-tags-for-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_tags_for_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "medical-imaging", "list-tags-for-resource" }, input, callbacks)
end

--- AWS medical-imaging search-image-sets operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.search_image_sets(input, callbacks)
	return common.execute_aws_command_skeleton({ "medical-imaging", "search-image-sets" }, input, callbacks)
end

--- AWS medical-imaging start-dicom-import-job operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.start_dicom_import_job(input, callbacks)
	return common.execute_aws_command_skeleton({ "medical-imaging", "start-dicom-import-job" }, input, callbacks)
end

--- AWS medical-imaging tag-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.tag_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "medical-imaging", "tag-resource" }, input, callbacks)
end

--- AWS medical-imaging untag-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.untag_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "medical-imaging", "untag-resource" }, input, callbacks)
end

--- AWS medical-imaging update-image-set-metadata operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_image_set_metadata(input, callbacks)
	return common.execute_aws_command_skeleton({ "medical-imaging", "update-image-set-metadata" }, input, callbacks)
end

return M
