-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-07 21:36:03
-- AWS Service: drs

local common = require("nvim-aws.wrappers.common")

--- AWS DRS service functions
local M = {}

--- Create an extended source server in the target Account based on the source server in staging account
--- @param input table The input table for the create_extended_source_server command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_extended_source_server(input)
	return common.execute_aws_command_with_input({ "drs", "create-extended-source-server" }, input)
end

--- Deletes a resource launch action
--- @param input table The input table for the delete_launch_action command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_launch_action(input)
	return common.execute_aws_command_with_input({ "drs", "delete-launch-action" }, input)
end

--- Initialize Elastic Disaster Recovery
--- @param input table The input table for the initialize_service command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.initialize_service(input)
	return common.execute_aws_command_with_input({ "drs", "initialize-service" }, input)
end

--- Returns a list of source servers on a staging account that are extensible, which means that: a
--- @param input table The input table for the list_extensible_source_servers command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_extensible_source_servers(input)
	return common.execute_aws_command_with_input({ "drs", "list-extensible-source-servers" }, input)
end

--- Lists resource launch actions
--- @param input table The input table for the list_launch_actions command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_launch_actions(input)
	return common.execute_aws_command_with_input({ "drs", "list-launch-actions" }, input)
end

--- Returns an array of staging accounts for existing extended source servers
--- @param input table The input table for the list_staging_accounts command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_staging_accounts(input)
	return common.execute_aws_command_with_input({ "drs", "list-staging-accounts" }, input)
end

--- List all tags for your Elastic Disaster Recovery resources
--- @param input table The input table for the list_tags_for_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_tags_for_resource(input)
	return common.execute_aws_command_with_input({ "drs", "list-tags-for-resource" }, input)
end

--- Puts a resource launch action
--- @param input table The input table for the put_launch_action command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.put_launch_action(input)
	return common.execute_aws_command_with_input({ "drs", "put-launch-action" }, input)
end

--- Adds or overwrites only the specified tags for the specified Elastic Disaster Recovery resource or resources
--- @param input table The input table for the tag_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.tag_resource(input)
	return common.execute_aws_command_with_input({ "drs", "tag-resource" }, input)
end

--- Deletes the specified set of tags from the specified set of Elastic Disaster Recovery resources
--- @param input table The input table for the untag_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.untag_resource(input)
	return common.execute_aws_command_with_input({ "drs", "untag-resource" }, input)
end

return M
