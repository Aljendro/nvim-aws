-- AUTOGENERATED FILE - DO NOT EDIT
-- AWS Service: b2bi

local common = require("nvim-aws.common")

--- AWS b2bi service functions
local M = {}

--- AWS b2bi create-capability operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_capability(input, callbacks)
	return common.execute_aws_command_skeleton({ "b2bi", "create-capability" }, input, callbacks)
end

--- AWS b2bi create-partnership operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_partnership(input, callbacks)
	return common.execute_aws_command_skeleton({ "b2bi", "create-partnership" }, input, callbacks)
end

--- AWS b2bi create-profile operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_profile(input, callbacks)
	return common.execute_aws_command_skeleton({ "b2bi", "create-profile" }, input, callbacks)
end

--- AWS b2bi create-starter-mapping-template operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_starter_mapping_template(input, callbacks)
	return common.execute_aws_command_skeleton({ "b2bi", "create-starter-mapping-template" }, input, callbacks)
end

--- AWS b2bi create-transformer operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_transformer(input, callbacks)
	return common.execute_aws_command_skeleton({ "b2bi", "create-transformer" }, input, callbacks)
end

--- AWS b2bi delete-capability operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_capability(input, callbacks)
	return common.execute_aws_command_skeleton({ "b2bi", "delete-capability" }, input, callbacks)
end

--- AWS b2bi delete-partnership operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_partnership(input, callbacks)
	return common.execute_aws_command_skeleton({ "b2bi", "delete-partnership" }, input, callbacks)
end

--- AWS b2bi delete-profile operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_profile(input, callbacks)
	return common.execute_aws_command_skeleton({ "b2bi", "delete-profile" }, input, callbacks)
end

--- AWS b2bi delete-transformer operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_transformer(input, callbacks)
	return common.execute_aws_command_skeleton({ "b2bi", "delete-transformer" }, input, callbacks)
end

--- AWS b2bi generate-mapping operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.generate_mapping(input, callbacks)
	return common.execute_aws_command_skeleton({ "b2bi", "generate-mapping" }, input, callbacks)
end

--- AWS b2bi get-capability operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_capability(input, callbacks)
	return common.execute_aws_command_skeleton({ "b2bi", "get-capability" }, input, callbacks)
end

--- AWS b2bi get-partnership operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_partnership(input, callbacks)
	return common.execute_aws_command_skeleton({ "b2bi", "get-partnership" }, input, callbacks)
end

--- AWS b2bi get-profile operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_profile(input, callbacks)
	return common.execute_aws_command_skeleton({ "b2bi", "get-profile" }, input, callbacks)
end

--- AWS b2bi get-transformer operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_transformer(input, callbacks)
	return common.execute_aws_command_skeleton({ "b2bi", "get-transformer" }, input, callbacks)
end

--- AWS b2bi get-transformer-job operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_transformer_job(input, callbacks)
	return common.execute_aws_command_skeleton({ "b2bi", "get-transformer-job" }, input, callbacks)
end

--- AWS b2bi list-capabilities operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_capabilities(input, callbacks)
	return common.execute_aws_command_skeleton({ "b2bi", "list-capabilities" }, input, callbacks)
end

--- AWS b2bi list-partnerships operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_partnerships(input, callbacks)
	return common.execute_aws_command_skeleton({ "b2bi", "list-partnerships" }, input, callbacks)
end

--- AWS b2bi list-profiles operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_profiles(input, callbacks)
	return common.execute_aws_command_skeleton({ "b2bi", "list-profiles" }, input, callbacks)
end

--- AWS b2bi list-tags-for-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_tags_for_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "b2bi", "list-tags-for-resource" }, input, callbacks)
end

--- AWS b2bi list-transformers operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_transformers(input, callbacks)
	return common.execute_aws_command_skeleton({ "b2bi", "list-transformers" }, input, callbacks)
end

--- AWS b2bi start-transformer-job operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.start_transformer_job(input, callbacks)
	return common.execute_aws_command_skeleton({ "b2bi", "start-transformer-job" }, input, callbacks)
end

--- AWS b2bi tag-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.tag_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "b2bi", "tag-resource" }, input, callbacks)
end

--- AWS b2bi test-conversion operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.test_conversion(input, callbacks)
	return common.execute_aws_command_skeleton({ "b2bi", "test-conversion" }, input, callbacks)
end

--- AWS b2bi test-mapping operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.test_mapping(input, callbacks)
	return common.execute_aws_command_skeleton({ "b2bi", "test-mapping" }, input, callbacks)
end

--- AWS b2bi test-parsing operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.test_parsing(input, callbacks)
	return common.execute_aws_command_skeleton({ "b2bi", "test-parsing" }, input, callbacks)
end

--- AWS b2bi untag-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.untag_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "b2bi", "untag-resource" }, input, callbacks)
end

--- AWS b2bi update-capability operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_capability(input, callbacks)
	return common.execute_aws_command_skeleton({ "b2bi", "update-capability" }, input, callbacks)
end

--- AWS b2bi update-partnership operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_partnership(input, callbacks)
	return common.execute_aws_command_skeleton({ "b2bi", "update-partnership" }, input, callbacks)
end

--- AWS b2bi update-profile operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_profile(input, callbacks)
	return common.execute_aws_command_skeleton({ "b2bi", "update-profile" }, input, callbacks)
end

--- AWS b2bi update-transformer operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_transformer(input, callbacks)
	return common.execute_aws_command_skeleton({ "b2bi", "update-transformer" }, input, callbacks)
end

return M
