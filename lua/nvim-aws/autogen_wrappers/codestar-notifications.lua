-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: codestar-notifications

local common = require("nvim-aws.wrappers.common")

--- AWS CODESTAR-NOTIFICATIONS service functions
local M = {}

--- Creates a notification rule for a resource
--- @param input table|nil The input table for the create_notification_rule command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_notification_rule(input)
	return common.execute_aws_command_with_input({ "codestar-notifications", "create-notification-rule" }, input)
end

--- Deletes a notification rule for a resource
--- @param input table|nil The input table for the delete_notification_rule command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_notification_rule(input)
	return common.execute_aws_command_with_input({ "codestar-notifications", "delete-notification-rule" }, input)
end

--- Deletes a specified target for notifications
--- @param input table|nil The input table for the delete_target command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_target(input)
	return common.execute_aws_command_with_input({ "codestar-notifications", "delete-target" }, input)
end

--- Returns information about a specified notification rule
--- @param input table|nil The input table for the describe_notification_rule command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_notification_rule(input)
	return common.execute_aws_command_with_input({ "codestar-notifications", "describe-notification-rule" }, input)
end

--- Returns information about the event types available for configuring notifications
--- @param input table|nil The input table for the list_event_types command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_event_types(input)
	return common.execute_aws_command_with_input({ "codestar-notifications", "list-event-types" }, input)
end

--- Returns a list of the notification rules for an Amazon Web Services account
--- @param input table|nil The input table for the list_notification_rules command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_notification_rules(input)
	return common.execute_aws_command_with_input({ "codestar-notifications", "list-notification-rules" }, input)
end

--- Returns a list of the tags associated with a notification rule
--- @param input table|nil The input table for the list_tags_for_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_tags_for_resource(input)
	return common.execute_aws_command_with_input({ "codestar-notifications", "list-tags-for-resource" }, input)
end

--- Returns a list of the notification rule targets for an Amazon Web Services account
--- @param input table|nil The input table for the list_targets command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_targets(input)
	return common.execute_aws_command_with_input({ "codestar-notifications", "list-targets" }, input)
end

--- Creates an association between a notification rule and an Chatbot topic or Chatbot client so that the associated target can receive notifications when the events described in the rule are triggered
--- @param input table|nil The input table for the subscribe command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.subscribe(input)
	return common.execute_aws_command_with_input({ "codestar-notifications", "subscribe" }, input)
end

--- Associates a set of provided tags with a notification rule
--- @param input table|nil The input table for the tag_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.tag_resource(input)
	return common.execute_aws_command_with_input({ "codestar-notifications", "tag-resource" }, input)
end

--- Removes an association between a notification rule and an Chatbot topic so that subscribers to that topic stop receiving notifications when the events described in the rule are triggered
--- @param input table|nil The input table for the unsubscribe command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.unsubscribe(input)
	return common.execute_aws_command_with_input({ "codestar-notifications", "unsubscribe" }, input)
end

--- Removes the association between one or more provided tags and a notification rule
--- @param input table|nil The input table for the untag_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.untag_resource(input)
	return common.execute_aws_command_with_input({ "codestar-notifications", "untag-resource" }, input)
end

--- Updates a notification rule for a resource
--- @param input table|nil The input table for the update_notification_rule command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_notification_rule(input)
	return common.execute_aws_command_with_input({ "codestar-notifications", "update-notification-rule" }, input)
end

return M
