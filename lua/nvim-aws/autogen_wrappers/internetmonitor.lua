-- AUTOGENERATED FILE - DO NOT EDIT
-- AWS Service: internetmonitor

local common = require("nvim-aws.common")

--- AWS internetmonitor service functions
local M = {}

--- AWS internetmonitor create-monitor operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.create_monitor(input)
	return common.execute_aws_command_skeleton({ "internetmonitor", "create-monitor" }, input)
end

--- AWS internetmonitor delete-monitor operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.delete_monitor(input)
	return common.execute_aws_command_skeleton({ "internetmonitor", "delete-monitor" }, input)
end

--- AWS internetmonitor get-health-event operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.get_health_event(input)
	return common.execute_aws_command_skeleton({ "internetmonitor", "get-health-event" }, input)
end

--- AWS internetmonitor get-internet-event operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.get_internet_event(input)
	return common.execute_aws_command_skeleton({ "internetmonitor", "get-internet-event" }, input)
end

--- AWS internetmonitor get-monitor operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.get_monitor(input)
	return common.execute_aws_command_skeleton({ "internetmonitor", "get-monitor" }, input)
end

--- AWS internetmonitor get-query-results operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.get_query_results(input)
	return common.execute_aws_command_skeleton({ "internetmonitor", "get-query-results" }, input)
end

--- AWS internetmonitor get-query-status operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.get_query_status(input)
	return common.execute_aws_command_skeleton({ "internetmonitor", "get-query-status" }, input)
end

--- AWS internetmonitor list-health-events operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.list_health_events(input)
	return common.execute_aws_command_skeleton({ "internetmonitor", "list-health-events" }, input)
end

--- AWS internetmonitor list-internet-events operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.list_internet_events(input)
	return common.execute_aws_command_skeleton({ "internetmonitor", "list-internet-events" }, input)
end

--- AWS internetmonitor list-monitors operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.list_monitors(input)
	return common.execute_aws_command_skeleton({ "internetmonitor", "list-monitors" }, input)
end

--- AWS internetmonitor list-tags-for-resource operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.list_tags_for_resource(input)
	return common.execute_aws_command_skeleton({ "internetmonitor", "list-tags-for-resource" }, input)
end

--- AWS internetmonitor start-query operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.start_query(input)
	return common.execute_aws_command_skeleton({ "internetmonitor", "start-query" }, input)
end

--- AWS internetmonitor stop-query operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.stop_query(input)
	return common.execute_aws_command_skeleton({ "internetmonitor", "stop-query" }, input)
end

--- AWS internetmonitor tag-resource operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.tag_resource(input)
	return common.execute_aws_command_skeleton({ "internetmonitor", "tag-resource" }, input)
end

--- AWS internetmonitor untag-resource operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.untag_resource(input)
	return common.execute_aws_command_skeleton({ "internetmonitor", "untag-resource" }, input)
end

--- AWS internetmonitor update-monitor operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.update_monitor(input)
	return common.execute_aws_command_skeleton({ "internetmonitor", "update-monitor" }, input)
end

return M
