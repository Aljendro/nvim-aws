-- AUTOGENERATED FILE - DO NOT EDIT
-- AWS Service: internetmonitor

local common = require("nvim-aws.wrappers.common")

--- AWS INTERNETMONITOR service functions
local M = {}

--- Creates a monitor in Amazon CloudWatch Internet Monitor
--- @param input table|nil The input table for the create_monitor command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_monitor(input)
	return common.execute_aws_command_with_input({ "internetmonitor", "create-monitor" }, input)
end

--- Deletes a monitor in Amazon CloudWatch Internet Monitor
--- @param input table|nil The input table for the delete_monitor command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_monitor(input)
	return common.execute_aws_command_with_input({ "internetmonitor", "delete-monitor" }, input)
end

--- Gets information that Amazon CloudWatch Internet Monitor has generated about an internet event
--- @param input table|nil The input table for the get_internet_event command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_internet_event(input)
	return common.execute_aws_command_with_input({ "internetmonitor", "get-internet-event" }, input)
end

--- Gets information about a monitor in Amazon CloudWatch Internet Monitor based on a monitor name
--- @param input table|nil The input table for the get_monitor command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_monitor(input)
	return common.execute_aws_command_with_input({ "internetmonitor", "get-monitor" }, input)
end

--- Return the data for a query with the Amazon CloudWatch Internet Monitor query interface
--- @param input table|nil The input table for the get_query_results command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_query_results(input)
	return common.execute_aws_command_with_input({ "internetmonitor", "get-query-results" }, input)
end

--- Returns the current status of a query for the Amazon CloudWatch Internet Monitor query interface, for a specified query ID and monitor
--- @param input table|nil The input table for the get_query_status command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_query_status(input)
	return common.execute_aws_command_with_input({ "internetmonitor", "get-query-status" }, input)
end

--- Lists internet events that cause performance or availability issues for client locations
--- @param input table|nil The input table for the list_internet_events command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_internet_events(input)
	return common.execute_aws_command_with_input({ "internetmonitor", "list-internet-events" }, input)
end

--- Lists all of your monitors for Amazon CloudWatch Internet Monitor and their statuses, along with the Amazon Resource Name (ARN) and name of each monitor
--- @param input table|nil The input table for the list_monitors command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_monitors(input)
	return common.execute_aws_command_with_input({ "internetmonitor", "list-monitors" }, input)
end

--- Lists the tags for a resource
--- @param input table|nil The input table for the list_tags_for_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_tags_for_resource(input)
	return common.execute_aws_command_with_input({ "internetmonitor", "list-tags-for-resource" }, input)
end

--- Start a query to return data for a specific query type for the Amazon CloudWatch Internet Monitor query interface
--- @param input table|nil The input table for the start_query command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.start_query(input)
	return common.execute_aws_command_with_input({ "internetmonitor", "start-query" }, input)
end

--- Stop a query that is progress for a specific monitor
--- @param input table|nil The input table for the stop_query command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.stop_query(input)
	return common.execute_aws_command_with_input({ "internetmonitor", "stop-query" }, input)
end

--- Adds a tag to a resource
--- @param input table|nil The input table for the tag_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.tag_resource(input)
	return common.execute_aws_command_with_input({ "internetmonitor", "tag-resource" }, input)
end

--- Removes a tag from a resource
--- @param input table|nil The input table for the untag_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.untag_resource(input)
	return common.execute_aws_command_with_input({ "internetmonitor", "untag-resource" }, input)
end

--- Updates a monitor
--- @param input table|nil The input table for the update_monitor command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_monitor(input)
	return common.execute_aws_command_with_input({ "internetmonitor", "update-monitor" }, input)
end

return M
