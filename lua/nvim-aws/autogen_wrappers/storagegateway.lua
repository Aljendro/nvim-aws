-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-07 21:36:03
-- AWS Service: storage-gateway

local common = require("nvim-aws.wrappers.common")

--- AWS STORAGEGATEWAY service functions
local M = {}

--- Activates the gateway you previously deployed on your host
--- @param input table The input table for the activate_gateway command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.activate_gateway(input)
	return common.execute_aws_command_with_input({ "storagegateway", "activate-gateway" }, input)
end

--- Configures one or more gateway local disks as cache for a gateway
--- @param input table The input table for the add_cache command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.add_cache(input)
	return common.execute_aws_command_with_input({ "storagegateway", "add-cache" }, input)
end

--- Adds one or more tags to the specified resource
--- @param input table The input table for the add_tags_to_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.add_tags_to_resource(input)
	return common.execute_aws_command_with_input({ "storagegateway", "add-tags-to-resource" }, input)
end

--- Configures one or more gateway local disks as upload buffer for a specified gateway
--- @param input table The input table for the add_upload_buffer command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.add_upload_buffer(input)
	return common.execute_aws_command_with_input({ "storagegateway", "add-upload-buffer" }, input)
end

--- Configures one or more gateway local disks as working storage for a gateway
--- @param input table The input table for the add_working_storage command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.add_working_storage(input)
	return common.execute_aws_command_with_input({ "storagegateway", "add-working-storage" }, input)
end

--- Assigns a tape to a tape pool for archiving
--- @param input table The input table for the assign_tape_pool command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.assign_tape_pool(input)
	return common.execute_aws_command_with_input({ "storagegateway", "assign-tape-pool" }, input)
end

--- Associate an Amazon FSx file system with the FSx File Gateway
--- @param input table The input table for the associate_file_system command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.associate_file_system(input)
	return common.execute_aws_command_with_input({ "storagegateway", "associate-file-system" }, input)
end

--- Connects a volume to an iSCSI connection and then attaches the volume to the specified gateway
--- @param input table The input table for the attach_volume command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.attach_volume(input)
	return common.execute_aws_command_with_input({ "storagegateway", "attach-volume" }, input)
end

--- Cancels archiving of a virtual tape to the virtual tape shelf (VTS) after the archiving process is initiated
--- @param input table The input table for the cancel_archival command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.cancel_archival(input)
	return common.execute_aws_command_with_input({ "storagegateway", "cancel-archival" }, input)
end

--- Cancels generation of a specified cache report
--- @param input table The input table for the cancel_cache_report command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.cancel_cache_report(input)
	return common.execute_aws_command_with_input({ "storagegateway", "cancel-cache-report" }, input)
end

--- Cancels retrieval of a virtual tape from the virtual tape shelf (VTS) to a gateway after the retrieval process is initiated
--- @param input table The input table for the cancel_retrieval command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.cancel_retrieval(input)
	return common.execute_aws_command_with_input({ "storagegateway", "cancel-retrieval" }, input)
end

--- Creates a cached volume on a specified cached volume gateway
--- @param input table The input table for the create_cachedi_scsi_volume command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_cachedi_scsi_volume(input)
	return common.execute_aws_command_with_input({ "storagegateway", "create-cachedi-scsi-volume" }, input)
end

--- Creates a Network File System (NFS) file share on an existing S3 File Gateway
--- @param input table The input table for the create_nfs_file_share command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_nfs_file_share(input)
	return common.execute_aws_command_with_input({ "storagegateway", "create-nfs-file-share" }, input)
end

--- Creates a Server Message Block (SMB) file share on an existing S3 File Gateway
--- @param input table The input table for the create_smb_file_share command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_smb_file_share(input)
	return common.execute_aws_command_with_input({ "storagegateway", "create-smb-file-share" }, input)
end

--- Initiates a snapshot of a volume
--- @param input table The input table for the create_snapshot command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_snapshot(input)
	return common.execute_aws_command_with_input({ "storagegateway", "create-snapshot" }, input)
end

--- Initiates a snapshot of a gateway from a volume recovery point
--- @param input table The input table for the create_snapshot_from_volume_recovery_point command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_snapshot_from_volume_recovery_point(input)
	return common.execute_aws_command_with_input({ "storagegateway", "create-snapshot-from-volume-recovery-point" }, input)
end

--- Creates a volume on a specified gateway
--- @param input table The input table for the create_storedi_scsi_volume command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_storedi_scsi_volume(input)
	return common.execute_aws_command_with_input({ "storagegateway", "create-storedi-scsi-volume" }, input)
end

--- Creates a new custom tape pool
--- @param input table The input table for the create_tape_pool command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_tape_pool(input)
	return common.execute_aws_command_with_input({ "storagegateway", "create-tape-pool" }, input)
end

--- Creates a virtual tape by using your own barcode
--- @param input table The input table for the create_tape_with_barcode command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_tape_with_barcode(input)
	return common.execute_aws_command_with_input({ "storagegateway", "create-tape-with-barcode" }, input)
end

--- Creates one or more virtual tapes
--- @param input table The input table for the create_tapes command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_tapes(input)
	return common.execute_aws_command_with_input({ "storagegateway", "create-tapes" }, input)
end

--- Deletes the automatic tape creation policy of a gateway
--- @param input table The input table for the delete_automatic_tape_creation_policy command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_automatic_tape_creation_policy(input)
	return common.execute_aws_command_with_input({ "storagegateway", "delete-automatic-tape-creation-policy" }, input)
end

--- Deletes the bandwidth rate limits of a gateway
--- @param input table The input table for the delete_bandwidth_rate_limit command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_bandwidth_rate_limit(input)
	return common.execute_aws_command_with_input({ "storagegateway", "delete-bandwidth-rate-limit" }, input)
end

--- Deletes the specified cache report and any associated tags from the Storage Gateway database
--- @param input table The input table for the delete_cache_report command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_cache_report(input)
	return common.execute_aws_command_with_input({ "storagegateway", "delete-cache-report" }, input)
end

--- Deletes Challenge-Handshake Authentication Protocol (CHAP) credentials for a specified iSCSI target and initiator pair
--- @param input table The input table for the delete_chap_credentials command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_chap_credentials(input)
	return common.execute_aws_command_with_input({ "storagegateway", "delete-chap-credentials" }, input)
end

--- Deletes a file share from an S3 File Gateway
--- @param input table The input table for the delete_file_share command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_file_share(input)
	return common.execute_aws_command_with_input({ "storagegateway", "delete-file-share" }, input)
end

--- Deletes a gateway
--- @param input table The input table for the delete_gateway command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_gateway(input)
	return common.execute_aws_command_with_input({ "storagegateway", "delete-gateway" }, input)
end

--- Deletes a snapshot of a volume
--- @param input table The input table for the delete_snapshot_schedule command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_snapshot_schedule(input)
	return common.execute_aws_command_with_input({ "storagegateway", "delete-snapshot-schedule" }, input)
end

--- Deletes the specified virtual tape
--- @param input table The input table for the delete_tape command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_tape(input)
	return common.execute_aws_command_with_input({ "storagegateway", "delete-tape" }, input)
end

--- Deletes the specified virtual tape from the virtual tape shelf (VTS)
--- @param input table The input table for the delete_tape_archive command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_tape_archive(input)
	return common.execute_aws_command_with_input({ "storagegateway", "delete-tape-archive" }, input)
end

--- Delete a custom tape pool
--- @param input table The input table for the delete_tape_pool command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_tape_pool(input)
	return common.execute_aws_command_with_input({ "storagegateway", "delete-tape-pool" }, input)
end

--- Deletes the specified storage volume that you previously created using the CreateCachediSCSIVolume or CreateStorediSCSIVolume API
--- @param input table The input table for the delete_volume command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_volume(input)
	return common.execute_aws_command_with_input({ "storagegateway", "delete-volume" }, input)
end

--- Returns information about the most recent high availability monitoring test that was performed on the host in a cluster
--- @param input table The input table for the describe_availability_monitor_test command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_availability_monitor_test(input)
	return common.execute_aws_command_with_input({ "storagegateway", "describe-availability-monitor-test" }, input)
end

--- Returns the bandwidth rate limits of a gateway
--- @param input table The input table for the describe_bandwidth_rate_limit command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_bandwidth_rate_limit(input)
	return common.execute_aws_command_with_input({ "storagegateway", "describe-bandwidth-rate-limit" }, input)
end

--- Returns information about the bandwidth rate limit schedule of a gateway
--- @param input table The input table for the describe_bandwidth_rate_limit_schedule command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_bandwidth_rate_limit_schedule(input)
	return common.execute_aws_command_with_input({ "storagegateway", "describe-bandwidth-rate-limit-schedule" }, input)
end

--- Returns information about the cache of a gateway
--- @param input table The input table for the describe_cache command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_cache(input)
	return common.execute_aws_command_with_input({ "storagegateway", "describe-cache" }, input)
end

--- Returns information about the specified cache report, including completion status and generation progress
--- @param input table The input table for the describe_cache_report command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_cache_report(input)
	return common.execute_aws_command_with_input({ "storagegateway", "describe-cache-report" }, input)
end

--- Returns a description of the gateway volumes specified in the request
--- @param input table The input table for the describe_cachedi_scsi_volumes command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_cachedi_scsi_volumes(input)
	return common.execute_aws_command_with_input({ "storagegateway", "describe-cachedi-scsi-volumes" }, input)
end

--- Returns an array of Challenge-Handshake Authentication Protocol (CHAP) credentials information for a specified iSCSI target, one for each target-initiator pair
--- @param input table The input table for the describe_chap_credentials command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_chap_credentials(input)
	return common.execute_aws_command_with_input({ "storagegateway", "describe-chap-credentials" }, input)
end

--- Gets the file system association information
--- @param input table The input table for the describe_file_system_associations command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_file_system_associations(input)
	return common.execute_aws_command_with_input({ "storagegateway", "describe-file-system-associations" }, input)
end

--- Returns metadata about a gateway such as its name, network interfaces, time zone, status, and software version
--- @param input table The input table for the describe_gateway_information command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_gateway_information(input)
	return common.execute_aws_command_with_input({ "storagegateway", "describe-gateway-information" }, input)
end

--- Returns your gateway's maintenance window schedule information, with values for monthly or weekly cadence, specific day and time to begin maintenance, and which types of updates to apply
--- @param input table The input table for the describe_maintenance_start_time command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_maintenance_start_time(input)
	return common.execute_aws_command_with_input({ "storagegateway", "describe-maintenance-start-time" }, input)
end

--- Gets a description for one or more Network File System (NFS) file shares from an S3 File Gateway
--- @param input table The input table for the describe_nfs_file_shares command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_nfs_file_shares(input)
	return common.execute_aws_command_with_input({ "storagegateway", "describe-nfs-file-shares" }, input)
end

--- Gets a description for one or more Server Message Block (SMB) file shares from a S3 File Gateway
--- @param input table The input table for the describe_smb_file_shares command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_smb_file_shares(input)
	return common.execute_aws_command_with_input({ "storagegateway", "describe-smb-file-shares" }, input)
end

--- Gets a description of a Server Message Block (SMB) file share settings from a file gateway
--- @param input table The input table for the describe_smb_settings command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_smb_settings(input)
	return common.execute_aws_command_with_input({ "storagegateway", "describe-smb-settings" }, input)
end

--- Describes the snapshot schedule for the specified gateway volume
--- @param input table The input table for the describe_snapshot_schedule command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_snapshot_schedule(input)
	return common.execute_aws_command_with_input({ "storagegateway", "describe-snapshot-schedule" }, input)
end

--- Returns the description of the gateway volumes specified in the request
--- @param input table The input table for the describe_storedi_scsi_volumes command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_storedi_scsi_volumes(input)
	return common.execute_aws_command_with_input({ "storagegateway", "describe-storedi-scsi-volumes" }, input)
end

--- Returns a description of specified virtual tapes in the virtual tape shelf (VTS)
--- @param input table The input table for the describe_tape_archives command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_tape_archives(input)
	return common.execute_aws_command_with_input({ "storagegateway", "describe-tape-archives" }, input)
end

--- Returns a list of virtual tape recovery points that are available for the specified tape gateway
--- @param input table The input table for the describe_tape_recovery_points command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_tape_recovery_points(input)
	return common.execute_aws_command_with_input({ "storagegateway", "describe-tape-recovery-points" }, input)
end

--- Returns a description of virtual tapes that correspond to the specified Amazon Resource Names (ARNs)
--- @param input table The input table for the describe_tapes command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_tapes(input)
	return common.execute_aws_command_with_input({ "storagegateway", "describe-tapes" }, input)
end

--- Returns information about the upload buffer of a gateway
--- @param input table The input table for the describe_upload_buffer command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_upload_buffer(input)
	return common.execute_aws_command_with_input({ "storagegateway", "describe-upload-buffer" }, input)
end

--- Returns a description of virtual tape library (VTL) devices for the specified tape gateway
--- @param input table The input table for the describe_vtl_devices command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_vtl_devices(input)
	return common.execute_aws_command_with_input({ "storagegateway", "describe-vtl-devices" }, input)
end

--- Returns information about the working storage of a gateway
--- @param input table The input table for the describe_working_storage command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_working_storage(input)
	return common.execute_aws_command_with_input({ "storagegateway", "describe-working-storage" }, input)
end

--- Disconnects a volume from an iSCSI connection and then detaches the volume from the specified gateway
--- @param input table The input table for the detach_volume command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.detach_volume(input)
	return common.execute_aws_command_with_input({ "storagegateway", "detach-volume" }, input)
end

--- Disables a tape gateway when the gateway is no longer functioning
--- @param input table The input table for the disable_gateway command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.disable_gateway(input)
	return common.execute_aws_command_with_input({ "storagegateway", "disable-gateway" }, input)
end

--- Disassociates an Amazon FSx file system from the specified gateway
--- @param input table The input table for the disassociate_file_system command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.disassociate_file_system(input)
	return common.execute_aws_command_with_input({ "storagegateway", "disassociate-file-system" }, input)
end

--- Starts a process that cleans the specified file share's cache of file entries that are failing upload to Amazon S3
--- @param input table The input table for the evict_files_failing_upload command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.evict_files_failing_upload(input)
	return common.execute_aws_command_with_input({ "storagegateway", "evict-files-failing-upload" }, input)
end

--- Adds a file gateway to an Active Directory domain
--- @param input table The input table for the join_domain command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.join_domain(input)
	return common.execute_aws_command_with_input({ "storagegateway", "join-domain" }, input)
end

--- Lists the automatic tape creation policies for a gateway
--- @param input table The input table for the list_automatic_tape_creation_policies command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_automatic_tape_creation_policies(input)
	return common.execute_aws_command_with_input({ "storagegateway", "list-automatic-tape-creation-policies" }, input)
end

--- Returns a list of existing cache reports for all file shares associated with your Amazon Web Services account
--- @param input table The input table for the list_cache_reports command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_cache_reports(input)
	return common.execute_aws_command_with_input({ "storagegateway", "list-cache-reports" }, input)
end

--- Gets a list of the file shares for a specific S3 File Gateway, or the list of file shares that belong to the calling Amazon Web Services account
--- @param input table The input table for the list_file_shares command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_file_shares(input)
	return common.execute_aws_command_with_input({ "storagegateway", "list-file-shares" }, input)
end

--- Gets a list of FileSystemAssociationSummary objects
--- @param input table The input table for the list_file_system_associations command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_file_system_associations(input)
	return common.execute_aws_command_with_input({ "storagegateway", "list-file-system-associations" }, input)
end

--- Lists gateways owned by an Amazon Web Services account in an Amazon Web Services Region specified in the request
--- @param input table The input table for the list_gateways command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_gateways(input)
	return common.execute_aws_command_with_input({ "storagegateway", "list-gateways" }, input)
end

--- Returns a list of the gateway's local disks
--- @param input table The input table for the list_local_disks command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_local_disks(input)
	return common.execute_aws_command_with_input({ "storagegateway", "list-local-disks" }, input)
end

--- Lists the tags that have been added to the specified resource
--- @param input table The input table for the list_tags_for_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_tags_for_resource(input)
	return common.execute_aws_command_with_input({ "storagegateway", "list-tags-for-resource" }, input)
end

--- Lists custom tape pools
--- @param input table The input table for the list_tape_pools command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_tape_pools(input)
	return common.execute_aws_command_with_input({ "storagegateway", "list-tape-pools" }, input)
end

--- Lists virtual tapes in your virtual tape library (VTL) and your virtual tape shelf (VTS)
--- @param input table The input table for the list_tapes command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_tapes(input)
	return common.execute_aws_command_with_input({ "storagegateway", "list-tapes" }, input)
end

--- Lists iSCSI initiators that are connected to a volume
--- @param input table The input table for the list_volume_initiators command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_volume_initiators(input)
	return common.execute_aws_command_with_input({ "storagegateway", "list-volume-initiators" }, input)
end

--- Lists the recovery points for a specified gateway
--- @param input table The input table for the list_volume_recovery_points command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_volume_recovery_points(input)
	return common.execute_aws_command_with_input({ "storagegateway", "list-volume-recovery-points" }, input)
end

--- Lists the iSCSI stored volumes of a gateway
--- @param input table The input table for the list_volumes command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_volumes(input)
	return common.execute_aws_command_with_input({ "storagegateway", "list-volumes" }, input)
end

--- Sends you notification through Amazon EventBridge when all files written to your file share have been uploaded to Amazon S3
--- @param input table The input table for the notify_when_uploaded command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.notify_when_uploaded(input)
	return common.execute_aws_command_with_input({ "storagegateway", "notify-when-uploaded" }, input)
end

--- Refreshes the cached inventory of objects for the specified file share
--- @param input table The input table for the refresh_cache command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.refresh_cache(input)
	return common.execute_aws_command_with_input({ "storagegateway", "refresh-cache" }, input)
end

--- Removes one or more tags from the specified resource
--- @param input table The input table for the remove_tags_from_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.remove_tags_from_resource(input)
	return common.execute_aws_command_with_input({ "storagegateway", "remove-tags-from-resource" }, input)
end

--- Resets all cache disks that have encountered an error and makes the disks available for reconfiguration as cache storage
--- @param input table The input table for the reset_cache command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.reset_cache(input)
	return common.execute_aws_command_with_input({ "storagegateway", "reset-cache" }, input)
end

--- Retrieves an archived virtual tape from the virtual tape shelf (VTS) to a tape gateway
--- @param input table The input table for the retrieve_tape_archive command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.retrieve_tape_archive(input)
	return common.execute_aws_command_with_input({ "storagegateway", "retrieve-tape-archive" }, input)
end

--- Retrieves the recovery point for the specified virtual tape
--- @param input table The input table for the retrieve_tape_recovery_point command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.retrieve_tape_recovery_point(input)
	return common.execute_aws_command_with_input({ "storagegateway", "retrieve-tape-recovery-point" }, input)
end

--- Sets the password for your VM local console
--- @param input table The input table for the set_local_console_password command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.set_local_console_password(input)
	return common.execute_aws_command_with_input({ "storagegateway", "set-local-console-password" }, input)
end

--- Sets the password for the guest user smbguest
--- @param input table The input table for the set_smb_guest_password command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.set_smb_guest_password(input)
	return common.execute_aws_command_with_input({ "storagegateway", "set-smb-guest-password" }, input)
end

--- Shuts down a Tape Gateway or Volume Gateway
--- @param input table The input table for the shutdown_gateway command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.shutdown_gateway(input)
	return common.execute_aws_command_with_input({ "storagegateway", "shutdown-gateway" }, input)
end

--- Start a test that verifies that the specified gateway is configured for High Availability monitoring in your host environment
--- @param input table The input table for the start_availability_monitor_test command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.start_availability_monitor_test(input)
	return common.execute_aws_command_with_input({ "storagegateway", "start-availability-monitor-test" }, input)
end

--- Starts generating a report of the file metadata currently cached by an S3 File Gateway for a specific file share
--- @param input table The input table for the start_cache_report command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.start_cache_report(input)
	return common.execute_aws_command_with_input({ "storagegateway", "start-cache-report" }, input)
end

--- Starts a gateway that you previously shut down (see ShutdownGateway)
--- @param input table The input table for the start_gateway command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.start_gateway(input)
	return common.execute_aws_command_with_input({ "storagegateway", "start-gateway" }, input)
end

--- Updates the automatic tape creation policy of a gateway
--- @param input table The input table for the update_automatic_tape_creation_policy command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_automatic_tape_creation_policy(input)
	return common.execute_aws_command_with_input({ "storagegateway", "update-automatic-tape-creation-policy" }, input)
end

--- Updates the bandwidth rate limits of a gateway
--- @param input table The input table for the update_bandwidth_rate_limit command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_bandwidth_rate_limit(input)
	return common.execute_aws_command_with_input({ "storagegateway", "update-bandwidth-rate-limit" }, input)
end

--- Updates the bandwidth rate limit schedule for a specified gateway
--- @param input table The input table for the update_bandwidth_rate_limit_schedule command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_bandwidth_rate_limit_schedule(input)
	return common.execute_aws_command_with_input({ "storagegateway", "update-bandwidth-rate-limit-schedule" }, input)
end

--- Updates the Challenge-Handshake Authentication Protocol (CHAP) credentials for a specified iSCSI target
--- @param input table The input table for the update_chap_credentials command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_chap_credentials(input)
	return common.execute_aws_command_with_input({ "storagegateway", "update-chap-credentials" }, input)
end

--- Updates a file system association
--- @param input table The input table for the update_file_system_association command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_file_system_association(input)
	return common.execute_aws_command_with_input({ "storagegateway", "update-file-system-association" }, input)
end

--- Updates a gateway's metadata, which includes the gateway's name, time zone, and metadata cache size
--- @param input table The input table for the update_gateway_information command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_gateway_information(input)
	return common.execute_aws_command_with_input({ "storagegateway", "update-gateway-information" }, input)
end

--- Updates the gateway virtual machine (VM) software
--- @param input table The input table for the update_gateway_software_now command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_gateway_software_now(input)
	return common.execute_aws_command_with_input({ "storagegateway", "update-gateway-software-now" }, input)
end

--- Updates a gateway's maintenance window schedule, with settings for monthly or weekly cadence, specific day and time to begin maintenance, and which types of updates to apply
--- @param input table The input table for the update_maintenance_start_time command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_maintenance_start_time(input)
	return common.execute_aws_command_with_input({ "storagegateway", "update-maintenance-start-time" }, input)
end

--- Updates a Network File System (NFS) file share
--- @param input table The input table for the update_nfs_file_share command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_nfs_file_share(input)
	return common.execute_aws_command_with_input({ "storagegateway", "update-nfs-file-share" }, input)
end

--- Updates a Server Message Block (SMB) file share
--- @param input table The input table for the update_smb_file_share command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_smb_file_share(input)
	return common.execute_aws_command_with_input({ "storagegateway", "update-smb-file-share" }, input)
end

--- Controls whether the shares on an S3 File Gateway are visible in a net view or browse list
--- @param input table The input table for the update_smb_file_share_visibility command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_smb_file_share_visibility(input)
	return common.execute_aws_command_with_input({ "storagegateway", "update-smb-file-share-visibility" }, input)
end

--- Updates the list of Active Directory users and groups that have special permissions for SMB file shares on the gateway
--- @param input table The input table for the update_smb_local_groups command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_smb_local_groups(input)
	return common.execute_aws_command_with_input({ "storagegateway", "update-smb-local-groups" }, input)
end

--- Updates the SMB security strategy level for an Amazon S3 file gateway
--- @param input table The input table for the update_smb_security_strategy command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_smb_security_strategy(input)
	return common.execute_aws_command_with_input({ "storagegateway", "update-smb-security-strategy" }, input)
end

--- Updates a snapshot schedule configured for a gateway volume
--- @param input table The input table for the update_snapshot_schedule command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_snapshot_schedule(input)
	return common.execute_aws_command_with_input({ "storagegateway", "update-snapshot-schedule" }, input)
end

--- Updates the type of medium changer in a tape gateway
--- @param input table The input table for the update_vtl_device_type command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_vtl_device_type(input)
	return common.execute_aws_command_with_input({ "storagegateway", "update-vtl-device-type" }, input)
end

return M
