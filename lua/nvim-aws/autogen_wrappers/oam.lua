-- AUTOGENERATED FILE - DO NOT EDIT
-- AWS Service: oam

local common = require("nvim-aws.common")

--- AWS oam service functions
local M = {}

--- AWS oam create-link operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_link(input, callbacks)
	return common.execute_aws_command_skeleton({ "oam", "create-link" }, input, callbacks)
end

--- AWS oam create-sink operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_sink(input, callbacks)
	return common.execute_aws_command_skeleton({ "oam", "create-sink" }, input, callbacks)
end

--- AWS oam delete-link operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_link(input, callbacks)
	return common.execute_aws_command_skeleton({ "oam", "delete-link" }, input, callbacks)
end

--- AWS oam delete-sink operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_sink(input, callbacks)
	return common.execute_aws_command_skeleton({ "oam", "delete-sink" }, input, callbacks)
end

--- AWS oam get-link operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_link(input, callbacks)
	return common.execute_aws_command_skeleton({ "oam", "get-link" }, input, callbacks)
end

--- AWS oam get-sink operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_sink(input, callbacks)
	return common.execute_aws_command_skeleton({ "oam", "get-sink" }, input, callbacks)
end

--- AWS oam get-sink-policy operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_sink_policy(input, callbacks)
	return common.execute_aws_command_skeleton({ "oam", "get-sink-policy" }, input, callbacks)
end

--- AWS oam list-attached-links operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_attached_links(input, callbacks)
	return common.execute_aws_command_skeleton({ "oam", "list-attached-links" }, input, callbacks)
end

--- AWS oam list-links operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_links(input, callbacks)
	return common.execute_aws_command_skeleton({ "oam", "list-links" }, input, callbacks)
end

--- AWS oam list-sinks operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_sinks(input, callbacks)
	return common.execute_aws_command_skeleton({ "oam", "list-sinks" }, input, callbacks)
end

--- AWS oam list-tags-for-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_tags_for_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "oam", "list-tags-for-resource" }, input, callbacks)
end

--- AWS oam put-sink-policy operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.put_sink_policy(input, callbacks)
	return common.execute_aws_command_skeleton({ "oam", "put-sink-policy" }, input, callbacks)
end

--- AWS oam tag-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.tag_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "oam", "tag-resource" }, input, callbacks)
end

--- AWS oam untag-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.untag_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "oam", "untag-resource" }, input, callbacks)
end

--- AWS oam update-link operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_link(input, callbacks)
	return common.execute_aws_command_skeleton({ "oam", "update-link" }, input, callbacks)
end

return M
