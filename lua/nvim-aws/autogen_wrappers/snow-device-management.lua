-- AUTOGENERATED FILE - DO NOT EDIT
-- AWS Service: snow-device-management

local common = require("nvim-aws.common")

--- AWS snow-device-management service functions
local M = {}

--- AWS snow-device-management cancel-task operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.cancel_task(input, callbacks)
	return common.execute_aws_command_skeleton({ "snow-device-management", "cancel-task" }, input, callbacks)
end

--- AWS snow-device-management create-task operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_task(input, callbacks)
	return common.execute_aws_command_skeleton({ "snow-device-management", "create-task" }, input, callbacks)
end

--- AWS snow-device-management describe-device operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_device(input, callbacks)
	return common.execute_aws_command_skeleton({ "snow-device-management", "describe-device" }, input, callbacks)
end

--- AWS snow-device-management describe-device-ec2-instances operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_device_ec2_instances(input, callbacks)
	return common.execute_aws_command_skeleton({ "snow-device-management", "describe-device-ec2-instances" }, input, callbacks)
end

--- AWS snow-device-management describe-execution operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_execution(input, callbacks)
	return common.execute_aws_command_skeleton({ "snow-device-management", "describe-execution" }, input, callbacks)
end

--- AWS snow-device-management describe-task operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_task(input, callbacks)
	return common.execute_aws_command_skeleton({ "snow-device-management", "describe-task" }, input, callbacks)
end

--- AWS snow-device-management list-device-resources operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_device_resources(input, callbacks)
	return common.execute_aws_command_skeleton({ "snow-device-management", "list-device-resources" }, input, callbacks)
end

--- AWS snow-device-management list-devices operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_devices(input, callbacks)
	return common.execute_aws_command_skeleton({ "snow-device-management", "list-devices" }, input, callbacks)
end

--- AWS snow-device-management list-executions operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_executions(input, callbacks)
	return common.execute_aws_command_skeleton({ "snow-device-management", "list-executions" }, input, callbacks)
end

--- AWS snow-device-management list-tags-for-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_tags_for_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "snow-device-management", "list-tags-for-resource" }, input, callbacks)
end

--- AWS snow-device-management list-tasks operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_tasks(input, callbacks)
	return common.execute_aws_command_skeleton({ "snow-device-management", "list-tasks" }, input, callbacks)
end

--- AWS snow-device-management tag-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.tag_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "snow-device-management", "tag-resource" }, input, callbacks)
end

--- AWS snow-device-management untag-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.untag_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "snow-device-management", "untag-resource" }, input, callbacks)
end

return M
