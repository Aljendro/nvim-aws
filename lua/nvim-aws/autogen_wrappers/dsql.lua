-- AUTOGENERATED FILE - DO NOT EDIT
-- AWS Service: dsql

local common = require("nvim-aws.wrappers.common")

--- AWS DSQL service functions
local M = {}

--- Creates a cluster in Amazon Aurora DSQL
--- @param input table|nil The input table for the create_cluster command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_cluster(input)
	return common.execute_aws_command_with_input({ "dsql", "create-cluster" }, input)
end

--- Deletes a cluster in Amazon Aurora DSQL
--- @param input table|nil The input table for the delete_cluster command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_cluster(input)
	return common.execute_aws_command_with_input({ "dsql", "delete-cluster" }, input)
end

--- Retrieves information about a cluster
--- @param input table|nil The input table for the get_cluster command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_cluster(input)
	return common.execute_aws_command_with_input({ "dsql", "get-cluster" }, input)
end

--- Retrieves information about a list of clusters
--- @param input table|nil The input table for the list_clusters command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_clusters(input)
	return common.execute_aws_command_with_input({ "dsql", "list-clusters" }, input)
end

--- Lists all of the tags for a resource
--- @param input table|nil The input table for the list_tags_for_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_tags_for_resource(input)
	return common.execute_aws_command_with_input({ "dsql", "list-tags-for-resource" }, input)
end

--- Tags a resource with a map of key and value pairs
--- @param input table|nil The input table for the tag_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.tag_resource(input)
	return common.execute_aws_command_with_input({ "dsql", "tag-resource" }, input)
end

--- Removes a tag from a resource
--- @param input table|nil The input table for the untag_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.untag_resource(input)
	return common.execute_aws_command_with_input({ "dsql", "untag-resource" }, input)
end

--- Updates a cluster
--- @param input table|nil The input table for the update_cluster command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_cluster(input)
	return common.execute_aws_command_with_input({ "dsql", "update-cluster" }, input)
end

return M
