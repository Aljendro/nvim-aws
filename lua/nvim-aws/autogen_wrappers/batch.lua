-- AUTOGENERATED FILE - DO NOT EDIT
-- AWS Service: batch

local common = require("nvim-aws.wrappers.common")

--- AWS BATCH service functions
local M = {}

--- AWS batch cancel-job operation
--- @param input table|nil Optional input parameters
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.cancel_job(input)
	return common.execute_aws_command_with_input({ "batch", "cancel-job" }, input)
end

--- AWS batch create-compute-environment operation
--- @param input table|nil Optional input parameters
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_compute_environment(input)
	return common.execute_aws_command_with_input({ "batch", "create-compute-environment" }, input)
end

--- AWS batch create-consumable-resource operation
--- @param input table|nil Optional input parameters
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_consumable_resource(input)
	return common.execute_aws_command_with_input({ "batch", "create-consumable-resource" }, input)
end

--- AWS batch create-job-queue operation
--- @param input table|nil Optional input parameters
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_job_queue(input)
	return common.execute_aws_command_with_input({ "batch", "create-job-queue" }, input)
end

--- AWS batch create-scheduling-policy operation
--- @param input table|nil Optional input parameters
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_scheduling_policy(input)
	return common.execute_aws_command_with_input({ "batch", "create-scheduling-policy" }, input)
end

--- AWS batch delete-compute-environment operation
--- @param input table|nil Optional input parameters
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_compute_environment(input)
	return common.execute_aws_command_with_input({ "batch", "delete-compute-environment" }, input)
end

--- AWS batch delete-consumable-resource operation
--- @param input table|nil Optional input parameters
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_consumable_resource(input)
	return common.execute_aws_command_with_input({ "batch", "delete-consumable-resource" }, input)
end

--- AWS batch delete-job-queue operation
--- @param input table|nil Optional input parameters
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_job_queue(input)
	return common.execute_aws_command_with_input({ "batch", "delete-job-queue" }, input)
end

--- AWS batch delete-scheduling-policy operation
--- @param input table|nil Optional input parameters
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_scheduling_policy(input)
	return common.execute_aws_command_with_input({ "batch", "delete-scheduling-policy" }, input)
end

--- AWS batch deregister-job-definition operation
--- @param input table|nil Optional input parameters
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.deregister_job_definition(input)
	return common.execute_aws_command_with_input({ "batch", "deregister-job-definition" }, input)
end

--- AWS batch describe-compute-environments operation
--- @param input table|nil Optional input parameters
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_compute_environments(input)
	return common.execute_aws_command_with_input({ "batch", "describe-compute-environments" }, input)
end

--- AWS batch describe-consumable-resource operation
--- @param input table|nil Optional input parameters
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_consumable_resource(input)
	return common.execute_aws_command_with_input({ "batch", "describe-consumable-resource" }, input)
end

--- AWS batch describe-job-definitions operation
--- @param input table|nil Optional input parameters
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_job_definitions(input)
	return common.execute_aws_command_with_input({ "batch", "describe-job-definitions" }, input)
end

--- AWS batch describe-job-queues operation
--- @param input table|nil Optional input parameters
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_job_queues(input)
	return common.execute_aws_command_with_input({ "batch", "describe-job-queues" }, input)
end

--- AWS batch describe-jobs operation
--- @param input table|nil Optional input parameters
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_jobs(input)
	return common.execute_aws_command_with_input({ "batch", "describe-jobs" }, input)
end

--- AWS batch describe-scheduling-policies operation
--- @param input table|nil Optional input parameters
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_scheduling_policies(input)
	return common.execute_aws_command_with_input({ "batch", "describe-scheduling-policies" }, input)
end

--- AWS batch get-job-queue-snapshot operation
--- @param input table|nil Optional input parameters
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_job_queue_snapshot(input)
	return common.execute_aws_command_with_input({ "batch", "get-job-queue-snapshot" }, input)
end

--- AWS batch list-consumable-resources operation
--- @param input table|nil Optional input parameters
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_consumable_resources(input)
	return common.execute_aws_command_with_input({ "batch", "list-consumable-resources" }, input)
end

--- AWS batch list-jobs operation
--- @param input table|nil Optional input parameters
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_jobs(input)
	return common.execute_aws_command_with_input({ "batch", "list-jobs" }, input)
end

--- AWS batch list-jobs-by-consumable-resource operation
--- @param input table|nil Optional input parameters
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_jobs_by_consumable_resource(input)
	return common.execute_aws_command_with_input({ "batch", "list-jobs-by-consumable-resource" }, input)
end

--- AWS batch list-scheduling-policies operation
--- @param input table|nil Optional input parameters
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_scheduling_policies(input)
	return common.execute_aws_command_with_input({ "batch", "list-scheduling-policies" }, input)
end

--- AWS batch list-tags-for-resource operation
--- @param input table|nil Optional input parameters
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_tags_for_resource(input)
	return common.execute_aws_command_with_input({ "batch", "list-tags-for-resource" }, input)
end

--- AWS batch register-job-definition operation
--- @param input table|nil Optional input parameters
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.register_job_definition(input)
	return common.execute_aws_command_with_input({ "batch", "register-job-definition" }, input)
end

--- AWS batch submit-job operation
--- @param input table|nil Optional input parameters
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.submit_job(input)
	return common.execute_aws_command_with_input({ "batch", "submit-job" }, input)
end

--- AWS batch tag-resource operation
--- @param input table|nil Optional input parameters
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.tag_resource(input)
	return common.execute_aws_command_with_input({ "batch", "tag-resource" }, input)
end

--- AWS batch terminate-job operation
--- @param input table|nil Optional input parameters
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.terminate_job(input)
	return common.execute_aws_command_with_input({ "batch", "terminate-job" }, input)
end

--- AWS batch untag-resource operation
--- @param input table|nil Optional input parameters
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.untag_resource(input)
	return common.execute_aws_command_with_input({ "batch", "untag-resource" }, input)
end

--- AWS batch update-compute-environment operation
--- @param input table|nil Optional input parameters
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_compute_environment(input)
	return common.execute_aws_command_with_input({ "batch", "update-compute-environment" }, input)
end

--- AWS batch update-consumable-resource operation
--- @param input table|nil Optional input parameters
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_consumable_resource(input)
	return common.execute_aws_command_with_input({ "batch", "update-consumable-resource" }, input)
end

--- AWS batch update-job-queue operation
--- @param input table|nil Optional input parameters
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_job_queue(input)
	return common.execute_aws_command_with_input({ "batch", "update-job-queue" }, input)
end

--- AWS batch update-scheduling-policy operation
--- @param input table|nil Optional input parameters
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_scheduling_policy(input)
	return common.execute_aws_command_with_input({ "batch", "update-scheduling-policy" }, input)
end

return M
