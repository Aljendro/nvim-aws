-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: connectcases

local common = require("nvim-aws.wrappers.common")

--- AWS CONNECTCASES service functions
local M = {}

--- Creates and updates a set of field options for a single select field in a Cases domain
--- @param input table The input table for the batch_put_field_options command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.batch_put_field_options(input)
	return common.execute_aws_command_with_input({ "connectcases", "batch-put-field-options" }, input)
end

--- If you provide a value for PerformedBy
--- @param input table The input table for the create_case command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_case(input)
	return common.execute_aws_command_with_input({ "connectcases", "create-case" }, input)
end

--- Creates a new case rule
--- @param input table The input table for the create_case_rule command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_case_rule(input)
	return common.execute_aws_command_with_input({ "connectcases", "create-case-rule" }, input)
end

--- Creates a domain, which is a container for all case data, such as cases, fields, templates and layouts
--- @param input table The input table for the create_domain command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_domain(input)
	return common.execute_aws_command_with_input({ "connectcases", "create-domain" }, input)
end

--- Creates a field in the Cases domain
--- @param input table The input table for the create_field command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_field(input)
	return common.execute_aws_command_with_input({ "connectcases", "create-field" }, input)
end

--- Creates a layout in the Cases domain
--- @param input table The input table for the create_layout command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_layout(input)
	return common.execute_aws_command_with_input({ "connectcases", "create-layout" }, input)
end

--- Creates a template in the Cases domain
--- @param input table The input table for the create_template command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_template(input)
	return common.execute_aws_command_with_input({ "connectcases", "create-template" }, input)
end

--- Deletes a case rule
--- @param input table The input table for the delete_case_rule command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_case_rule(input)
	return common.execute_aws_command_with_input({ "connectcases", "delete-case-rule" }, input)
end

--- Deletes a Cases domain
--- @param input table The input table for the delete_domain command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_domain(input)
	return common.execute_aws_command_with_input({ "connectcases", "delete-domain" }, input)
end

--- Deletes a field from a cases template
--- @param input table The input table for the delete_field command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_field(input)
	return common.execute_aws_command_with_input({ "connectcases", "delete-field" }, input)
end

--- Deletes a layout from a cases template
--- @param input table The input table for the delete_layout command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_layout(input)
	return common.execute_aws_command_with_input({ "connectcases", "delete-layout" }, input)
end

--- Deletes a cases template
--- @param input table The input table for the delete_template command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_template(input)
	return common.execute_aws_command_with_input({ "connectcases", "delete-template" }, input)
end

--- Returns information about a specific case if it exists
--- @param input table The input table for the get_case command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_case(input)
	return common.execute_aws_command_with_input({ "connectcases", "get-case" }, input)
end

--- Returns the audit history about a specific case if it exists
--- @param input table The input table for the get_case_audit_events command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_case_audit_events(input)
	return common.execute_aws_command_with_input({ "connectcases", "get-case-audit-events" }, input)
end

--- Returns the case event publishing configuration
--- @param input table The input table for the get_case_event_configuration command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_case_event_configuration(input)
	return common.execute_aws_command_with_input({ "connectcases", "get-case-event-configuration" }, input)
end

--- Returns information about a specific domain if it exists
--- @param input table The input table for the get_domain command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_domain(input)
	return common.execute_aws_command_with_input({ "connectcases", "get-domain" }, input)
end

--- Returns the details for the requested layout
--- @param input table The input table for the get_layout command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_layout(input)
	return common.execute_aws_command_with_input({ "connectcases", "get-layout" }, input)
end

--- Returns the details for the requested template
--- @param input table The input table for the get_template command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_template(input)
	return common.execute_aws_command_with_input({ "connectcases", "get-template" }, input)
end

--- Lists all case rules in a Cases domain
--- @param input table The input table for the list_case_rules command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_case_rules(input)
	return common.execute_aws_command_with_input({ "connectcases", "list-case-rules" }, input)
end

--- Lists all cases domains in the Amazon Web Services account
--- @param input table The input table for the list_domains command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_domains(input)
	return common.execute_aws_command_with_input({ "connectcases", "list-domains" }, input)
end

--- Lists all of the field options for a field identifier in the domain
--- @param input table The input table for the list_field_options command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_field_options(input)
	return common.execute_aws_command_with_input({ "connectcases", "list-field-options" }, input)
end

--- Lists all fields in a Cases domain
--- @param input table The input table for the list_fields command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_fields(input)
	return common.execute_aws_command_with_input({ "connectcases", "list-fields" }, input)
end

--- Lists all layouts in the given cases domain
--- @param input table The input table for the list_layouts command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_layouts(input)
	return common.execute_aws_command_with_input({ "connectcases", "list-layouts" }, input)
end

--- Lists tags for a resource
--- @param input table The input table for the list_tags_for_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_tags_for_resource(input)
	return common.execute_aws_command_with_input({ "connectcases", "list-tags-for-resource" }, input)
end

--- Lists all of the templates in a Cases domain
--- @param input table The input table for the list_templates command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_templates(input)
	return common.execute_aws_command_with_input({ "connectcases", "list-templates" }, input)
end

--- Adds case event publishing configuration
--- @param input table The input table for the put_case_event_configuration command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.put_case_event_configuration(input)
	return common.execute_aws_command_with_input({ "connectcases", "put-case-event-configuration" }, input)
end

--- Adds tags to a resource
--- @param input table The input table for the tag_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.tag_resource(input)
	return common.execute_aws_command_with_input({ "connectcases", "tag-resource" }, input)
end

--- Untags a resource
--- @param input table The input table for the untag_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.untag_resource(input)
	return common.execute_aws_command_with_input({ "connectcases", "untag-resource" }, input)
end

--- If you provide a value for PerformedBy
--- @param input table The input table for the update_case command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_case(input)
	return common.execute_aws_command_with_input({ "connectcases", "update-case" }, input)
end

--- Updates a case rule
--- @param input table The input table for the update_case_rule command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_case_rule(input)
	return common.execute_aws_command_with_input({ "connectcases", "update-case-rule" }, input)
end

--- Updates the properties of an existing field
--- @param input table The input table for the update_field command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_field(input)
	return common.execute_aws_command_with_input({ "connectcases", "update-field" }, input)
end

--- Updates the attributes of an existing layout
--- @param input table The input table for the update_layout command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_layout(input)
	return common.execute_aws_command_with_input({ "connectcases", "update-layout" }, input)
end

--- Updates the attributes of an existing template
--- @param input table The input table for the update_template command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_template(input)
	return common.execute_aws_command_with_input({ "connectcases", "update-template" }, input)
end

return M
