-- AUTOGENERATED FILE - DO NOT EDIT
-- AWS Service: accessanalyzer

local common = require("nvim-aws.common")

--- AWS accessanalyzer service functions
local M = {}

--- AWS accessanalyzer apply-archive-rule operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.apply_archive_rule(input, callbacks)
	return common.execute_aws_command_skeleton({ "accessanalyzer", "apply-archive-rule" }, input, callbacks)
end

--- AWS accessanalyzer cancel-policy-generation operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.cancel_policy_generation(input, callbacks)
	return common.execute_aws_command_skeleton({ "accessanalyzer", "cancel-policy-generation" }, input, callbacks)
end

--- AWS accessanalyzer check-access-not-granted operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.check_access_not_granted(input, callbacks)
	return common.execute_aws_command_skeleton({ "accessanalyzer", "check-access-not-granted" }, input, callbacks)
end

--- AWS accessanalyzer check-no-new-access operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.check_no_new_access(input, callbacks)
	return common.execute_aws_command_skeleton({ "accessanalyzer", "check-no-new-access" }, input, callbacks)
end

--- AWS accessanalyzer check-no-public-access operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.check_no_public_access(input, callbacks)
	return common.execute_aws_command_skeleton({ "accessanalyzer", "check-no-public-access" }, input, callbacks)
end

--- AWS accessanalyzer create-access-preview operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_access_preview(input, callbacks)
	return common.execute_aws_command_skeleton({ "accessanalyzer", "create-access-preview" }, input, callbacks)
end

--- AWS accessanalyzer create-analyzer operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_analyzer(input, callbacks)
	return common.execute_aws_command_skeleton({ "accessanalyzer", "create-analyzer" }, input, callbacks)
end

--- AWS accessanalyzer create-archive-rule operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_archive_rule(input, callbacks)
	return common.execute_aws_command_skeleton({ "accessanalyzer", "create-archive-rule" }, input, callbacks)
end

--- AWS accessanalyzer delete-analyzer operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_analyzer(input, callbacks)
	return common.execute_aws_command_skeleton({ "accessanalyzer", "delete-analyzer" }, input, callbacks)
end

--- AWS accessanalyzer delete-archive-rule operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_archive_rule(input, callbacks)
	return common.execute_aws_command_skeleton({ "accessanalyzer", "delete-archive-rule" }, input, callbacks)
end

--- AWS accessanalyzer generate-finding-recommendation operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.generate_finding_recommendation(input, callbacks)
	return common.execute_aws_command_skeleton({ "accessanalyzer", "generate-finding-recommendation" }, input, callbacks)
end

--- AWS accessanalyzer get-access-preview operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_access_preview(input, callbacks)
	return common.execute_aws_command_skeleton({ "accessanalyzer", "get-access-preview" }, input, callbacks)
end

--- AWS accessanalyzer get-analyzed-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_analyzed_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "accessanalyzer", "get-analyzed-resource" }, input, callbacks)
end

--- AWS accessanalyzer get-analyzer operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_analyzer(input, callbacks)
	return common.execute_aws_command_skeleton({ "accessanalyzer", "get-analyzer" }, input, callbacks)
end

--- AWS accessanalyzer get-archive-rule operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_archive_rule(input, callbacks)
	return common.execute_aws_command_skeleton({ "accessanalyzer", "get-archive-rule" }, input, callbacks)
end

--- AWS accessanalyzer get-finding operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_finding(input, callbacks)
	return common.execute_aws_command_skeleton({ "accessanalyzer", "get-finding" }, input, callbacks)
end

--- AWS accessanalyzer get-finding-recommendation operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_finding_recommendation(input, callbacks)
	return common.execute_aws_command_skeleton({ "accessanalyzer", "get-finding-recommendation" }, input, callbacks)
end

--- AWS accessanalyzer get-finding-v2 operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_finding_v2(input, callbacks)
	return common.execute_aws_command_skeleton({ "accessanalyzer", "get-finding-v2" }, input, callbacks)
end

--- AWS accessanalyzer get-findings-statistics operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_findings_statistics(input, callbacks)
	return common.execute_aws_command_skeleton({ "accessanalyzer", "get-findings-statistics" }, input, callbacks)
end

--- AWS accessanalyzer get-generated-policy operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_generated_policy(input, callbacks)
	return common.execute_aws_command_skeleton({ "accessanalyzer", "get-generated-policy" }, input, callbacks)
end

--- AWS accessanalyzer list-access-preview-findings operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_access_preview_findings(input, callbacks)
	return common.execute_aws_command_skeleton({ "accessanalyzer", "list-access-preview-findings" }, input, callbacks)
end

--- AWS accessanalyzer list-access-previews operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_access_previews(input, callbacks)
	return common.execute_aws_command_skeleton({ "accessanalyzer", "list-access-previews" }, input, callbacks)
end

--- AWS accessanalyzer list-analyzed-resources operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_analyzed_resources(input, callbacks)
	return common.execute_aws_command_skeleton({ "accessanalyzer", "list-analyzed-resources" }, input, callbacks)
end

--- AWS accessanalyzer list-analyzers operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_analyzers(input, callbacks)
	return common.execute_aws_command_skeleton({ "accessanalyzer", "list-analyzers" }, input, callbacks)
end

--- AWS accessanalyzer list-archive-rules operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_archive_rules(input, callbacks)
	return common.execute_aws_command_skeleton({ "accessanalyzer", "list-archive-rules" }, input, callbacks)
end

--- AWS accessanalyzer list-findings operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_findings(input, callbacks)
	return common.execute_aws_command_skeleton({ "accessanalyzer", "list-findings" }, input, callbacks)
end

--- AWS accessanalyzer list-findings-v2 operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_findings_v2(input, callbacks)
	return common.execute_aws_command_skeleton({ "accessanalyzer", "list-findings-v2" }, input, callbacks)
end

--- AWS accessanalyzer list-policy-generations operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_policy_generations(input, callbacks)
	return common.execute_aws_command_skeleton({ "accessanalyzer", "list-policy-generations" }, input, callbacks)
end

--- AWS accessanalyzer list-tags-for-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_tags_for_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "accessanalyzer", "list-tags-for-resource" }, input, callbacks)
end

--- AWS accessanalyzer start-policy-generation operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.start_policy_generation(input, callbacks)
	return common.execute_aws_command_skeleton({ "accessanalyzer", "start-policy-generation" }, input, callbacks)
end

--- AWS accessanalyzer start-resource-scan operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.start_resource_scan(input, callbacks)
	return common.execute_aws_command_skeleton({ "accessanalyzer", "start-resource-scan" }, input, callbacks)
end

--- AWS accessanalyzer tag-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.tag_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "accessanalyzer", "tag-resource" }, input, callbacks)
end

--- AWS accessanalyzer untag-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.untag_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "accessanalyzer", "untag-resource" }, input, callbacks)
end

--- AWS accessanalyzer update-analyzer operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_analyzer(input, callbacks)
	return common.execute_aws_command_skeleton({ "accessanalyzer", "update-analyzer" }, input, callbacks)
end

--- AWS accessanalyzer update-archive-rule operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_archive_rule(input, callbacks)
	return common.execute_aws_command_skeleton({ "accessanalyzer", "update-archive-rule" }, input, callbacks)
end

--- AWS accessanalyzer update-findings operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_findings(input, callbacks)
	return common.execute_aws_command_skeleton({ "accessanalyzer", "update-findings" }, input, callbacks)
end

--- AWS accessanalyzer validate-policy operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.validate_policy(input, callbacks)
	return common.execute_aws_command_skeleton({ "accessanalyzer", "validate-policy" }, input, callbacks)
end

return M
