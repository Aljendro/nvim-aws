-- AUTOGENERATED FILE - DO NOT EDIT
-- AWS Service: codecommit

local common = require("nvim-aws.common")

--- AWS codecommit service functions
local M = {}

--- AWS codecommit associate-approval-rule-template-with-repository operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.associate_approval_rule_template_with_repository(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "associate-approval-rule-template-with-repository" }, input, callbacks)
end

--- AWS codecommit batch-associate-approval-rule-template-with-repositories operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.batch_associate_approval_rule_template_with_repositories(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "batch-associate-approval-rule-template-with-repositories" }, input, callbacks)
end

--- AWS codecommit batch-describe-merge-conflicts operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.batch_describe_merge_conflicts(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "batch-describe-merge-conflicts" }, input, callbacks)
end

--- AWS codecommit batch-disassociate-approval-rule-template-from-repositories operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.batch_disassociate_approval_rule_template_from_repositories(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "batch-disassociate-approval-rule-template-from-repositories" }, input, callbacks)
end

--- AWS codecommit batch-get-commits operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.batch_get_commits(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "batch-get-commits" }, input, callbacks)
end

--- AWS codecommit batch-get-repositories operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.batch_get_repositories(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "batch-get-repositories" }, input, callbacks)
end

--- AWS codecommit create-approval-rule-template operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_approval_rule_template(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "create-approval-rule-template" }, input, callbacks)
end

--- AWS codecommit create-branch operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_branch(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "create-branch" }, input, callbacks)
end

--- AWS codecommit create-commit operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_commit(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "create-commit" }, input, callbacks)
end

--- AWS codecommit create-pull-request operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_pull_request(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "create-pull-request" }, input, callbacks)
end

--- AWS codecommit create-pull-request-approval-rule operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_pull_request_approval_rule(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "create-pull-request-approval-rule" }, input, callbacks)
end

--- AWS codecommit create-repository operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_repository(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "create-repository" }, input, callbacks)
end

--- AWS codecommit create-unreferenced-merge-commit operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_unreferenced_merge_commit(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "create-unreferenced-merge-commit" }, input, callbacks)
end

--- AWS codecommit credential-helper operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.credential_helper(input, callbacks)
	return common.execute_aws_command({ "codecommit", "credential-helper" }, input, callbacks)
end

--- AWS codecommit delete-approval-rule-template operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_approval_rule_template(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "delete-approval-rule-template" }, input, callbacks)
end

--- AWS codecommit delete-branch operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_branch(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "delete-branch" }, input, callbacks)
end

--- AWS codecommit delete-comment-content operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_comment_content(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "delete-comment-content" }, input, callbacks)
end

--- AWS codecommit delete-file operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_file(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "delete-file" }, input, callbacks)
end

--- AWS codecommit delete-pull-request-approval-rule operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_pull_request_approval_rule(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "delete-pull-request-approval-rule" }, input, callbacks)
end

--- AWS codecommit delete-repository operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_repository(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "delete-repository" }, input, callbacks)
end

--- AWS codecommit describe-merge-conflicts operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_merge_conflicts(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "describe-merge-conflicts" }, input, callbacks)
end

--- AWS codecommit describe-pull-request-events operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_pull_request_events(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "describe-pull-request-events" }, input, callbacks)
end

--- AWS codecommit disassociate-approval-rule-template-from-repository operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.disassociate_approval_rule_template_from_repository(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "disassociate-approval-rule-template-from-repository" }, input, callbacks)
end

--- AWS codecommit evaluate-pull-request-approval-rules operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.evaluate_pull_request_approval_rules(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "evaluate-pull-request-approval-rules" }, input, callbacks)
end

--- AWS codecommit get-approval-rule-template operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_approval_rule_template(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "get-approval-rule-template" }, input, callbacks)
end

--- AWS codecommit get-blob operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_blob(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "get-blob" }, input, callbacks)
end

--- AWS codecommit get-branch operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_branch(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "get-branch" }, input, callbacks)
end

--- AWS codecommit get-comment operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_comment(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "get-comment" }, input, callbacks)
end

--- AWS codecommit get-comment-reactions operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_comment_reactions(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "get-comment-reactions" }, input, callbacks)
end

--- AWS codecommit get-comments-for-compared-commit operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_comments_for_compared_commit(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "get-comments-for-compared-commit" }, input, callbacks)
end

--- AWS codecommit get-comments-for-pull-request operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_comments_for_pull_request(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "get-comments-for-pull-request" }, input, callbacks)
end

--- AWS codecommit get-commit operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_commit(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "get-commit" }, input, callbacks)
end

--- AWS codecommit get-differences operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_differences(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "get-differences" }, input, callbacks)
end

--- AWS codecommit get-file operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_file(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "get-file" }, input, callbacks)
end

--- AWS codecommit get-folder operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_folder(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "get-folder" }, input, callbacks)
end

--- AWS codecommit get-merge-commit operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_merge_commit(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "get-merge-commit" }, input, callbacks)
end

--- AWS codecommit get-merge-conflicts operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_merge_conflicts(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "get-merge-conflicts" }, input, callbacks)
end

--- AWS codecommit get-merge-options operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_merge_options(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "get-merge-options" }, input, callbacks)
end

--- AWS codecommit get-pull-request operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_pull_request(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "get-pull-request" }, input, callbacks)
end

--- AWS codecommit get-pull-request-approval-states operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_pull_request_approval_states(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "get-pull-request-approval-states" }, input, callbacks)
end

--- AWS codecommit get-pull-request-override-state operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_pull_request_override_state(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "get-pull-request-override-state" }, input, callbacks)
end

--- AWS codecommit get-repository operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_repository(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "get-repository" }, input, callbacks)
end

--- AWS codecommit get-repository-triggers operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_repository_triggers(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "get-repository-triggers" }, input, callbacks)
end

--- AWS codecommit list-approval-rule-templates operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_approval_rule_templates(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "list-approval-rule-templates" }, input, callbacks)
end

--- AWS codecommit list-associated-approval-rule-templates-for-repository operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_associated_approval_rule_templates_for_repository(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "list-associated-approval-rule-templates-for-repository" }, input, callbacks)
end

--- AWS codecommit list-branches operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_branches(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "list-branches" }, input, callbacks)
end

--- AWS codecommit list-file-commit-history operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_file_commit_history(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "list-file-commit-history" }, input, callbacks)
end

--- AWS codecommit list-pull-requests operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_pull_requests(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "list-pull-requests" }, input, callbacks)
end

--- AWS codecommit list-repositories operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_repositories(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "list-repositories" }, input, callbacks)
end

--- AWS codecommit list-repositories-for-approval-rule-template operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_repositories_for_approval_rule_template(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "list-repositories-for-approval-rule-template" }, input, callbacks)
end

--- AWS codecommit list-tags-for-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_tags_for_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "list-tags-for-resource" }, input, callbacks)
end

--- AWS codecommit merge-branches-by-fast-forward operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.merge_branches_by_fast_forward(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "merge-branches-by-fast-forward" }, input, callbacks)
end

--- AWS codecommit merge-branches-by-squash operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.merge_branches_by_squash(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "merge-branches-by-squash" }, input, callbacks)
end

--- AWS codecommit merge-branches-by-three-way operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.merge_branches_by_three_way(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "merge-branches-by-three-way" }, input, callbacks)
end

--- AWS codecommit merge-pull-request-by-fast-forward operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.merge_pull_request_by_fast_forward(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "merge-pull-request-by-fast-forward" }, input, callbacks)
end

--- AWS codecommit merge-pull-request-by-squash operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.merge_pull_request_by_squash(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "merge-pull-request-by-squash" }, input, callbacks)
end

--- AWS codecommit merge-pull-request-by-three-way operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.merge_pull_request_by_three_way(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "merge-pull-request-by-three-way" }, input, callbacks)
end

--- AWS codecommit override-pull-request-approval-rules operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.override_pull_request_approval_rules(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "override-pull-request-approval-rules" }, input, callbacks)
end

--- AWS codecommit post-comment-for-compared-commit operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.post_comment_for_compared_commit(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "post-comment-for-compared-commit" }, input, callbacks)
end

--- AWS codecommit post-comment-for-pull-request operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.post_comment_for_pull_request(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "post-comment-for-pull-request" }, input, callbacks)
end

--- AWS codecommit post-comment-reply operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.post_comment_reply(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "post-comment-reply" }, input, callbacks)
end

--- AWS codecommit put-comment-reaction operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.put_comment_reaction(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "put-comment-reaction" }, input, callbacks)
end

--- AWS codecommit put-file operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.put_file(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "put-file" }, input, callbacks)
end

--- AWS codecommit put-repository-triggers operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.put_repository_triggers(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "put-repository-triggers" }, input, callbacks)
end

--- AWS codecommit tag-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.tag_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "tag-resource" }, input, callbacks)
end

--- AWS codecommit test-repository-triggers operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.test_repository_triggers(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "test-repository-triggers" }, input, callbacks)
end

--- AWS codecommit untag-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.untag_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "untag-resource" }, input, callbacks)
end

--- AWS codecommit update-approval-rule-template-content operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_approval_rule_template_content(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "update-approval-rule-template-content" }, input, callbacks)
end

--- AWS codecommit update-approval-rule-template-description operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_approval_rule_template_description(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "update-approval-rule-template-description" }, input, callbacks)
end

--- AWS codecommit update-approval-rule-template-name operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_approval_rule_template_name(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "update-approval-rule-template-name" }, input, callbacks)
end

--- AWS codecommit update-comment operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_comment(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "update-comment" }, input, callbacks)
end

--- AWS codecommit update-default-branch operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_default_branch(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "update-default-branch" }, input, callbacks)
end

--- AWS codecommit update-pull-request-approval-rule-content operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_pull_request_approval_rule_content(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "update-pull-request-approval-rule-content" }, input, callbacks)
end

--- AWS codecommit update-pull-request-approval-state operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_pull_request_approval_state(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "update-pull-request-approval-state" }, input, callbacks)
end

--- AWS codecommit update-pull-request-description operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_pull_request_description(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "update-pull-request-description" }, input, callbacks)
end

--- AWS codecommit update-pull-request-status operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_pull_request_status(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "update-pull-request-status" }, input, callbacks)
end

--- AWS codecommit update-pull-request-title operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_pull_request_title(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "update-pull-request-title" }, input, callbacks)
end

--- AWS codecommit update-repository-description operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_repository_description(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "update-repository-description" }, input, callbacks)
end

--- AWS codecommit update-repository-encryption-key operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_repository_encryption_key(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "update-repository-encryption-key" }, input, callbacks)
end

--- AWS codecommit update-repository-name operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_repository_name(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecommit", "update-repository-name" }, input, callbacks)
end

return M
