-- AUTOGENERATED FILE - DO NOT EDIT
-- AWS Service: networkmonitor

local common = require("nvim-aws.common")

--- AWS networkmonitor service functions
local M = {}

--- AWS networkmonitor create-monitor operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.create_monitor(input)
	return common.execute_aws_command_skeleton({ "networkmonitor", "create-monitor" }, input)
end

--- AWS networkmonitor create-probe operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.create_probe(input)
	return common.execute_aws_command_skeleton({ "networkmonitor", "create-probe" }, input)
end

--- AWS networkmonitor delete-monitor operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.delete_monitor(input)
	return common.execute_aws_command_skeleton({ "networkmonitor", "delete-monitor" }, input)
end

--- AWS networkmonitor delete-probe operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.delete_probe(input)
	return common.execute_aws_command_skeleton({ "networkmonitor", "delete-probe" }, input)
end

--- AWS networkmonitor get-monitor operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.get_monitor(input)
	return common.execute_aws_command_skeleton({ "networkmonitor", "get-monitor" }, input)
end

--- AWS networkmonitor get-probe operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.get_probe(input)
	return common.execute_aws_command_skeleton({ "networkmonitor", "get-probe" }, input)
end

--- AWS networkmonitor list-monitors operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.list_monitors(input)
	return common.execute_aws_command_skeleton({ "networkmonitor", "list-monitors" }, input)
end

--- AWS networkmonitor list-tags-for-resource operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.list_tags_for_resource(input)
	return common.execute_aws_command_skeleton({ "networkmonitor", "list-tags-for-resource" }, input)
end

--- AWS networkmonitor tag-resource operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.tag_resource(input)
	return common.execute_aws_command_skeleton({ "networkmonitor", "tag-resource" }, input)
end

--- AWS networkmonitor untag-resource operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.untag_resource(input)
	return common.execute_aws_command_skeleton({ "networkmonitor", "untag-resource" }, input)
end

--- AWS networkmonitor update-monitor operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.update_monitor(input)
	return common.execute_aws_command_skeleton({ "networkmonitor", "update-monitor" }, input)
end

--- AWS networkmonitor update-probe operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.update_probe(input)
	return common.execute_aws_command_skeleton({ "networkmonitor", "update-probe" }, input)
end

return M
