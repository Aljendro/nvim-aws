-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-07 21:36:03
-- AWS Service: cloudwatch-logs

local common = require("nvim-aws.wrappers.common")

--- AWS LOGS service functions
local M = {}

--- Associates the specified KMS key with either one log group in the account, or with all stored CloudWatch Logs query insights results in the account
--- @param input table The input table for the associate_kms_key command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.associate_kms_key(input)
	return common.execute_aws_command_with_input({ "logs", "associate-kms-key" }, input)
end

--- Cancels the specified export task
--- @param input table The input table for the cancel_export_task command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.cancel_export_task(input)
	return common.execute_aws_command_with_input({ "logs", "cancel-export-task" }, input)
end

--- Creates a delivery
--- @param input table The input table for the create_delivery command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_delivery(input)
	return common.execute_aws_command_with_input({ "logs", "create-delivery" }, input)
end

--- Creates an export task so that you can efficiently export data from a log group to an Amazon S3 bucket
--- @param input table The input table for the create_export_task command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_export_task(input)
	return common.execute_aws_command_with_input({ "logs", "create-export-task" }, input)
end

--- Creates an anomaly detector that regularly scans one or more log groups and look for patterns and anomalies in the logs
--- @param input table The input table for the create_log_anomaly_detector command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_log_anomaly_detector(input)
	return common.execute_aws_command_with_input({ "logs", "create-log-anomaly-detector" }, input)
end

--- Creates a log group with the specified name
--- @param input table The input table for the create_log_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_log_group(input)
	return common.execute_aws_command_with_input({ "logs", "create-log-group" }, input)
end

--- Creates a log stream for the specified log group
--- @param input table The input table for the create_log_stream command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_log_stream(input)
	return common.execute_aws_command_with_input({ "logs", "create-log-stream" }, input)
end

--- Deletes a CloudWatch Logs account policy
--- @param input table The input table for the delete_account_policy command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_account_policy(input)
	return common.execute_aws_command_with_input({ "logs", "delete-account-policy" }, input)
end

--- Deletes the data protection policy from the specified log group
--- @param input table The input table for the delete_data_protection_policy command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_data_protection_policy(input)
	return common.execute_aws_command_with_input({ "logs", "delete-data-protection-policy" }, input)
end

--- Deletes a delivery
--- @param input table The input table for the delete_delivery command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_delivery(input)
	return common.execute_aws_command_with_input({ "logs", "delete-delivery" }, input)
end

--- Deletes a delivery destination
--- @param input table The input table for the delete_delivery_destination command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_delivery_destination(input)
	return common.execute_aws_command_with_input({ "logs", "delete-delivery-destination" }, input)
end

--- Deletes a delivery destination policy
--- @param input table The input table for the delete_delivery_destination_policy command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_delivery_destination_policy(input)
	return common.execute_aws_command_with_input({ "logs", "delete-delivery-destination-policy" }, input)
end

--- Deletes a delivery source
--- @param input table The input table for the delete_delivery_source command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_delivery_source(input)
	return common.execute_aws_command_with_input({ "logs", "delete-delivery-source" }, input)
end

--- Deletes the specified destination, and eventually disables all the subscription filters that publish to it
--- @param input table The input table for the delete_destination command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_destination(input)
	return common.execute_aws_command_with_input({ "logs", "delete-destination" }, input)
end

--- Deletes a log-group level field index policy that was applied to a single log group
--- @param input table The input table for the delete_index_policy command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_index_policy(input)
	return common.execute_aws_command_with_input({ "logs", "delete-index-policy" }, input)
end

--- Deletes the integration between CloudWatch Logs and OpenSearch Service
--- @param input table The input table for the delete_integration command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_integration(input)
	return common.execute_aws_command_with_input({ "logs", "delete-integration" }, input)
end

--- Deletes the specified CloudWatch Logs anomaly detector
--- @param input table The input table for the delete_log_anomaly_detector command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_log_anomaly_detector(input)
	return common.execute_aws_command_with_input({ "logs", "delete-log-anomaly-detector" }, input)
end

--- Deletes the specified log group and permanently deletes all the archived log events associated with the log group
--- @param input table The input table for the delete_log_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_log_group(input)
	return common.execute_aws_command_with_input({ "logs", "delete-log-group" }, input)
end

--- Deletes the specified log stream and permanently deletes all the archived log events associated with the log stream
--- @param input table The input table for the delete_log_stream command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_log_stream(input)
	return common.execute_aws_command_with_input({ "logs", "delete-log-stream" }, input)
end

--- Deletes the specified metric filter
--- @param input table The input table for the delete_metric_filter command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_metric_filter(input)
	return common.execute_aws_command_with_input({ "logs", "delete-metric-filter" }, input)
end

--- Deletes a saved CloudWatch Logs Insights query definition
--- @param input table The input table for the delete_query_definition command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_query_definition(input)
	return common.execute_aws_command_with_input({ "logs", "delete-query-definition" }, input)
end

--- Deletes a resource policy from this account
--- @param input table The input table for the delete_resource_policy command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_resource_policy(input)
	return common.execute_aws_command_with_input({ "logs", "delete-resource-policy" }, input)
end

--- Deletes the specified retention policy
--- @param input table The input table for the delete_retention_policy command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_retention_policy(input)
	return common.execute_aws_command_with_input({ "logs", "delete-retention-policy" }, input)
end

--- Deletes the specified subscription filter
--- @param input table The input table for the delete_subscription_filter command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_subscription_filter(input)
	return common.execute_aws_command_with_input({ "logs", "delete-subscription-filter" }, input)
end

--- Deletes the log transformer for the specified log group
--- @param input table The input table for the delete_transformer command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_transformer(input)
	return common.execute_aws_command_with_input({ "logs", "delete-transformer" }, input)
end

--- Returns a list of all CloudWatch Logs account policies in the account
--- @param input table The input table for the describe_account_policies command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_account_policies(input)
	return common.execute_aws_command_with_input({ "logs", "describe-account-policies" }, input)
end

--- Use this operation to return the valid and default values that are used when creating delivery sources, delivery destinations, and deliveries
--- @param input table The input table for the describe_configuration_templates command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_configuration_templates(input)
	return common.execute_aws_command_with_input({ "logs", "describe-configuration-templates" }, input)
end

--- Retrieves a list of the deliveries that have been created in the account
--- @param input table The input table for the describe_deliveries command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_deliveries(input)
	return common.execute_aws_command_with_input({ "logs", "describe-deliveries" }, input)
end

--- Retrieves a list of the delivery destinations that have been created in the account
--- @param input table The input table for the describe_delivery_destinations command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_delivery_destinations(input)
	return common.execute_aws_command_with_input({ "logs", "describe-delivery-destinations" }, input)
end

--- Retrieves a list of the delivery sources that have been created in the account
--- @param input table The input table for the describe_delivery_sources command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_delivery_sources(input)
	return common.execute_aws_command_with_input({ "logs", "describe-delivery-sources" }, input)
end

--- Lists all your destinations
--- @param input table The input table for the describe_destinations command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_destinations(input)
	return common.execute_aws_command_with_input({ "logs", "describe-destinations" }, input)
end

--- Lists the specified export tasks
--- @param input table The input table for the describe_export_tasks command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_export_tasks(input)
	return common.execute_aws_command_with_input({ "logs", "describe-export-tasks" }, input)
end

--- Returns a list of field indexes listed in the field index policies of one or more log groups
--- @param input table The input table for the describe_field_indexes command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_field_indexes(input)
	return common.execute_aws_command_with_input({ "logs", "describe-field-indexes" }, input)
end

--- Returns the field index policies of one or more log groups
--- @param input table The input table for the describe_index_policies command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_index_policies(input)
	return common.execute_aws_command_with_input({ "logs", "describe-index-policies" }, input)
end

--- Lists the specified log groups
--- @param input table The input table for the describe_log_groups command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_log_groups(input)
	return common.execute_aws_command_with_input({ "logs", "describe-log-groups" }, input)
end

--- Lists the log streams for the specified log group
--- @param input table The input table for the describe_log_streams command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_log_streams(input)
	return common.execute_aws_command_with_input({ "logs", "describe-log-streams" }, input)
end

--- Lists the specified metric filters
--- @param input table The input table for the describe_metric_filters command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_metric_filters(input)
	return common.execute_aws_command_with_input({ "logs", "describe-metric-filters" }, input)
end

--- Returns a list of CloudWatch Logs Insights queries that are scheduled, running, or have been run recently in this account
--- @param input table The input table for the describe_queries command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_queries(input)
	return common.execute_aws_command_with_input({ "logs", "describe-queries" }, input)
end

--- This operation returns a paginated list of your saved CloudWatch Logs Insights query definitions
--- @param input table The input table for the describe_query_definitions command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_query_definitions(input)
	return common.execute_aws_command_with_input({ "logs", "describe-query-definitions" }, input)
end

--- Lists the resource policies in this account
--- @param input table The input table for the describe_resource_policies command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_resource_policies(input)
	return common.execute_aws_command_with_input({ "logs", "describe-resource-policies" }, input)
end

--- Lists the subscription filters for the specified log group
--- @param input table The input table for the describe_subscription_filters command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_subscription_filters(input)
	return common.execute_aws_command_with_input({ "logs", "describe-subscription-filters" }, input)
end

--- Disassociates the specified KMS key from the specified log group or from all CloudWatch Logs Insights query results in the account
--- @param input table The input table for the disassociate_kms_key command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.disassociate_kms_key(input)
	return common.execute_aws_command_with_input({ "logs", "disassociate-kms-key" }, input)
end

--- Lists log events from the specified log group
--- @param input table The input table for the filter_log_events command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.filter_log_events(input)
	return common.execute_aws_command_with_input({ "logs", "filter-log-events" }, input)
end

--- Returns information about a log group data protection policy
--- @param input table The input table for the get_data_protection_policy command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_data_protection_policy(input)
	return common.execute_aws_command_with_input({ "logs", "get-data-protection-policy" }, input)
end

--- Returns complete information about one logical delivery
--- @param input table The input table for the get_delivery command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_delivery(input)
	return common.execute_aws_command_with_input({ "logs", "get-delivery" }, input)
end

--- Retrieves complete information about one delivery destination
--- @param input table The input table for the get_delivery_destination command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_delivery_destination(input)
	return common.execute_aws_command_with_input({ "logs", "get-delivery-destination" }, input)
end

--- Retrieves the delivery destination policy assigned to the delivery destination that you specify
--- @param input table The input table for the get_delivery_destination_policy command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_delivery_destination_policy(input)
	return common.execute_aws_command_with_input({ "logs", "get-delivery-destination-policy" }, input)
end

--- Retrieves complete information about one delivery source
--- @param input table The input table for the get_delivery_source command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_delivery_source(input)
	return common.execute_aws_command_with_input({ "logs", "get-delivery-source" }, input)
end

--- Returns information about one integration between CloudWatch Logs and OpenSearch Service
--- @param input table The input table for the get_integration command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_integration(input)
	return common.execute_aws_command_with_input({ "logs", "get-integration" }, input)
end

--- Retrieves information about the log anomaly detector that you specify
--- @param input table The input table for the get_log_anomaly_detector command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_log_anomaly_detector(input)
	return common.execute_aws_command_with_input({ "logs", "get-log-anomaly-detector" }, input)
end

--- Lists log events from the specified log stream
--- @param input table The input table for the get_log_events command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_log_events(input)
	return common.execute_aws_command_with_input({ "logs", "get-log-events" }, input)
end

--- Returns a list of the fields that are included in log events in the specified log group
--- @param input table The input table for the get_log_group_fields command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_log_group_fields(input)
	return common.execute_aws_command_with_input({ "logs", "get-log-group-fields" }, input)
end

--- Retrieves all of the fields and values of a single log event
--- @param input table The input table for the get_log_record command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_log_record(input)
	return common.execute_aws_command_with_input({ "logs", "get-log-record" }, input)
end

--- Returns the results from the specified query
--- @param input table The input table for the get_query_results command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_query_results(input)
	return common.execute_aws_command_with_input({ "logs", "get-query-results" }, input)
end

--- Returns the information about the log transformer associated with this log group
--- @param input table The input table for the get_transformer command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_transformer(input)
	return common.execute_aws_command_with_input({ "logs", "get-transformer" }, input)
end

--- Returns a list of anomalies that log anomaly detectors have found
--- @param input table The input table for the list_anomalies command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_anomalies(input)
	return common.execute_aws_command_with_input({ "logs", "list-anomalies" }, input)
end

--- Returns a list of integrations between CloudWatch Logs and other services in this account
--- @param input table The input table for the list_integrations command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_integrations(input)
	return common.execute_aws_command_with_input({ "logs", "list-integrations" }, input)
end

--- Retrieves a list of the log anomaly detectors in the account
--- @param input table The input table for the list_log_anomaly_detectors command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_log_anomaly_detectors(input)
	return common.execute_aws_command_with_input({ "logs", "list-log-anomaly-detectors" }, input)
end

--- Returns a list of the log groups that were analyzed during a single CloudWatch Logs Insights query
--- @param input table The input table for the list_log_groups_for_query command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_log_groups_for_query(input)
	return common.execute_aws_command_with_input({ "logs", "list-log-groups-for-query" }, input)
end

--- Displays the tags associated with a CloudWatch Logs resource
--- @param input table The input table for the list_tags_for_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_tags_for_resource(input)
	return common.execute_aws_command_with_input({ "logs", "list-tags-for-resource" }, input)
end

--- The ListTagsLogGroup operation is on the path to deprecation
--- @param input table The input table for the list_tags_log_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_tags_log_group(input)
	return common.execute_aws_command_with_input({ "logs", "list-tags-log-group" }, input)
end

--- Creates an account-level data protection policy, subscription filter policy, or field index policy that applies to all log groups or a subset of log groups in the account
--- @param input table The input table for the put_account_policy command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.put_account_policy(input)
	return common.execute_aws_command_with_input({ "logs", "put-account-policy" }, input)
end

--- Creates a data protection policy for the specified log group
--- @param input table The input table for the put_data_protection_policy command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.put_data_protection_policy(input)
	return common.execute_aws_command_with_input({ "logs", "put-data-protection-policy" }, input)
end

--- Creates or updates a logical delivery destination
--- @param input table The input table for the put_delivery_destination command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.put_delivery_destination(input)
	return common.execute_aws_command_with_input({ "logs", "put-delivery-destination" }, input)
end

--- Creates and assigns an IAM policy that grants permissions to CloudWatch Logs to deliver logs cross-account to a specified destination in this account
--- @param input table The input table for the put_delivery_destination_policy command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.put_delivery_destination_policy(input)
	return common.execute_aws_command_with_input({ "logs", "put-delivery-destination-policy" }, input)
end

--- Creates or updates a logical delivery source
--- @param input table The input table for the put_delivery_source command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.put_delivery_source(input)
	return common.execute_aws_command_with_input({ "logs", "put-delivery-source" }, input)
end

--- Creates or updates a destination
--- @param input table The input table for the put_destination command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.put_destination(input)
	return common.execute_aws_command_with_input({ "logs", "put-destination" }, input)
end

--- Creates or updates an access policy associated with an existing destination
--- @param input table The input table for the put_destination_policy command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.put_destination_policy(input)
	return common.execute_aws_command_with_input({ "logs", "put-destination-policy" }, input)
end

--- Creates or updates a field index policy for the specified log group
--- @param input table The input table for the put_index_policy command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.put_index_policy(input)
	return common.execute_aws_command_with_input({ "logs", "put-index-policy" }, input)
end

--- Creates an integration between CloudWatch Logs and another service in this account
--- @param input table The input table for the put_integration command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.put_integration(input)
	return common.execute_aws_command_with_input({ "logs", "put-integration" }, input)
end

--- Uploads a batch of log events to the specified log stream
--- @param input table The input table for the put_log_events command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.put_log_events(input)
	return common.execute_aws_command_with_input({ "logs", "put-log-events" }, input)
end

--- Creates or updates a metric filter and associates it with the specified log group
--- @param input table The input table for the put_metric_filter command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.put_metric_filter(input)
	return common.execute_aws_command_with_input({ "logs", "put-metric-filter" }, input)
end

--- Creates or updates a query definition for CloudWatch Logs Insights
--- @param input table The input table for the put_query_definition command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.put_query_definition(input)
	return common.execute_aws_command_with_input({ "logs", "put-query-definition" }, input)
end

--- Creates or updates a resource policy allowing other Amazon Web Services services to put log events to this account, such as Amazon Route 53
--- @param input table The input table for the put_resource_policy command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.put_resource_policy(input)
	return common.execute_aws_command_with_input({ "logs", "put-resource-policy" }, input)
end

--- Sets the retention of the specified log group
--- @param input table The input table for the put_retention_policy command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.put_retention_policy(input)
	return common.execute_aws_command_with_input({ "logs", "put-retention-policy" }, input)
end

--- Creates or updates a subscription filter and associates it with the specified log group
--- @param input table The input table for the put_subscription_filter command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.put_subscription_filter(input)
	return common.execute_aws_command_with_input({ "logs", "put-subscription-filter" }, input)
end

--- Creates or updates a log transformer for a single log group
--- @param input table The input table for the put_transformer command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.put_transformer(input)
	return common.execute_aws_command_with_input({ "logs", "put-transformer" }, input)
end

--- Starts a Live Tail streaming session for one or more log groups
--- @param input table The input table for the start_live_tail command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.start_live_tail(input)
	return common.execute_aws_command_with_input({ "logs", "start-live-tail" }, input)
end

--- Starts a query of one or more log groups using CloudWatch Logs Insights
--- @param input table The input table for the start_query command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.start_query(input)
	return common.execute_aws_command_with_input({ "logs", "start-query" }, input)
end

--- Stops a CloudWatch Logs Insights query that is in progress
--- @param input table The input table for the stop_query command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.stop_query(input)
	return common.execute_aws_command_with_input({ "logs", "stop-query" }, input)
end

--- The TagLogGroup operation is on the path to deprecation
--- @param input table The input table for the tag_log_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.tag_log_group(input)
	return common.execute_aws_command_with_input({ "logs", "tag-log-group" }, input)
end

--- Assigns one or more tags (key-value pairs) to the specified CloudWatch Logs resource
--- @param input table The input table for the tag_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.tag_resource(input)
	return common.execute_aws_command_with_input({ "logs", "tag-resource" }, input)
end

--- Tests the filter pattern of a metric filter against a sample of log event messages
--- @param input table The input table for the test_metric_filter command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.test_metric_filter(input)
	return common.execute_aws_command_with_input({ "logs", "test-metric-filter" }, input)
end

--- Use this operation to test a log transformer
--- @param input table The input table for the test_transformer command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.test_transformer(input)
	return common.execute_aws_command_with_input({ "logs", "test-transformer" }, input)
end

--- The UntagLogGroup operation is on the path to deprecation
--- @param input table The input table for the untag_log_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.untag_log_group(input)
	return common.execute_aws_command_with_input({ "logs", "untag-log-group" }, input)
end

--- Removes one or more tags from the specified resource
--- @param input table The input table for the untag_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.untag_resource(input)
	return common.execute_aws_command_with_input({ "logs", "untag-resource" }, input)
end

--- Use this operation to suppress anomaly detection for a specified anomaly or pattern
--- @param input table The input table for the update_anomaly command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_anomaly(input)
	return common.execute_aws_command_with_input({ "logs", "update-anomaly" }, input)
end

--- Use this operation to update the configuration of a delivery to change either the S3 path pattern or the format of the delivered logs
--- @param input table The input table for the update_delivery_configuration command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_delivery_configuration(input)
	return common.execute_aws_command_with_input({ "logs", "update-delivery-configuration" }, input)
end

--- Updates an existing log anomaly detector
--- @param input table The input table for the update_log_anomaly_detector command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_log_anomaly_detector(input)
	return common.execute_aws_command_with_input({ "logs", "update-log-anomaly-detector" }, input)
end

return M
