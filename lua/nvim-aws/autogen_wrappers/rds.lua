-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-07 21:36:07
-- AWS Service: rds

local common = require("nvim-aws.wrappers.common")

--- AWS RDS service functions
local M = {}

--- Associates an Identity and Access Management (IAM) role with a DB cluster
--- @param input table The input table for the add_role_to_db_cluster command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.add_role_to_db_cluster(input)
	return common.execute_aws_command_with_input({ "rds", "add-role-to-db-cluster" }, input)
end

--- Associates an Amazon Web Services Identity and Access Management (IAM) role with a DB instance
--- @param input table The input table for the add_role_to_db_instance command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.add_role_to_db_instance(input)
	return common.execute_aws_command_with_input({ "rds", "add-role-to-db-instance" }, input)
end

--- Adds a source identifier to an existing RDS event notification subscription
--- @param input table The input table for the add_source_identifier_to_subscription command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.add_source_identifier_to_subscription(input)
	return common.execute_aws_command_with_input({ "rds", "add-source-identifier-to-subscription" }, input)
end

--- Adds metadata tags to an Amazon RDS resource
--- @param input table The input table for the add_tags_to_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.add_tags_to_resource(input)
	return common.execute_aws_command_with_input({ "rds", "add-tags-to-resource" }, input)
end

--- Applies a pending maintenance action to a resource (for example, to a DB instance)
--- @param input table The input table for the apply_pending_maintenance_action command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.apply_pending_maintenance_action(input)
	return common.execute_aws_command_with_input({ "rds", "apply-pending-maintenance-action" }, input)
end

--- Enables ingress to a DBSecurityGroup using one of two forms of authorization
--- @param input table The input table for the authorize_db_security_group_ingress command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.authorize_db_security_group_ingress(input)
	return common.execute_aws_command_with_input({ "rds", "authorize-db-security-group-ingress" }, input)
end

--- Backtracks a DB cluster to a specific time, without creating a new DB cluster
--- @param input table The input table for the backtrack_db_cluster command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.backtrack_db_cluster(input)
	return common.execute_aws_command_with_input({ "rds", "backtrack-db-cluster" }, input)
end

--- Cancels an export task in progress that is exporting a snapshot or cluster to Amazon S3
--- @param input table The input table for the cancel_export_task command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.cancel_export_task(input)
	return common.execute_aws_command_with_input({ "rds", "cancel-export-task" }, input)
end

--- Copies the specified DB cluster parameter group
--- @param input table The input table for the copy_db_cluster_parameter_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.copy_db_cluster_parameter_group(input)
	return common.execute_aws_command_with_input({ "rds", "copy-db-cluster-parameter-group" }, input)
end

--- Copies a snapshot of a DB cluster
--- @param input table The input table for the copy_db_cluster_snapshot command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.copy_db_cluster_snapshot(input)
	return common.execute_aws_command_with_input({ "rds", "copy-db-cluster-snapshot" }, input)
end

--- Copies the specified DB parameter group
--- @param input table The input table for the copy_db_parameter_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.copy_db_parameter_group(input)
	return common.execute_aws_command_with_input({ "rds", "copy-db-parameter-group" }, input)
end

--- Copies the specified DB snapshot
--- @param input table The input table for the copy_db_snapshot command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.copy_db_snapshot(input)
	return common.execute_aws_command_with_input({ "rds", "copy-db-snapshot" }, input)
end

--- Copies the specified option group
--- @param input table The input table for the copy_option_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.copy_option_group(input)
	return common.execute_aws_command_with_input({ "rds", "copy-option-group" }, input)
end

--- Creates a blue/green deployment
--- @param input table The input table for the create_blue_green_deployment command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_blue_green_deployment(input)
	return common.execute_aws_command_with_input({ "rds", "create-blue-green-deployment" }, input)
end

--- Creates a custom DB engine version (CEV)
--- @param input table The input table for the create_custom_db_engine_version command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_custom_db_engine_version(input)
	return common.execute_aws_command_with_input({ "rds", "create-custom-db-engine-version" }, input)
end

--- Creates a new Amazon Aurora DB cluster or Multi-AZ DB cluster
--- @param input table The input table for the create_db_cluster command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_db_cluster(input)
	return common.execute_aws_command_with_input({ "rds", "create-db-cluster" }, input)
end

--- Creates a new custom endpoint and associates it with an Amazon Aurora DB cluster
--- @param input table The input table for the create_db_cluster_endpoint command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_db_cluster_endpoint(input)
	return common.execute_aws_command_with_input({ "rds", "create-db-cluster-endpoint" }, input)
end

--- Creates a new DB cluster parameter group
--- @param input table The input table for the create_db_cluster_parameter_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_db_cluster_parameter_group(input)
	return common.execute_aws_command_with_input({ "rds", "create-db-cluster-parameter-group" }, input)
end

--- Creates a snapshot of a DB cluster
--- @param input table The input table for the create_db_cluster_snapshot command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_db_cluster_snapshot(input)
	return common.execute_aws_command_with_input({ "rds", "create-db-cluster-snapshot" }, input)
end

--- Creates a new DB instance
--- @param input table The input table for the create_db_instance command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_db_instance(input)
	return common.execute_aws_command_with_input({ "rds", "create-db-instance" }, input)
end

--- Creates a new DB instance that acts as a read replica for an existing source DB instance or Multi-AZ DB cluster
--- @param input table The input table for the create_db_instance_read_replica command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_db_instance_read_replica(input)
	return common.execute_aws_command_with_input({ "rds", "create-db-instance-read-replica" }, input)
end

--- Creates a new DB parameter group
--- @param input table The input table for the create_db_parameter_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_db_parameter_group(input)
	return common.execute_aws_command_with_input({ "rds", "create-db-parameter-group" }, input)
end

--- Creates a new DB proxy
--- @param input table The input table for the create_db_proxy command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_db_proxy(input)
	return common.execute_aws_command_with_input({ "rds", "create-db-proxy" }, input)
end

--- Creates a DBProxyEndpoint
--- @param input table The input table for the create_db_proxy_endpoint command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_db_proxy_endpoint(input)
	return common.execute_aws_command_with_input({ "rds", "create-db-proxy-endpoint" }, input)
end

--- Creates a new DB security group
--- @param input table The input table for the create_db_security_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_db_security_group(input)
	return common.execute_aws_command_with_input({ "rds", "create-db-security-group" }, input)
end

--- Creates a new DB shard group for Aurora Limitless Database
--- @param input table The input table for the create_db_shard_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_db_shard_group(input)
	return common.execute_aws_command_with_input({ "rds", "create-db-shard-group" }, input)
end

--- Creates a snapshot of a DB instance
--- @param input table The input table for the create_db_snapshot command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_db_snapshot(input)
	return common.execute_aws_command_with_input({ "rds", "create-db-snapshot" }, input)
end

--- Creates a new DB subnet group
--- @param input table The input table for the create_db_subnet_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_db_subnet_group(input)
	return common.execute_aws_command_with_input({ "rds", "create-db-subnet-group" }, input)
end

--- Creates an RDS event notification subscription
--- @param input table The input table for the create_event_subscription command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_event_subscription(input)
	return common.execute_aws_command_with_input({ "rds", "create-event-subscription" }, input)
end

--- Creates an Aurora global database spread across multiple Amazon Web Services Regions
--- @param input table The input table for the create_global_cluster command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_global_cluster(input)
	return common.execute_aws_command_with_input({ "rds", "create-global-cluster" }, input)
end

--- Creates a zero-ETL integration with Amazon Redshift
--- @param input table The input table for the create_integration command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_integration(input)
	return common.execute_aws_command_with_input({ "rds", "create-integration" }, input)
end

--- Creates a new option group
--- @param input table The input table for the create_option_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_option_group(input)
	return common.execute_aws_command_with_input({ "rds", "create-option-group" }, input)
end

--- Creates a tenant database in a DB instance that uses the multi-tenant configuration
--- @param input table The input table for the create_tenant_database command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_tenant_database(input)
	return common.execute_aws_command_with_input({ "rds", "create-tenant-database" }, input)
end

--- Deletes a blue/green deployment
--- @param input table The input table for the delete_blue_green_deployment command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_blue_green_deployment(input)
	return common.execute_aws_command_with_input({ "rds", "delete-blue-green-deployment" }, input)
end

--- Deletes a custom engine version
--- @param input table The input table for the delete_custom_db_engine_version command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_custom_db_engine_version(input)
	return common.execute_aws_command_with_input({ "rds", "delete-custom-db-engine-version" }, input)
end

--- The DeleteDBCluster action deletes a previously provisioned DB cluster
--- @param input table The input table for the delete_db_cluster command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_db_cluster(input)
	return common.execute_aws_command_with_input({ "rds", "delete-db-cluster" }, input)
end

--- Deletes automated backups using the DbClusterResourceId value of the source DB cluster or the Amazon Resource Name (ARN) of the automated backups
--- @param input table The input table for the delete_db_cluster_automated_backup command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_db_cluster_automated_backup(input)
	return common.execute_aws_command_with_input({ "rds", "delete-db-cluster-automated-backup" }, input)
end

--- Deletes a custom endpoint and removes it from an Amazon Aurora DB cluster
--- @param input table The input table for the delete_db_cluster_endpoint command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_db_cluster_endpoint(input)
	return common.execute_aws_command_with_input({ "rds", "delete-db-cluster-endpoint" }, input)
end

--- Deletes a specified DB cluster parameter group
--- @param input table The input table for the delete_db_cluster_parameter_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_db_cluster_parameter_group(input)
	return common.execute_aws_command_with_input({ "rds", "delete-db-cluster-parameter-group" }, input)
end

--- Deletes a DB cluster snapshot
--- @param input table The input table for the delete_db_cluster_snapshot command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_db_cluster_snapshot(input)
	return common.execute_aws_command_with_input({ "rds", "delete-db-cluster-snapshot" }, input)
end

--- Deletes a previously provisioned DB instance
--- @param input table The input table for the delete_db_instance command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_db_instance(input)
	return common.execute_aws_command_with_input({ "rds", "delete-db-instance" }, input)
end

--- Deletes automated backups using the DbiResourceId value of the source DB instance or the Amazon Resource Name (ARN) of the automated backups
--- @param input table The input table for the delete_db_instance_automated_backup command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_db_instance_automated_backup(input)
	return common.execute_aws_command_with_input({ "rds", "delete-db-instance-automated-backup" }, input)
end

--- Deletes a specified DB parameter group
--- @param input table The input table for the delete_db_parameter_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_db_parameter_group(input)
	return common.execute_aws_command_with_input({ "rds", "delete-db-parameter-group" }, input)
end

--- Deletes an existing DB proxy
--- @param input table The input table for the delete_db_proxy command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_db_proxy(input)
	return common.execute_aws_command_with_input({ "rds", "delete-db-proxy" }, input)
end

--- Deletes a DBProxyEndpoint
--- @param input table The input table for the delete_db_proxy_endpoint command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_db_proxy_endpoint(input)
	return common.execute_aws_command_with_input({ "rds", "delete-db-proxy-endpoint" }, input)
end

--- Deletes a DB security group
--- @param input table The input table for the delete_db_security_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_db_security_group(input)
	return common.execute_aws_command_with_input({ "rds", "delete-db-security-group" }, input)
end

--- Deletes an Aurora Limitless Database DB shard group
--- @param input table The input table for the delete_db_shard_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_db_shard_group(input)
	return common.execute_aws_command_with_input({ "rds", "delete-db-shard-group" }, input)
end

--- Deletes a DB snapshot
--- @param input table The input table for the delete_db_snapshot command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_db_snapshot(input)
	return common.execute_aws_command_with_input({ "rds", "delete-db-snapshot" }, input)
end

--- Deletes a DB subnet group
--- @param input table The input table for the delete_db_subnet_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_db_subnet_group(input)
	return common.execute_aws_command_with_input({ "rds", "delete-db-subnet-group" }, input)
end

--- Deletes an RDS event notification subscription
--- @param input table The input table for the delete_event_subscription command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_event_subscription(input)
	return common.execute_aws_command_with_input({ "rds", "delete-event-subscription" }, input)
end

--- Deletes a global database cluster
--- @param input table The input table for the delete_global_cluster command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_global_cluster(input)
	return common.execute_aws_command_with_input({ "rds", "delete-global-cluster" }, input)
end

--- Deletes a zero-ETL integration with Amazon Redshift
--- @param input table The input table for the delete_integration command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_integration(input)
	return common.execute_aws_command_with_input({ "rds", "delete-integration" }, input)
end

--- Deletes an existing option group
--- @param input table The input table for the delete_option_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_option_group(input)
	return common.execute_aws_command_with_input({ "rds", "delete-option-group" }, input)
end

--- Deletes a tenant database from your DB instance
--- @param input table The input table for the delete_tenant_database command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_tenant_database(input)
	return common.execute_aws_command_with_input({ "rds", "delete-tenant-database" }, input)
end

--- Remove the association between one or more DBProxyTarget data structures and a DBProxyTargetGroup
--- @param input table The input table for the deregister_db_proxy_targets command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.deregister_db_proxy_targets(input)
	return common.execute_aws_command_with_input({ "rds", "deregister-db-proxy-targets" }, input)
end

--- Lists all of the attributes for a customer account
--- @param input table The input table for the describe_account_attributes command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_account_attributes(input)
	return common.execute_aws_command_with_input({ "rds", "describe-account-attributes" }, input)
end

--- Describes one or more blue/green deployments
--- @param input table The input table for the describe_blue_green_deployments command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_blue_green_deployments(input)
	return common.execute_aws_command_with_input({ "rds", "describe-blue-green-deployments" }, input)
end

--- Lists the set of certificate authority (CA) certificates provided by Amazon RDS for this Amazon Web Services account
--- @param input table The input table for the describe_certificates command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_certificates(input)
	return common.execute_aws_command_with_input({ "rds", "describe-certificates" }, input)
end

--- Displays backups for both current and deleted DB clusters
--- @param input table The input table for the describe_db_cluster_automated_backups command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_db_cluster_automated_backups(input)
	return common.execute_aws_command_with_input({ "rds", "describe-db-cluster-automated-backups" }, input)
end

--- Returns information about backtracks for a DB cluster
--- @param input table The input table for the describe_db_cluster_backtracks command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_db_cluster_backtracks(input)
	return common.execute_aws_command_with_input({ "rds", "describe-db-cluster-backtracks" }, input)
end

--- Returns information about endpoints for an Amazon Aurora DB cluster
--- @param input table The input table for the describe_db_cluster_endpoints command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_db_cluster_endpoints(input)
	return common.execute_aws_command_with_input({ "rds", "describe-db-cluster-endpoints" }, input)
end

--- Returns a list of DBClusterParameterGroup descriptions
--- @param input table The input table for the describe_db_cluster_parameter_groups command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_db_cluster_parameter_groups(input)
	return common.execute_aws_command_with_input({ "rds", "describe-db-cluster-parameter-groups" }, input)
end

--- Returns the detailed parameter list for a particular DB cluster parameter group
--- @param input table The input table for the describe_db_cluster_parameters command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_db_cluster_parameters(input)
	return common.execute_aws_command_with_input({ "rds", "describe-db-cluster-parameters" }, input)
end

--- Returns a list of DB cluster snapshot attribute names and values for a manual DB cluster snapshot
--- @param input table The input table for the describe_db_cluster_snapshot_attributes command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_db_cluster_snapshot_attributes(input)
	return common.execute_aws_command_with_input({ "rds", "describe-db-cluster-snapshot-attributes" }, input)
end

--- Returns information about DB cluster snapshots
--- @param input table The input table for the describe_db_cluster_snapshots command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_db_cluster_snapshots(input)
	return common.execute_aws_command_with_input({ "rds", "describe-db-cluster-snapshots" }, input)
end

--- Describes existing Amazon Aurora DB clusters and Multi-AZ DB clusters
--- @param input table The input table for the describe_db_clusters command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_db_clusters(input)
	return common.execute_aws_command_with_input({ "rds", "describe-db-clusters" }, input)
end

--- Describes the properties of specific versions of DB engines
--- @param input table The input table for the describe_db_engine_versions command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_db_engine_versions(input)
	return common.execute_aws_command_with_input({ "rds", "describe-db-engine-versions" }, input)
end

--- Displays backups for both current and deleted instances
--- @param input table The input table for the describe_db_instance_automated_backups command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_db_instance_automated_backups(input)
	return common.execute_aws_command_with_input({ "rds", "describe-db-instance-automated-backups" }, input)
end

--- Describes provisioned RDS instances
--- @param input table The input table for the describe_db_instances command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_db_instances(input)
	return common.execute_aws_command_with_input({ "rds", "describe-db-instances" }, input)
end

--- Returns a list of DB log files for the DB instance
--- @param input table The input table for the describe_db_log_files command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_db_log_files(input)
	return common.execute_aws_command_with_input({ "rds", "describe-db-log-files" }, input)
end

--- Returns a list of DBParameterGroup descriptions
--- @param input table The input table for the describe_db_parameter_groups command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_db_parameter_groups(input)
	return common.execute_aws_command_with_input({ "rds", "describe-db-parameter-groups" }, input)
end

--- Returns the detailed parameter list for a particular DB parameter group
--- @param input table The input table for the describe_db_parameters command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_db_parameters(input)
	return common.execute_aws_command_with_input({ "rds", "describe-db-parameters" }, input)
end

--- Returns information about DB proxies
--- @param input table The input table for the describe_db_proxies command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_db_proxies(input)
	return common.execute_aws_command_with_input({ "rds", "describe-db-proxies" }, input)
end

--- Returns information about DB proxy endpoints
--- @param input table The input table for the describe_db_proxy_endpoints command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_db_proxy_endpoints(input)
	return common.execute_aws_command_with_input({ "rds", "describe-db-proxy-endpoints" }, input)
end

--- Returns information about DB proxy target groups, represented by DBProxyTargetGroup data structures
--- @param input table The input table for the describe_db_proxy_target_groups command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_db_proxy_target_groups(input)
	return common.execute_aws_command_with_input({ "rds", "describe-db-proxy-target-groups" }, input)
end

--- Returns information about DBProxyTarget objects
--- @param input table The input table for the describe_db_proxy_targets command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_db_proxy_targets(input)
	return common.execute_aws_command_with_input({ "rds", "describe-db-proxy-targets" }, input)
end

--- Describes the recommendations to resolve the issues for your DB instances, DB clusters, and DB parameter groups
--- @param input table The input table for the describe_db_recommendations command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_db_recommendations(input)
	return common.execute_aws_command_with_input({ "rds", "describe-db-recommendations" }, input)
end

--- Returns a list of DBSecurityGroup descriptions
--- @param input table The input table for the describe_db_security_groups command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_db_security_groups(input)
	return common.execute_aws_command_with_input({ "rds", "describe-db-security-groups" }, input)
end

--- Describes existing Aurora Limitless Database DB shard groups
--- @param input table The input table for the describe_db_shard_groups command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_db_shard_groups(input)
	return common.execute_aws_command_with_input({ "rds", "describe-db-shard-groups" }, input)
end

--- Returns a list of DB snapshot attribute names and values for a manual DB snapshot
--- @param input table The input table for the describe_db_snapshot_attributes command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_db_snapshot_attributes(input)
	return common.execute_aws_command_with_input({ "rds", "describe-db-snapshot-attributes" }, input)
end

--- Describes the tenant databases that exist in a DB snapshot
--- @param input table The input table for the describe_db_snapshot_tenant_databases command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_db_snapshot_tenant_databases(input)
	return common.execute_aws_command_with_input({ "rds", "describe-db-snapshot-tenant-databases" }, input)
end

--- Returns information about DB snapshots
--- @param input table The input table for the describe_db_snapshots command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_db_snapshots(input)
	return common.execute_aws_command_with_input({ "rds", "describe-db-snapshots" }, input)
end

--- Returns a list of DBSubnetGroup descriptions
--- @param input table The input table for the describe_db_subnet_groups command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_db_subnet_groups(input)
	return common.execute_aws_command_with_input({ "rds", "describe-db-subnet-groups" }, input)
end

--- Returns the default engine and system parameter information for the cluster database engine
--- @param input table The input table for the describe_engine_default_cluster_parameters command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_engine_default_cluster_parameters(input)
	return common.execute_aws_command_with_input({ "rds", "describe-engine-default-cluster-parameters" }, input)
end

--- Returns the default engine and system parameter information for the specified database engine
--- @param input table The input table for the describe_engine_default_parameters command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_engine_default_parameters(input)
	return common.execute_aws_command_with_input({ "rds", "describe-engine-default-parameters" }, input)
end

--- Displays a list of categories for all event source types, or, if specified, for a specified source type
--- @param input table The input table for the describe_event_categories command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_event_categories(input)
	return common.execute_aws_command_with_input({ "rds", "describe-event-categories" }, input)
end

--- Lists all the subscription descriptions for a customer account
--- @param input table The input table for the describe_event_subscriptions command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_event_subscriptions(input)
	return common.execute_aws_command_with_input({ "rds", "describe-event-subscriptions" }, input)
end

--- Returns events related to DB instances, DB clusters, DB parameter groups, DB security groups, DB snapshots, DB cluster snapshots, and RDS Proxies for the past 14 days
--- @param input table The input table for the describe_events command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_events(input)
	return common.execute_aws_command_with_input({ "rds", "describe-events" }, input)
end

--- Returns information about a snapshot or cluster export to Amazon S3
--- @param input table The input table for the describe_export_tasks command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_export_tasks(input)
	return common.execute_aws_command_with_input({ "rds", "describe-export-tasks" }, input)
end

--- Returns information about Aurora global database clusters
--- @param input table The input table for the describe_global_clusters command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_global_clusters(input)
	return common.execute_aws_command_with_input({ "rds", "describe-global-clusters" }, input)
end

--- Describe one or more zero-ETL integrations with Amazon Redshift
--- @param input table The input table for the describe_integrations command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_integrations(input)
	return common.execute_aws_command_with_input({ "rds", "describe-integrations" }, input)
end

--- Describes all available options for the specified engine
--- @param input table The input table for the describe_option_group_options command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_option_group_options(input)
	return common.execute_aws_command_with_input({ "rds", "describe-option-group-options" }, input)
end

--- Describes the available option groups
--- @param input table The input table for the describe_option_groups command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_option_groups(input)
	return common.execute_aws_command_with_input({ "rds", "describe-option-groups" }, input)
end

--- Describes the orderable DB instance options for a specified DB engine
--- @param input table The input table for the describe_orderable_db_instance_options command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_orderable_db_instance_options(input)
	return common.execute_aws_command_with_input({ "rds", "describe-orderable-db-instance-options" }, input)
end

--- Returns a list of resources (for example, DB instances) that have at least one pending maintenance action
--- @param input table The input table for the describe_pending_maintenance_actions command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_pending_maintenance_actions(input)
	return common.execute_aws_command_with_input({ "rds", "describe-pending-maintenance-actions" }, input)
end

--- Returns information about reserved DB instances for this account, or about a specified reserved DB instance
--- @param input table The input table for the describe_reserved_db_instances command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_reserved_db_instances(input)
	return common.execute_aws_command_with_input({ "rds", "describe-reserved-db-instances" }, input)
end

--- Lists available reserved DB instance offerings
--- @param input table The input table for the describe_reserved_db_instances_offerings command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_reserved_db_instances_offerings(input)
	return common.execute_aws_command_with_input({ "rds", "describe-reserved-db-instances-offerings" }, input)
end

--- Returns a list of the source Amazon Web Services Regions where the current Amazon Web Services Region can create a read replica, copy a DB snapshot from, or replicate automated backups from
--- @param input table The input table for the describe_source_regions command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_source_regions(input)
	return common.execute_aws_command_with_input({ "rds", "describe-source-regions" }, input)
end

--- Describes the tenant databases in a DB instance that uses the multi-tenant configuration
--- @param input table The input table for the describe_tenant_databases command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_tenant_databases(input)
	return common.execute_aws_command_with_input({ "rds", "describe-tenant-databases" }, input)
end

--- You can call DescribeValidDBInstanceModifications to learn what modifications you can make to your DB instance
--- @param input table The input table for the describe_valid_db_instance_modifications command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_valid_db_instance_modifications(input)
	return common.execute_aws_command_with_input({ "rds", "describe-valid-db-instance-modifications" }, input)
end

--- Disables the HTTP endpoint for the specified DB cluster
--- @param input table The input table for the disable_http_endpoint command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.disable_http_endpoint(input)
	return common.execute_aws_command_with_input({ "rds", "disable-http-endpoint" }, input)
end

--- Downloads all or a portion of the specified log file, up to 1 MB in size
--- @param input table The input table for the download_db_log_file_portion command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.download_db_log_file_portion(input)
	return common.execute_aws_command_with_input({ "rds", "download-db-log-file-portion" }, input)
end

--- Enables the HTTP endpoint for the DB cluster
--- @param input table The input table for the enable_http_endpoint command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.enable_http_endpoint(input)
	return common.execute_aws_command_with_input({ "rds", "enable-http-endpoint" }, input)
end

--- Forces a failover for a DB cluster
--- @param input table The input table for the failover_db_cluster command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.failover_db_cluster(input)
	return common.execute_aws_command_with_input({ "rds", "failover-db-cluster" }, input)
end

--- Promotes the specified secondary DB cluster to be the primary DB cluster in the global database cluster to fail over or switch over a global database
--- @param input table The input table for the failover_global_cluster command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.failover_global_cluster(input)
	return common.execute_aws_command_with_input({ "rds", "failover-global-cluster" }, input)
end

--- Lists all tags on an Amazon RDS resource
--- @param input table The input table for the list_tags_for_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_tags_for_resource(input)
	return common.execute_aws_command_with_input({ "rds", "list-tags-for-resource" }, input)
end

--- Changes the audit policy state of a database activity stream to either locked (default) or unlocked
--- @param input table The input table for the modify_activity_stream command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.modify_activity_stream(input)
	return common.execute_aws_command_with_input({ "rds", "modify-activity-stream" }, input)
end

--- Override the system-default Secure Sockets Layer/Transport Layer Security (SSL/TLS) certificate for Amazon RDS for new DB instances, or remove the override
--- @param input table The input table for the modify_certificates command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.modify_certificates(input)
	return common.execute_aws_command_with_input({ "rds", "modify-certificates" }, input)
end

--- Set the capacity of an Aurora Serverless v1 DB cluster to a specific value
--- @param input table The input table for the modify_current_db_cluster_capacity command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.modify_current_db_cluster_capacity(input)
	return common.execute_aws_command_with_input({ "rds", "modify-current-db-cluster-capacity" }, input)
end

--- Modifies the status of a custom engine version (CEV)
--- @param input table The input table for the modify_custom_db_engine_version command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.modify_custom_db_engine_version(input)
	return common.execute_aws_command_with_input({ "rds", "modify-custom-db-engine-version" }, input)
end

--- Modifies the settings of an Amazon Aurora DB cluster or a Multi-AZ DB cluster
--- @param input table The input table for the modify_db_cluster command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.modify_db_cluster(input)
	return common.execute_aws_command_with_input({ "rds", "modify-db-cluster" }, input)
end

--- Modifies the properties of an endpoint in an Amazon Aurora DB cluster
--- @param input table The input table for the modify_db_cluster_endpoint command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.modify_db_cluster_endpoint(input)
	return common.execute_aws_command_with_input({ "rds", "modify-db-cluster-endpoint" }, input)
end

--- Modifies the parameters of a DB cluster parameter group
--- @param input table The input table for the modify_db_cluster_parameter_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.modify_db_cluster_parameter_group(input)
	return common.execute_aws_command_with_input({ "rds", "modify-db-cluster-parameter-group" }, input)
end

--- Adds an attribute and values to, or removes an attribute and values from, a manual DB cluster snapshot
--- @param input table The input table for the modify_db_cluster_snapshot_attribute command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.modify_db_cluster_snapshot_attribute(input)
	return common.execute_aws_command_with_input({ "rds", "modify-db-cluster-snapshot-attribute" }, input)
end

--- Modifies settings for a DB instance
--- @param input table The input table for the modify_db_instance command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.modify_db_instance(input)
	return common.execute_aws_command_with_input({ "rds", "modify-db-instance" }, input)
end

--- Modifies the parameters of a DB parameter group
--- @param input table The input table for the modify_db_parameter_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.modify_db_parameter_group(input)
	return common.execute_aws_command_with_input({ "rds", "modify-db-parameter-group" }, input)
end

--- Changes the settings for an existing DB proxy
--- @param input table The input table for the modify_db_proxy command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.modify_db_proxy(input)
	return common.execute_aws_command_with_input({ "rds", "modify-db-proxy" }, input)
end

--- Changes the settings for an existing DB proxy endpoint
--- @param input table The input table for the modify_db_proxy_endpoint command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.modify_db_proxy_endpoint(input)
	return common.execute_aws_command_with_input({ "rds", "modify-db-proxy-endpoint" }, input)
end

--- Modifies the properties of a DBProxyTargetGroup
--- @param input table The input table for the modify_db_proxy_target_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.modify_db_proxy_target_group(input)
	return common.execute_aws_command_with_input({ "rds", "modify-db-proxy-target-group" }, input)
end

--- Updates the recommendation status and recommended action status for the specified recommendation
--- @param input table The input table for the modify_db_recommendation command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.modify_db_recommendation(input)
	return common.execute_aws_command_with_input({ "rds", "modify-db-recommendation" }, input)
end

--- Modifies the settings of an Aurora Limitless Database DB shard group
--- @param input table The input table for the modify_db_shard_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.modify_db_shard_group(input)
	return common.execute_aws_command_with_input({ "rds", "modify-db-shard-group" }, input)
end

--- Updates a manual DB snapshot with a new engine version
--- @param input table The input table for the modify_db_snapshot command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.modify_db_snapshot(input)
	return common.execute_aws_command_with_input({ "rds", "modify-db-snapshot" }, input)
end

--- Adds an attribute and values to, or removes an attribute and values from, a manual DB snapshot
--- @param input table The input table for the modify_db_snapshot_attribute command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.modify_db_snapshot_attribute(input)
	return common.execute_aws_command_with_input({ "rds", "modify-db-snapshot-attribute" }, input)
end

--- Modifies an existing DB subnet group
--- @param input table The input table for the modify_db_subnet_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.modify_db_subnet_group(input)
	return common.execute_aws_command_with_input({ "rds", "modify-db-subnet-group" }, input)
end

--- Modifies an existing RDS event notification subscription
--- @param input table The input table for the modify_event_subscription command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.modify_event_subscription(input)
	return common.execute_aws_command_with_input({ "rds", "modify-event-subscription" }, input)
end

--- Modifies a setting for an Amazon Aurora global database cluster
--- @param input table The input table for the modify_global_cluster command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.modify_global_cluster(input)
	return common.execute_aws_command_with_input({ "rds", "modify-global-cluster" }, input)
end

--- Modifies a zero-ETL integration with Amazon Redshift
--- @param input table The input table for the modify_integration command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.modify_integration(input)
	return common.execute_aws_command_with_input({ "rds", "modify-integration" }, input)
end

--- Modifies an existing option group
--- @param input table The input table for the modify_option_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.modify_option_group(input)
	return common.execute_aws_command_with_input({ "rds", "modify-option-group" }, input)
end

--- Modifies an existing tenant database in a DB instance
--- @param input table The input table for the modify_tenant_database command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.modify_tenant_database(input)
	return common.execute_aws_command_with_input({ "rds", "modify-tenant-database" }, input)
end

--- Promotes a read replica DB instance to a standalone DB instance
--- @param input table The input table for the promote_read_replica command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.promote_read_replica(input)
	return common.execute_aws_command_with_input({ "rds", "promote-read-replica" }, input)
end

--- Promotes a read replica DB cluster to a standalone DB cluster
--- @param input table The input table for the promote_read_replica_db_cluster command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.promote_read_replica_db_cluster(input)
	return common.execute_aws_command_with_input({ "rds", "promote-read-replica-db-cluster" }, input)
end

--- Purchases a reserved DB instance offering
--- @param input table The input table for the purchase_reserved_db_instances_offering command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.purchase_reserved_db_instances_offering(input)
	return common.execute_aws_command_with_input({ "rds", "purchase-reserved-db-instances-offering" }, input)
end

--- You might need to reboot your DB cluster, usually for maintenance reasons
--- @param input table The input table for the reboot_db_cluster command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.reboot_db_cluster(input)
	return common.execute_aws_command_with_input({ "rds", "reboot-db-cluster" }, input)
end

--- You might need to reboot your DB instance, usually for maintenance reasons
--- @param input table The input table for the reboot_db_instance command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.reboot_db_instance(input)
	return common.execute_aws_command_with_input({ "rds", "reboot-db-instance" }, input)
end

--- You might need to reboot your DB shard group, usually for maintenance reasons
--- @param input table The input table for the reboot_db_shard_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.reboot_db_shard_group(input)
	return common.execute_aws_command_with_input({ "rds", "reboot-db-shard-group" }, input)
end

--- Associate one or more DBProxyTarget data structures with a DBProxyTargetGroup
--- @param input table The input table for the register_db_proxy_targets command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.register_db_proxy_targets(input)
	return common.execute_aws_command_with_input({ "rds", "register-db-proxy-targets" }, input)
end

--- Detaches an Aurora secondary cluster from an Aurora global database cluster
--- @param input table The input table for the remove_from_global_cluster command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.remove_from_global_cluster(input)
	return common.execute_aws_command_with_input({ "rds", "remove-from-global-cluster" }, input)
end

--- Removes the asssociation of an Amazon Web Services Identity and Access Management (IAM) role from a DB cluster
--- @param input table The input table for the remove_role_from_db_cluster command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.remove_role_from_db_cluster(input)
	return common.execute_aws_command_with_input({ "rds", "remove-role-from-db-cluster" }, input)
end

--- Disassociates an Amazon Web Services Identity and Access Management (IAM) role from a DB instance
--- @param input table The input table for the remove_role_from_db_instance command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.remove_role_from_db_instance(input)
	return common.execute_aws_command_with_input({ "rds", "remove-role-from-db-instance" }, input)
end

--- Removes a source identifier from an existing RDS event notification subscription
--- @param input table The input table for the remove_source_identifier_from_subscription command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.remove_source_identifier_from_subscription(input)
	return common.execute_aws_command_with_input({ "rds", "remove-source-identifier-from-subscription" }, input)
end

--- Removes metadata tags from an Amazon RDS resource
--- @param input table The input table for the remove_tags_from_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.remove_tags_from_resource(input)
	return common.execute_aws_command_with_input({ "rds", "remove-tags-from-resource" }, input)
end

--- Modifies the parameters of a DB cluster parameter group to the default value
--- @param input table The input table for the reset_db_cluster_parameter_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.reset_db_cluster_parameter_group(input)
	return common.execute_aws_command_with_input({ "rds", "reset-db-cluster-parameter-group" }, input)
end

--- Modifies the parameters of a DB parameter group to the engine/system default value
--- @param input table The input table for the reset_db_parameter_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.reset_db_parameter_group(input)
	return common.execute_aws_command_with_input({ "rds", "reset-db-parameter-group" }, input)
end

--- Creates an Amazon Aurora DB cluster from MySQL data stored in an Amazon S3 bucket
--- @param input table The input table for the restore_db_cluster_from_s3 command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.restore_db_cluster_from_s3(input)
	return common.execute_aws_command_with_input({ "rds", "restore-db-cluster-from-s3" }, input)
end

--- Creates a new DB cluster from a DB snapshot or DB cluster snapshot
--- @param input table The input table for the restore_db_cluster_from_snapshot command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.restore_db_cluster_from_snapshot(input)
	return common.execute_aws_command_with_input({ "rds", "restore-db-cluster-from-snapshot" }, input)
end

--- Restores a DB cluster to an arbitrary point in time
--- @param input table The input table for the restore_db_cluster_to_point_in_time command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.restore_db_cluster_to_point_in_time(input)
	return common.execute_aws_command_with_input({ "rds", "restore-db-cluster-to-point-in-time" }, input)
end

--- Creates a new DB instance from a DB snapshot
--- @param input table The input table for the restore_db_instance_from_db_snapshot command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.restore_db_instance_from_db_snapshot(input)
	return common.execute_aws_command_with_input({ "rds", "restore-db-instance-from-db-snapshot" }, input)
end

--- Amazon Relational Database Service (Amazon RDS) supports importing MySQL databases by using backup files
--- @param input table The input table for the restore_db_instance_from_s3 command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.restore_db_instance_from_s3(input)
	return common.execute_aws_command_with_input({ "rds", "restore-db-instance-from-s3" }, input)
end

--- Restores a DB instance to an arbitrary point in time
--- @param input table The input table for the restore_db_instance_to_point_in_time command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.restore_db_instance_to_point_in_time(input)
	return common.execute_aws_command_with_input({ "rds", "restore-db-instance-to-point-in-time" }, input)
end

--- Revokes ingress from a DBSecurityGroup for previously authorized IP ranges or EC2 or VPC security groups
--- @param input table The input table for the revoke_db_security_group_ingress command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.revoke_db_security_group_ingress(input)
	return common.execute_aws_command_with_input({ "rds", "revoke-db-security-group-ingress" }, input)
end

--- Starts a database activity stream to monitor activity on the database
--- @param input table The input table for the start_activity_stream command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.start_activity_stream(input)
	return common.execute_aws_command_with_input({ "rds", "start-activity-stream" }, input)
end

--- Starts an Amazon Aurora DB cluster that was stopped using the Amazon Web Services console, the stop-db-cluster CLI command, or the StopDBCluster operation
--- @param input table The input table for the start_db_cluster command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.start_db_cluster(input)
	return common.execute_aws_command_with_input({ "rds", "start-db-cluster" }, input)
end

--- Starts an Amazon RDS DB instance that was stopped using the Amazon Web Services console, the stop-db-instance CLI command, or the StopDBInstance operation
--- @param input table The input table for the start_db_instance command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.start_db_instance(input)
	return common.execute_aws_command_with_input({ "rds", "start-db-instance" }, input)
end

--- Enables replication of automated backups to a different Amazon Web Services Region
--- @param input table The input table for the start_db_instance_automated_backups_replication command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.start_db_instance_automated_backups_replication(input)
	return common.execute_aws_command_with_input({ "rds", "start-db-instance-automated-backups-replication" }, input)
end

--- Starts an export of DB snapshot or DB cluster data to Amazon S3
--- @param input table The input table for the start_export_task command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.start_export_task(input)
	return common.execute_aws_command_with_input({ "rds", "start-export-task" }, input)
end

--- Stops a database activity stream that was started using the Amazon Web Services console, the start-activity-stream CLI command, or the StartActivityStream operation
--- @param input table The input table for the stop_activity_stream command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.stop_activity_stream(input)
	return common.execute_aws_command_with_input({ "rds", "stop-activity-stream" }, input)
end

--- Stops an Amazon Aurora DB cluster
--- @param input table The input table for the stop_db_cluster command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.stop_db_cluster(input)
	return common.execute_aws_command_with_input({ "rds", "stop-db-cluster" }, input)
end

--- Stops an Amazon RDS DB instance temporarily
--- @param input table The input table for the stop_db_instance command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.stop_db_instance(input)
	return common.execute_aws_command_with_input({ "rds", "stop-db-instance" }, input)
end

--- Stops automated backup replication for a DB instance
--- @param input table The input table for the stop_db_instance_automated_backups_replication command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.stop_db_instance_automated_backups_replication(input)
	return common.execute_aws_command_with_input({ "rds", "stop-db-instance-automated-backups-replication" }, input)
end

--- Switches over a blue/green deployment
--- @param input table The input table for the switchover_blue_green_deployment command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.switchover_blue_green_deployment(input)
	return common.execute_aws_command_with_input({ "rds", "switchover-blue-green-deployment" }, input)
end

--- Switches over the specified secondary DB cluster to be the new primary DB cluster in the global database cluster
--- @param input table The input table for the switchover_global_cluster command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.switchover_global_cluster(input)
	return common.execute_aws_command_with_input({ "rds", "switchover-global-cluster" }, input)
end

--- Switches over an Oracle standby database in an Oracle Data Guard environment, making it the new primary database
--- @param input table The input table for the switchover_read_replica command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.switchover_read_replica(input)
	return common.execute_aws_command_with_input({ "rds", "switchover-read-replica" }, input)
end

return M
