-- AUTOGENERATED FILE - DO NOT EDIT
-- AWS Service: qconnect

local common = require("nvim-aws.wrappers.common")

--- AWS QCONNECT service functions
local M = {}

--- Creates an Amazon Q in Connect assistant
--- @param input table|nil The input table for the create_assistant command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_assistant(input)
	return common.execute_aws_command_with_input({ "qconnect", "create-assistant" }, input)
end

--- Creates a knowledge base
--- @param input table|nil The input table for the create_knowledge_base command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_knowledge_base(input)
	return common.execute_aws_command_with_input({ "qconnect", "create-knowledge-base" }, input)
end

--- Deletes an assistant
--- @param input table|nil The input table for the delete_assistant command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_assistant(input)
	return common.execute_aws_command_with_input({ "qconnect", "delete-assistant" }, input)
end

--- Deletes the quick response import job
--- @param input table|nil The input table for the delete_import_job command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_import_job(input)
	return common.execute_aws_command_with_input({ "qconnect", "delete-import-job" }, input)
end

--- Deletes the knowledge base
--- @param input table|nil The input table for the delete_knowledge_base command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_knowledge_base(input)
	return common.execute_aws_command_with_input({ "qconnect", "delete-knowledge-base" }, input)
end

--- Retrieves information about an assistant
--- @param input table|nil The input table for the get_assistant command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_assistant(input)
	return common.execute_aws_command_with_input({ "qconnect", "get-assistant" }, input)
end

--- Retrieves the started import job
--- @param input table|nil The input table for the get_import_job command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_import_job(input)
	return common.execute_aws_command_with_input({ "qconnect", "get-import-job" }, input)
end

--- Retrieves information about the knowledge base
--- @param input table|nil The input table for the get_knowledge_base command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_knowledge_base(input)
	return common.execute_aws_command_with_input({ "qconnect", "get-knowledge-base" }, input)
end

--- This API will be discontinued starting June 1, 2024
--- @param input table|nil The input table for the get_recommendations command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_recommendations(input)
	return common.execute_aws_command_with_input({ "qconnect", "get-recommendations" }, input)
end

--- Lists information about assistants
--- @param input table|nil The input table for the list_assistants command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_assistants(input)
	return common.execute_aws_command_with_input({ "qconnect", "list-assistants" }, input)
end

--- Lists information about import jobs
--- @param input table|nil The input table for the list_import_jobs command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_import_jobs(input)
	return common.execute_aws_command_with_input({ "qconnect", "list-import-jobs" }, input)
end

--- Lists the knowledge bases
--- @param input table|nil The input table for the list_knowledge_bases command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_knowledge_bases(input)
	return common.execute_aws_command_with_input({ "qconnect", "list-knowledge-bases" }, input)
end

--- Lists the tags for the specified resource
--- @param input table|nil The input table for the list_tags_for_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_tags_for_resource(input)
	return common.execute_aws_command_with_input({ "qconnect", "list-tags-for-resource" }, input)
end

--- Removes the specified recommendations from the specified assistant's queue of newly available recommendations
--- @param input table|nil The input table for the notify_recommendations_received command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.notify_recommendations_received(input)
	return common.execute_aws_command_with_input({ "qconnect", "notify-recommendations-received" }, input)
end

--- Provides feedback against the specified assistant for the specified target
--- @param input table|nil The input table for the put_feedback command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.put_feedback(input)
	return common.execute_aws_command_with_input({ "qconnect", "put-feedback" }, input)
end

--- This API will be discontinued starting June 1, 2024
--- @param input table|nil The input table for the query_assistant command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.query_assistant(input)
	return common.execute_aws_command_with_input({ "qconnect", "query-assistant" }, input)
end

--- Removes the AI Agent that is set for use by default on an Amazon Q in Connect Assistant
--- @param input table|nil The input table for the remove_assistant_ai_agent command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.remove_assistant_ai_agent(input)
	return common.execute_aws_command_with_input({ "qconnect", "remove-assistant-ai-agent" }, input)
end

--- Removes a URI template from a knowledge base
--- @param input table|nil The input table for the remove_knowledge_base_template_uri command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.remove_knowledge_base_template_uri(input)
	return common.execute_aws_command_with_input({ "qconnect", "remove-knowledge-base-template-uri" }, input)
end

--- Searches for content in a specified knowledge base
--- @param input table|nil The input table for the search_content command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.search_content(input)
	return common.execute_aws_command_with_input({ "qconnect", "search-content" }, input)
end

--- Searches for Amazon Q in Connect message templates in the specified knowledge base
--- @param input table|nil The input table for the search_message_templates command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.search_message_templates(input)
	return common.execute_aws_command_with_input({ "qconnect", "search-message-templates" }, input)
end

--- Searches existing Amazon Q in Connect quick responses in an Amazon Q in Connect knowledge base
--- @param input table|nil The input table for the search_quick_responses command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.search_quick_responses(input)
	return common.execute_aws_command_with_input({ "qconnect", "search-quick-responses" }, input)
end

--- Searches for sessions
--- @param input table|nil The input table for the search_sessions command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.search_sessions(input)
	return common.execute_aws_command_with_input({ "qconnect", "search-sessions" }, input)
end

--- Get a URL to upload content to a knowledge base
--- @param input table|nil The input table for the start_content_upload command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.start_content_upload(input)
	return common.execute_aws_command_with_input({ "qconnect", "start-content-upload" }, input)
end

--- Start an asynchronous job to import Amazon Q in Connect resources from an uploaded source file
--- @param input table|nil The input table for the start_import_job command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.start_import_job(input)
	return common.execute_aws_command_with_input({ "qconnect", "start-import-job" }, input)
end

--- Adds the specified tags to the specified resource
--- @param input table|nil The input table for the tag_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.tag_resource(input)
	return common.execute_aws_command_with_input({ "qconnect", "tag-resource" }, input)
end

--- Removes the specified tags from the specified resource
--- @param input table|nil The input table for the untag_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.untag_resource(input)
	return common.execute_aws_command_with_input({ "qconnect", "untag-resource" }, input)
end

--- Updates the AI Agent that is set for use by default on an Amazon Q in Connect Assistant
--- @param input table|nil The input table for the update_assistant_ai_agent command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_assistant_ai_agent(input)
	return common.execute_aws_command_with_input({ "qconnect", "update-assistant-ai-agent" }, input)
end

--- Updates the template URI of a knowledge base
--- @param input table|nil The input table for the update_knowledge_base_template_uri command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_knowledge_base_template_uri(input)
	return common.execute_aws_command_with_input({ "qconnect", "update-knowledge-base-template-uri" }, input)
end

return M
