-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: codepipeline

local common = require("nvim-aws.wrappers.common")

--- AWS CODEPIPELINE service functions
local M = {}

--- Returns information about a specified job and whether that job has been received by the job worker
--- @param input table The input table for the acknowledge_job command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.acknowledge_job(input)
	return common.execute_aws_command_with_input({ "codepipeline", "acknowledge-job" }, input)
end

--- Confirms a job worker has received the specified job
--- @param input table The input table for the acknowledge_third_party_job command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.acknowledge_third_party_job(input)
	return common.execute_aws_command_with_input({ "codepipeline", "acknowledge-third-party-job" }, input)
end

--- Creates a new custom action that can be used in all pipelines associated with the Amazon Web Services account
--- @param input table The input table for the create_custom_action_type command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_custom_action_type(input)
	return common.execute_aws_command_with_input({ "codepipeline", "create-custom-action-type" }, input)
end

--- Creates a pipeline
--- @param input table The input table for the create_pipeline command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_pipeline(input)
	return common.execute_aws_command_with_input({ "codepipeline", "create-pipeline" }, input)
end

--- Marks a custom action as deleted
--- @param input table The input table for the delete_custom_action_type command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_custom_action_type(input)
	return common.execute_aws_command_with_input({ "codepipeline", "delete-custom-action-type" }, input)
end

--- Deletes the specified pipeline
--- @param input table The input table for the delete_pipeline command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_pipeline(input)
	return common.execute_aws_command_with_input({ "codepipeline", "delete-pipeline" }, input)
end

--- Deletes a previously created webhook by name
--- @param input table The input table for the delete_webhook command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_webhook(input)
	return common.execute_aws_command_with_input({ "codepipeline", "delete-webhook" }, input)
end

--- Removes the connection between the webhook that was created by CodePipeline and the external tool with events to be detected
--- @param input table The input table for the deregister_webhook_with_third_party command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.deregister_webhook_with_third_party(input)
	return common.execute_aws_command_with_input({ "codepipeline", "deregister-webhook-with-third-party" }, input)
end

--- Prevents artifacts in a pipeline from transitioning to the next stage in the pipeline
--- @param input table The input table for the disable_stage_transition command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.disable_stage_transition(input)
	return common.execute_aws_command_with_input({ "codepipeline", "disable-stage-transition" }, input)
end

--- Enables artifacts in a pipeline to transition to a stage in a pipeline
--- @param input table The input table for the enable_stage_transition command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.enable_stage_transition(input)
	return common.execute_aws_command_with_input({ "codepipeline", "enable-stage-transition" }, input)
end

--- Returns information about an action type created for an external provider, where the action is to be used by customers of the external provider
--- @param input table The input table for the get_action_type command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_action_type(input)
	return common.execute_aws_command_with_input({ "codepipeline", "get-action-type" }, input)
end

--- Returns information about a job
--- @param input table The input table for the get_job_details command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_job_details(input)
	return common.execute_aws_command_with_input({ "codepipeline", "get-job-details" }, input)
end

--- Returns the metadata, structure, stages, and actions of a pipeline
--- @param input table The input table for the get_pipeline command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_pipeline(input)
	return common.execute_aws_command_with_input({ "codepipeline", "get-pipeline" }, input)
end

--- Returns information about an execution of a pipeline, including details about artifacts, the pipeline execution ID, and the name, version, and status of the pipeline
--- @param input table The input table for the get_pipeline_execution command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_pipeline_execution(input)
	return common.execute_aws_command_with_input({ "codepipeline", "get-pipeline-execution" }, input)
end

--- Returns information about the state of a pipeline, including the stages and actions
--- @param input table The input table for the get_pipeline_state command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_pipeline_state(input)
	return common.execute_aws_command_with_input({ "codepipeline", "get-pipeline-state" }, input)
end

--- Requests the details of a job for a third party action
--- @param input table The input table for the get_third_party_job_details command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_third_party_job_details(input)
	return common.execute_aws_command_with_input({ "codepipeline", "get-third-party-job-details" }, input)
end

--- Lists the action executions that have occurred in a pipeline
--- @param input table The input table for the list_action_executions command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_action_executions(input)
	return common.execute_aws_command_with_input({ "codepipeline", "list-action-executions" }, input)
end

--- Gets a summary of all CodePipeline action types associated with your account
--- @param input table The input table for the list_action_types command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_action_types(input)
	return common.execute_aws_command_with_input({ "codepipeline", "list-action-types" }, input)
end

--- Gets a summary of the most recent executions for a pipeline
--- @param input table The input table for the list_pipeline_executions command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_pipeline_executions(input)
	return common.execute_aws_command_with_input({ "codepipeline", "list-pipeline-executions" }, input)
end

--- Gets a summary of all of the pipelines associated with your account
--- @param input table The input table for the list_pipelines command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_pipelines(input)
	return common.execute_aws_command_with_input({ "codepipeline", "list-pipelines" }, input)
end

--- Lists the rule executions that have occurred in a pipeline configured for conditions with rules
--- @param input table The input table for the list_rule_executions command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_rule_executions(input)
	return common.execute_aws_command_with_input({ "codepipeline", "list-rule-executions" }, input)
end

--- Lists the rules for the condition
--- @param input table The input table for the list_rule_types command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_rule_types(input)
	return common.execute_aws_command_with_input({ "codepipeline", "list-rule-types" }, input)
end

--- Gets the set of key-value pairs (metadata) that are used to manage the resource
--- @param input table The input table for the list_tags_for_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_tags_for_resource(input)
	return common.execute_aws_command_with_input({ "codepipeline", "list-tags-for-resource" }, input)
end

--- Gets a listing of all the webhooks in this Amazon Web Services Region for this account
--- @param input table The input table for the list_webhooks command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_webhooks(input)
	return common.execute_aws_command_with_input({ "codepipeline", "list-webhooks" }, input)
end

--- Used to override a stage condition
--- @param input table The input table for the override_stage_condition command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.override_stage_condition(input)
	return common.execute_aws_command_with_input({ "codepipeline", "override-stage-condition" }, input)
end

--- Returns information about any jobs for CodePipeline to act on
--- @param input table The input table for the poll_for_jobs command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.poll_for_jobs(input)
	return common.execute_aws_command_with_input({ "codepipeline", "poll-for-jobs" }, input)
end

--- Determines whether there are any third party jobs for a job worker to act on
--- @param input table The input table for the poll_for_third_party_jobs command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.poll_for_third_party_jobs(input)
	return common.execute_aws_command_with_input({ "codepipeline", "poll-for-third-party-jobs" }, input)
end

--- Provides information to CodePipeline about new revisions to a source
--- @param input table The input table for the put_action_revision command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.put_action_revision(input)
	return common.execute_aws_command_with_input({ "codepipeline", "put-action-revision" }, input)
end

--- Provides the response to a manual approval request to CodePipeline
--- @param input table The input table for the put_approval_result command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.put_approval_result(input)
	return common.execute_aws_command_with_input({ "codepipeline", "put-approval-result" }, input)
end

--- Represents the failure of a job as returned to the pipeline by a job worker
--- @param input table The input table for the put_job_failure_result command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.put_job_failure_result(input)
	return common.execute_aws_command_with_input({ "codepipeline", "put-job-failure-result" }, input)
end

--- Represents the success of a job as returned to the pipeline by a job worker
--- @param input table The input table for the put_job_success_result command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.put_job_success_result(input)
	return common.execute_aws_command_with_input({ "codepipeline", "put-job-success-result" }, input)
end

--- Represents the failure of a third party job as returned to the pipeline by a job worker
--- @param input table The input table for the put_third_party_job_failure_result command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.put_third_party_job_failure_result(input)
	return common.execute_aws_command_with_input({ "codepipeline", "put-third-party-job-failure-result" }, input)
end

--- Represents the success of a third party job as returned to the pipeline by a job worker
--- @param input table The input table for the put_third_party_job_success_result command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.put_third_party_job_success_result(input)
	return common.execute_aws_command_with_input({ "codepipeline", "put-third-party-job-success-result" }, input)
end

--- Defines a webhook and returns a unique webhook URL generated by CodePipeline
--- @param input table The input table for the put_webhook command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.put_webhook(input)
	return common.execute_aws_command_with_input({ "codepipeline", "put-webhook" }, input)
end

--- Configures a connection between the webhook that was created and the external tool with events to be detected
--- @param input table The input table for the register_webhook_with_third_party command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.register_webhook_with_third_party(input)
	return common.execute_aws_command_with_input({ "codepipeline", "register-webhook-with-third-party" }, input)
end

--- You can retry a stage that has failed without having to run a pipeline again from the beginning
--- @param input table The input table for the retry_stage_execution command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.retry_stage_execution(input)
	return common.execute_aws_command_with_input({ "codepipeline", "retry-stage-execution" }, input)
end

--- Rolls back a stage execution
--- @param input table The input table for the rollback_stage command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.rollback_stage(input)
	return common.execute_aws_command_with_input({ "codepipeline", "rollback-stage" }, input)
end

--- Starts the specified pipeline
--- @param input table The input table for the start_pipeline_execution command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.start_pipeline_execution(input)
	return common.execute_aws_command_with_input({ "codepipeline", "start-pipeline-execution" }, input)
end

--- Stops the specified pipeline execution
--- @param input table The input table for the stop_pipeline_execution command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.stop_pipeline_execution(input)
	return common.execute_aws_command_with_input({ "codepipeline", "stop-pipeline-execution" }, input)
end

--- Adds to or modifies the tags of the given resource
--- @param input table The input table for the tag_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.tag_resource(input)
	return common.execute_aws_command_with_input({ "codepipeline", "tag-resource" }, input)
end

--- Removes tags from an Amazon Web Services resource
--- @param input table The input table for the untag_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.untag_resource(input)
	return common.execute_aws_command_with_input({ "codepipeline", "untag-resource" }, input)
end

--- Updates an action type that was created with any supported integration model, where the action type is to be used by customers of the action type provider
--- @param input table The input table for the update_action_type command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_action_type(input)
	return common.execute_aws_command_with_input({ "codepipeline", "update-action-type" }, input)
end

--- Updates a specified pipeline with edits or changes to its structure
--- @param input table The input table for the update_pipeline command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_pipeline(input)
	return common.execute_aws_command_with_input({ "codepipeline", "update-pipeline" }, input)
end

return M
