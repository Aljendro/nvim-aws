-- AUTOGENERATED FILE - DO NOT EDIT
-- AWS Service: cloudformation

local common = require("nvim-aws.common")

--- AWS cloudformation service functions
local M = {}

--- AWS cloudformation activate-organizations-access operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.activate_organizations_access(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "activate-organizations-access" }, input, callbacks)
end

--- AWS cloudformation activate-type operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.activate_type(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "activate-type" }, input, callbacks)
end

--- AWS cloudformation batch-describe-type-configurations operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.batch_describe_type_configurations(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "batch-describe-type-configurations" }, input, callbacks)
end

--- AWS cloudformation cancel-update-stack operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.cancel_update_stack(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "cancel-update-stack" }, input, callbacks)
end

--- AWS cloudformation continue-update-rollback operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.continue_update_rollback(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "continue-update-rollback" }, input, callbacks)
end

--- AWS cloudformation create-change-set operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_change_set(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "create-change-set" }, input, callbacks)
end

--- AWS cloudformation create-generated-template operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_generated_template(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "create-generated-template" }, input, callbacks)
end

--- AWS cloudformation create-stack operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_stack(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "create-stack" }, input, callbacks)
end

--- AWS cloudformation create-stack-instances operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_stack_instances(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "create-stack-instances" }, input, callbacks)
end

--- AWS cloudformation create-stack-refactor operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_stack_refactor(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "create-stack-refactor" }, input, callbacks)
end

--- AWS cloudformation create-stack-set operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_stack_set(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "create-stack-set" }, input, callbacks)
end

--- AWS cloudformation deactivate-organizations-access operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.deactivate_organizations_access(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "deactivate-organizations-access" }, input, callbacks)
end

--- AWS cloudformation deactivate-type operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.deactivate_type(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "deactivate-type" }, input, callbacks)
end

--- AWS cloudformation delete-change-set operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_change_set(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "delete-change-set" }, input, callbacks)
end

--- AWS cloudformation delete-generated-template operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_generated_template(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "delete-generated-template" }, input, callbacks)
end

--- AWS cloudformation delete-stack operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_stack(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "delete-stack" }, input, callbacks)
end

--- AWS cloudformation delete-stack-instances operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_stack_instances(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "delete-stack-instances" }, input, callbacks)
end

--- AWS cloudformation delete-stack-set operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_stack_set(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "delete-stack-set" }, input, callbacks)
end

--- AWS cloudformation deploy operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.deploy(input, callbacks)
	return common.execute_aws_command({ "cloudformation", "deploy" }, input, callbacks)
end

--- AWS cloudformation deregister-type operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.deregister_type(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "deregister-type" }, input, callbacks)
end

--- AWS cloudformation describe-account-limits operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_account_limits(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "describe-account-limits" }, input, callbacks)
end

--- AWS cloudformation describe-change-set operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_change_set(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "describe-change-set" }, input, callbacks)
end

--- AWS cloudformation describe-change-set-hooks operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_change_set_hooks(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "describe-change-set-hooks" }, input, callbacks)
end

--- AWS cloudformation describe-generated-template operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_generated_template(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "describe-generated-template" }, input, callbacks)
end

--- AWS cloudformation describe-organizations-access operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_organizations_access(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "describe-organizations-access" }, input, callbacks)
end

--- AWS cloudformation describe-publisher operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_publisher(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "describe-publisher" }, input, callbacks)
end

--- AWS cloudformation describe-resource-scan operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_resource_scan(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "describe-resource-scan" }, input, callbacks)
end

--- AWS cloudformation describe-stack-drift-detection-status operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_stack_drift_detection_status(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "describe-stack-drift-detection-status" }, input, callbacks)
end

--- AWS cloudformation describe-stack-events operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_stack_events(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "describe-stack-events" }, input, callbacks)
end

--- AWS cloudformation describe-stack-instance operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_stack_instance(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "describe-stack-instance" }, input, callbacks)
end

--- AWS cloudformation describe-stack-refactor operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_stack_refactor(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "describe-stack-refactor" }, input, callbacks)
end

--- AWS cloudformation describe-stack-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_stack_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "describe-stack-resource" }, input, callbacks)
end

--- AWS cloudformation describe-stack-resource-drifts operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_stack_resource_drifts(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "describe-stack-resource-drifts" }, input, callbacks)
end

--- AWS cloudformation describe-stack-resources operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_stack_resources(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "describe-stack-resources" }, input, callbacks)
end

--- AWS cloudformation describe-stack-set operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_stack_set(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "describe-stack-set" }, input, callbacks)
end

--- AWS cloudformation describe-stack-set-operation operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_stack_set_operation(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "describe-stack-set-operation" }, input, callbacks)
end

--- AWS cloudformation describe-stacks operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_stacks(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "describe-stacks" }, input, callbacks)
end

--- AWS cloudformation describe-type operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_type(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "describe-type" }, input, callbacks)
end

--- AWS cloudformation describe-type-registration operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_type_registration(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "describe-type-registration" }, input, callbacks)
end

--- AWS cloudformation detect-stack-drift operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.detect_stack_drift(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "detect-stack-drift" }, input, callbacks)
end

--- AWS cloudformation detect-stack-resource-drift operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.detect_stack_resource_drift(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "detect-stack-resource-drift" }, input, callbacks)
end

--- AWS cloudformation detect-stack-set-drift operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.detect_stack_set_drift(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "detect-stack-set-drift" }, input, callbacks)
end

--- AWS cloudformation estimate-template-cost operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.estimate_template_cost(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "estimate-template-cost" }, input, callbacks)
end

--- AWS cloudformation execute-change-set operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.execute_change_set(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "execute-change-set" }, input, callbacks)
end

--- AWS cloudformation execute-stack-refactor operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.execute_stack_refactor(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "execute-stack-refactor" }, input, callbacks)
end

--- AWS cloudformation get-generated-template operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_generated_template(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "get-generated-template" }, input, callbacks)
end

--- AWS cloudformation get-stack-policy operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_stack_policy(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "get-stack-policy" }, input, callbacks)
end

--- AWS cloudformation get-template operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_template(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "get-template" }, input, callbacks)
end

--- AWS cloudformation get-template-summary operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_template_summary(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "get-template-summary" }, input, callbacks)
end

--- AWS cloudformation import-stacks-to-stack-set operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.import_stacks_to_stack_set(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "import-stacks-to-stack-set" }, input, callbacks)
end

--- AWS cloudformation list-change-sets operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_change_sets(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "list-change-sets" }, input, callbacks)
end

--- AWS cloudformation list-exports operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_exports(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "list-exports" }, input, callbacks)
end

--- AWS cloudformation list-generated-templates operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_generated_templates(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "list-generated-templates" }, input, callbacks)
end

--- AWS cloudformation list-hook-results operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_hook_results(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "list-hook-results" }, input, callbacks)
end

--- AWS cloudformation list-imports operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_imports(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "list-imports" }, input, callbacks)
end

--- AWS cloudformation list-resource-scan-related-resources operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_resource_scan_related_resources(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "list-resource-scan-related-resources" }, input, callbacks)
end

--- AWS cloudformation list-resource-scan-resources operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_resource_scan_resources(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "list-resource-scan-resources" }, input, callbacks)
end

--- AWS cloudformation list-resource-scans operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_resource_scans(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "list-resource-scans" }, input, callbacks)
end

--- AWS cloudformation list-stack-instance-resource-drifts operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_stack_instance_resource_drifts(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "list-stack-instance-resource-drifts" }, input, callbacks)
end

--- AWS cloudformation list-stack-instances operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_stack_instances(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "list-stack-instances" }, input, callbacks)
end

--- AWS cloudformation list-stack-refactor-actions operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_stack_refactor_actions(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "list-stack-refactor-actions" }, input, callbacks)
end

--- AWS cloudformation list-stack-refactors operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_stack_refactors(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "list-stack-refactors" }, input, callbacks)
end

--- AWS cloudformation list-stack-resources operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_stack_resources(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "list-stack-resources" }, input, callbacks)
end

--- AWS cloudformation list-stack-set-auto-deployment-targets operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_stack_set_auto_deployment_targets(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "list-stack-set-auto-deployment-targets" }, input, callbacks)
end

--- AWS cloudformation list-stack-set-operation-results operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_stack_set_operation_results(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "list-stack-set-operation-results" }, input, callbacks)
end

--- AWS cloudformation list-stack-set-operations operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_stack_set_operations(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "list-stack-set-operations" }, input, callbacks)
end

--- AWS cloudformation list-stack-sets operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_stack_sets(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "list-stack-sets" }, input, callbacks)
end

--- AWS cloudformation list-stacks operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_stacks(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "list-stacks" }, input, callbacks)
end

--- AWS cloudformation list-type-registrations operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_type_registrations(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "list-type-registrations" }, input, callbacks)
end

--- AWS cloudformation list-type-versions operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_type_versions(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "list-type-versions" }, input, callbacks)
end

--- AWS cloudformation list-types operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_types(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "list-types" }, input, callbacks)
end

--- AWS cloudformation package operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.package(input, callbacks)
	return common.execute_aws_command({ "cloudformation", "package" }, input, callbacks)
end

--- AWS cloudformation publish-type operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.publish_type(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "publish-type" }, input, callbacks)
end

--- AWS cloudformation record-handler-progress operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.record_handler_progress(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "record-handler-progress" }, input, callbacks)
end

--- AWS cloudformation register-publisher operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.register_publisher(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "register-publisher" }, input, callbacks)
end

--- AWS cloudformation register-type operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.register_type(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "register-type" }, input, callbacks)
end

--- AWS cloudformation rollback-stack operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.rollback_stack(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "rollback-stack" }, input, callbacks)
end

--- AWS cloudformation set-stack-policy operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.set_stack_policy(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "set-stack-policy" }, input, callbacks)
end

--- AWS cloudformation set-type-configuration operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.set_type_configuration(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "set-type-configuration" }, input, callbacks)
end

--- AWS cloudformation set-type-default-version operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.set_type_default_version(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "set-type-default-version" }, input, callbacks)
end

--- AWS cloudformation signal-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.signal_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "signal-resource" }, input, callbacks)
end

--- AWS cloudformation start-resource-scan operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.start_resource_scan(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "start-resource-scan" }, input, callbacks)
end

--- AWS cloudformation stop-stack-set-operation operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.stop_stack_set_operation(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "stop-stack-set-operation" }, input, callbacks)
end

--- AWS cloudformation test-type operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.test_type(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "test-type" }, input, callbacks)
end

--- AWS cloudformation update-generated-template operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_generated_template(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "update-generated-template" }, input, callbacks)
end

--- AWS cloudformation update-stack operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_stack(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "update-stack" }, input, callbacks)
end

--- AWS cloudformation update-stack-instances operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_stack_instances(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "update-stack-instances" }, input, callbacks)
end

--- AWS cloudformation update-stack-set operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_stack_set(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "update-stack-set" }, input, callbacks)
end

--- AWS cloudformation update-termination-protection operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_termination_protection(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "update-termination-protection" }, input, callbacks)
end

--- AWS cloudformation validate-template operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.validate_template(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudformation", "validate-template" }, input, callbacks)
end

--- AWS cloudformation wait operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.wait(input, callbacks)
	return common.execute_aws_command({ "cloudformation", "wait" }, input, callbacks)
end

return M
