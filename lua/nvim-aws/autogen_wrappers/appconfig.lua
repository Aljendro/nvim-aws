-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-07 21:36:02
-- AWS Service: appconfig

local common = require("nvim-aws.wrappers.common")

--- AWS APPCONFIG service functions
local M = {}

--- Creates an application
--- @param input table The input table for the create_application command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_application(input)
	return common.execute_aws_command_with_input({ "appconfig", "create-application" }, input)
end

--- Creates a configuration profile, which is information that enables AppConfig to access the configuration source
--- @param input table The input table for the create_configuration_profile command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_configuration_profile(input)
	return common.execute_aws_command_with_input({ "appconfig", "create-configuration-profile" }, input)
end

--- Creates a deployment strategy that defines important criteria for rolling out your configuration to the designated targets
--- @param input table The input table for the create_deployment_strategy command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_deployment_strategy(input)
	return common.execute_aws_command_with_input({ "appconfig", "create-deployment-strategy" }, input)
end

--- Creates an environment
--- @param input table The input table for the create_environment command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_environment(input)
	return common.execute_aws_command_with_input({ "appconfig", "create-environment" }, input)
end

--- Creates an AppConfig extension
--- @param input table The input table for the create_extension command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_extension(input)
	return common.execute_aws_command_with_input({ "appconfig", "create-extension" }, input)
end

--- When you create an extension or configure an Amazon Web Services authored extension, you associate the extension with an AppConfig application, environment, or configuration profile
--- @param input table The input table for the create_extension_association command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_extension_association(input)
	return common.execute_aws_command_with_input({ "appconfig", "create-extension-association" }, input)
end

--- Creates a new configuration in the AppConfig hosted configuration store
--- @param input table The input table for the create_hosted_configuration_version command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_hosted_configuration_version(input)
	return common.execute_aws_command_with_input({ "appconfig", "create-hosted-configuration-version" }, input)
end

--- Deletes an application
--- @param input table The input table for the delete_application command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_application(input)
	return common.execute_aws_command_with_input({ "appconfig", "delete-application" }, input)
end

--- Deletes a configuration profile
--- @param input table The input table for the delete_configuration_profile command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_configuration_profile(input)
	return common.execute_aws_command_with_input({ "appconfig", "delete-configuration-profile" }, input)
end

--- Deletes a deployment strategy
--- @param input table The input table for the delete_deployment_strategy command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_deployment_strategy(input)
	return common.execute_aws_command_with_input({ "appconfig", "delete-deployment-strategy" }, input)
end

--- Deletes an environment
--- @param input table The input table for the delete_environment command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_environment(input)
	return common.execute_aws_command_with_input({ "appconfig", "delete-environment" }, input)
end

--- Deletes an AppConfig extension
--- @param input table The input table for the delete_extension command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_extension(input)
	return common.execute_aws_command_with_input({ "appconfig", "delete-extension" }, input)
end

--- Deletes an extension association
--- @param input table The input table for the delete_extension_association command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_extension_association(input)
	return common.execute_aws_command_with_input({ "appconfig", "delete-extension-association" }, input)
end

--- Deletes a version of a configuration from the AppConfig hosted configuration store
--- @param input table The input table for the delete_hosted_configuration_version command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_hosted_configuration_version(input)
	return common.execute_aws_command_with_input({ "appconfig", "delete-hosted-configuration-version" }, input)
end

--- Returns information about the status of the DeletionProtection parameter
--- @param input table Optional input parameters
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_account_settings(input)
	return common.execute_aws_command_with_input({ "appconfig", "get-account-settings" }, input)
end

--- Retrieves information about an application
--- @param input table The input table for the get_application command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_application(input)
	return common.execute_aws_command_with_input({ "appconfig", "get-application" }, input)
end

--- (Deprecated) Retrieves the latest deployed configuration
--- @param input table The input table for the get_configuration command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_configuration(input)
	return common.execute_aws_command_with_input({ "appconfig", "get-configuration" }, input)
end

--- Retrieves information about a configuration profile
--- @param input table The input table for the get_configuration_profile command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_configuration_profile(input)
	return common.execute_aws_command_with_input({ "appconfig", "get-configuration-profile" }, input)
end

--- Retrieves information about a configuration deployment
--- @param input table The input table for the get_deployment command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_deployment(input)
	return common.execute_aws_command_with_input({ "appconfig", "get-deployment" }, input)
end

--- Retrieves information about a deployment strategy
--- @param input table The input table for the get_deployment_strategy command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_deployment_strategy(input)
	return common.execute_aws_command_with_input({ "appconfig", "get-deployment-strategy" }, input)
end

--- Retrieves information about an environment
--- @param input table The input table for the get_environment command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_environment(input)
	return common.execute_aws_command_with_input({ "appconfig", "get-environment" }, input)
end

--- Returns information about an AppConfig extension
--- @param input table The input table for the get_extension command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_extension(input)
	return common.execute_aws_command_with_input({ "appconfig", "get-extension" }, input)
end

--- Returns information about an AppConfig extension association
--- @param input table The input table for the get_extension_association command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_extension_association(input)
	return common.execute_aws_command_with_input({ "appconfig", "get-extension-association" }, input)
end

--- Retrieves information about a specific configuration version
--- @param input table The input table for the get_hosted_configuration_version command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_hosted_configuration_version(input)
	return common.execute_aws_command_with_input({ "appconfig", "get-hosted-configuration-version" }, input)
end

--- Lists all applications in your Amazon Web Services account
--- @param input table The input table for the list_applications command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_applications(input)
	return common.execute_aws_command_with_input({ "appconfig", "list-applications" }, input)
end

--- Lists the configuration profiles for an application
--- @param input table The input table for the list_configuration_profiles command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_configuration_profiles(input)
	return common.execute_aws_command_with_input({ "appconfig", "list-configuration-profiles" }, input)
end

--- Lists deployment strategies
--- @param input table The input table for the list_deployment_strategies command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_deployment_strategies(input)
	return common.execute_aws_command_with_input({ "appconfig", "list-deployment-strategies" }, input)
end

--- Lists the deployments for an environment in descending deployment number order
--- @param input table The input table for the list_deployments command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_deployments(input)
	return common.execute_aws_command_with_input({ "appconfig", "list-deployments" }, input)
end

--- Lists the environments for an application
--- @param input table The input table for the list_environments command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_environments(input)
	return common.execute_aws_command_with_input({ "appconfig", "list-environments" }, input)
end

--- Lists all AppConfig extension associations in the account
--- @param input table The input table for the list_extension_associations command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_extension_associations(input)
	return common.execute_aws_command_with_input({ "appconfig", "list-extension-associations" }, input)
end

--- Lists all custom and Amazon Web Services authored AppConfig extensions in the account
--- @param input table The input table for the list_extensions command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_extensions(input)
	return common.execute_aws_command_with_input({ "appconfig", "list-extensions" }, input)
end

--- Lists configurations stored in the AppConfig hosted configuration store by version
--- @param input table The input table for the list_hosted_configuration_versions command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_hosted_configuration_versions(input)
	return common.execute_aws_command_with_input({ "appconfig", "list-hosted-configuration-versions" }, input)
end

--- Retrieves the list of key-value tags assigned to the resource
--- @param input table The input table for the list_tags_for_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_tags_for_resource(input)
	return common.execute_aws_command_with_input({ "appconfig", "list-tags-for-resource" }, input)
end

--- Starts a deployment
--- @param input table The input table for the start_deployment command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.start_deployment(input)
	return common.execute_aws_command_with_input({ "appconfig", "start-deployment" }, input)
end

--- Stops a deployment
--- @param input table The input table for the stop_deployment command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.stop_deployment(input)
	return common.execute_aws_command_with_input({ "appconfig", "stop-deployment" }, input)
end

--- Assigns metadata to an AppConfig resource
--- @param input table The input table for the tag_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.tag_resource(input)
	return common.execute_aws_command_with_input({ "appconfig", "tag-resource" }, input)
end

--- Deletes a tag key and value from an AppConfig resource
--- @param input table The input table for the untag_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.untag_resource(input)
	return common.execute_aws_command_with_input({ "appconfig", "untag-resource" }, input)
end

--- Updates the value of the DeletionProtection parameter
--- @param input table The input table for the update_account_settings command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_account_settings(input)
	return common.execute_aws_command_with_input({ "appconfig", "update-account-settings" }, input)
end

--- Updates an application
--- @param input table The input table for the update_application command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_application(input)
	return common.execute_aws_command_with_input({ "appconfig", "update-application" }, input)
end

--- Updates a configuration profile
--- @param input table The input table for the update_configuration_profile command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_configuration_profile(input)
	return common.execute_aws_command_with_input({ "appconfig", "update-configuration-profile" }, input)
end

--- Updates a deployment strategy
--- @param input table The input table for the update_deployment_strategy command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_deployment_strategy(input)
	return common.execute_aws_command_with_input({ "appconfig", "update-deployment-strategy" }, input)
end

--- Updates an environment
--- @param input table The input table for the update_environment command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_environment(input)
	return common.execute_aws_command_with_input({ "appconfig", "update-environment" }, input)
end

--- Updates an AppConfig extension
--- @param input table The input table for the update_extension command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_extension(input)
	return common.execute_aws_command_with_input({ "appconfig", "update-extension" }, input)
end

--- Updates an association
--- @param input table The input table for the update_extension_association command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_extension_association(input)
	return common.execute_aws_command_with_input({ "appconfig", "update-extension-association" }, input)
end

--- Uses the validators in a configuration profile to validate a configuration
--- @param input table The input table for the validate_configuration command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.validate_configuration(input)
	return common.execute_aws_command_with_input({ "appconfig", "validate-configuration" }, input)
end

return M
