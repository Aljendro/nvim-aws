-- AUTOGENERATED FILE - DO NOT EDIT
-- AWS Service: lex-runtime-service

local common = require("nvim-aws.wrappers.common")

--- AWS LEX-RUNTIME service functions
local M = {}

--- Removes session information for a specified bot, alias, and user ID
--- @param input table|nil The input table for the delete_session command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_session(input)
	return common.execute_aws_command_with_input({ "lex-runtime", "delete-session" }, input)
end

--- Returns session information for a specified bot, alias, and user ID
--- @param input table|nil The input table for the get_session command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_session(input)
	return common.execute_aws_command_with_input({ "lex-runtime", "get-session" }, input)
end

--- Sends user input (text or speech) to Amazon Lex
--- @param input table|nil The input table for the post_content command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.post_content(input)
	return common.execute_aws_command_with_input({ "lex-runtime", "post-content" }, input)
end

--- Sends user input to Amazon Lex
--- @param input table|nil The input table for the post_text command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.post_text(input)
	return common.execute_aws_command_with_input({ "lex-runtime", "post-text" }, input)
end

--- Creates a new session or modifies an existing session with an Amazon Lex bot
--- @param input table|nil The input table for the put_session command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.put_session(input)
	return common.execute_aws_command_with_input({ "lex-runtime", "put-session" }, input)
end

return M
