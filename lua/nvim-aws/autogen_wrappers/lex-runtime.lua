-- AUTOGENERATED FILE - DO NOT EDIT
-- AWS Service: lex-runtime

local common = require("nvim-aws.common")

--- AWS lex-runtime service functions
local M = {}

--- AWS lex-runtime delete-session operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_session(input, callbacks)
	return common.execute_aws_command_skeleton({ "lex-runtime", "delete-session" }, input, callbacks)
end

--- AWS lex-runtime get-session operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_session(input, callbacks)
	return common.execute_aws_command_skeleton({ "lex-runtime", "get-session" }, input, callbacks)
end

--- AWS lex-runtime post-content operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.post_content(input, callbacks)
	return common.execute_aws_command({ "lex-runtime", "post-content" }, input, callbacks)
end

--- AWS lex-runtime post-text operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.post_text(input, callbacks)
	return common.execute_aws_command_skeleton({ "lex-runtime", "post-text" }, input, callbacks)
end

--- AWS lex-runtime put-session operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.put_session(input, callbacks)
	return common.execute_aws_command({ "lex-runtime", "put-session" }, input, callbacks)
end

return M
