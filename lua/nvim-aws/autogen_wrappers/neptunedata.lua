-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: neptunedata

local common = require("nvim-aws.wrappers.common")

--- AWS NEPTUNEDATA service functions
local M = {}

--- Cancels a Gremlin query
--- @param input table|nil The input table for the cancel_gremlin_query command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.cancel_gremlin_query(input)
	return common.execute_aws_command_with_input({ "neptunedata", "cancel-gremlin-query" }, input)
end

--- Cancels a specified load job
--- @param input table|nil The input table for the cancel_loader_job command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.cancel_loader_job(input)
	return common.execute_aws_command_with_input({ "neptunedata", "cancel-loader-job" }, input)
end

--- Cancels a Neptune ML data processing job
--- @param input table|nil The input table for the cancel_ml_data_processing_job command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.cancel_ml_data_processing_job(input)
	return common.execute_aws_command_with_input({ "neptunedata", "cancel-ml-data-processing-job" }, input)
end

--- Cancels a Neptune ML model training job
--- @param input table|nil The input table for the cancel_ml_model_training_job command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.cancel_ml_model_training_job(input)
	return common.execute_aws_command_with_input({ "neptunedata", "cancel-ml-model-training-job" }, input)
end

--- Cancels a specified model transform job
--- @param input table|nil The input table for the cancel_ml_model_transform_job command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.cancel_ml_model_transform_job(input)
	return common.execute_aws_command_with_input({ "neptunedata", "cancel-ml-model-transform-job" }, input)
end

--- Cancels a specified openCypher query
--- @param input table|nil The input table for the cancel_open_cypher_query command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.cancel_open_cypher_query(input)
	return common.execute_aws_command_with_input({ "neptunedata", "cancel-open-cypher-query" }, input)
end

--- Creates a new Neptune ML inference endpoint that lets you query one specific model that the model-training process constructed
--- @param input table|nil The input table for the create_ml_endpoint command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_ml_endpoint(input)
	return common.execute_aws_command_with_input({ "neptunedata", "create-ml-endpoint" }, input)
end

--- Cancels the creation of a Neptune ML inference endpoint
--- @param input table|nil The input table for the delete_ml_endpoint command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_ml_endpoint(input)
	return common.execute_aws_command_with_input({ "neptunedata", "delete-ml-endpoint" }, input)
end

--- Deletes statistics for Gremlin and openCypher (property graph) data
--- @param input table|nil Optional input parameters
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_propertygraph_statistics(input)
	return common.execute_aws_command_with_input({ "neptunedata", "delete-propertygraph-statistics" }, input)
end

--- Deletes SPARQL statistics When invoking this operation in a Neptune cluster that has IAM authentication enabled, the IAM user or role making the request must have a policy attached that allows the neptune-db:DeleteStatistics IAM action in that cluster
--- @param input table|nil Optional input parameters
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_sparql_statistics(input)
	return common.execute_aws_command_with_input({ "neptunedata", "delete-sparql-statistics" }, input)
end

--- The fast reset REST API lets you reset a Neptune graph quicky and easily, removing all of its data
--- @param input table|nil The input table for the execute_fast_reset command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.execute_fast_reset(input)
	return common.execute_aws_command_with_input({ "neptunedata", "execute-fast-reset" }, input)
end

--- Executes a Gremlin Explain query
--- @param input table|nil The input table for the execute_gremlin_explain_query command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.execute_gremlin_explain_query(input)
	return common.execute_aws_command_with_input({ "neptunedata", "execute-gremlin-explain-query" }, input)
end

--- Executes a Gremlin Profile query, which runs a specified traversal, collects various metrics about the run, and produces a profile report as output
--- @param input table|nil The input table for the execute_gremlin_profile_query command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.execute_gremlin_profile_query(input)
	return common.execute_aws_command_with_input({ "neptunedata", "execute-gremlin-profile-query" }, input)
end

--- This commands executes a Gremlin query
--- @param input table|nil The input table for the execute_gremlin_query command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.execute_gremlin_query(input)
	return common.execute_aws_command_with_input({ "neptunedata", "execute-gremlin-query" }, input)
end

--- Executes an openCypher explain request
--- @param input table|nil The input table for the execute_open_cypher_explain_query command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.execute_open_cypher_explain_query(input)
	return common.execute_aws_command_with_input({ "neptunedata", "execute-open-cypher-explain-query" }, input)
end

--- Executes an openCypher query
--- @param input table|nil The input table for the execute_open_cypher_query command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.execute_open_cypher_query(input)
	return common.execute_aws_command_with_input({ "neptunedata", "execute-open-cypher-query" }, input)
end

--- Retrieves the status of the graph database on the host
--- @param input table|nil Optional input parameters
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_engine_status(input)
	return common.execute_aws_command_with_input({ "neptunedata", "get-engine-status" }, input)
end

--- Gets the status of a specified Gremlin query
--- @param input table|nil The input table for the get_gremlin_query_status command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_gremlin_query_status(input)
	return common.execute_aws_command_with_input({ "neptunedata", "get-gremlin-query-status" }, input)
end

--- Gets status information about a specified load job
--- @param input table|nil The input table for the get_loader_job_status command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_loader_job_status(input)
	return common.execute_aws_command_with_input({ "neptunedata", "get-loader-job-status" }, input)
end

--- Retrieves information about a specified data processing job
--- @param input table|nil The input table for the get_ml_data_processing_job command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_ml_data_processing_job(input)
	return common.execute_aws_command_with_input({ "neptunedata", "get-ml-data-processing-job" }, input)
end

--- Retrieves details about an inference endpoint
--- @param input table|nil The input table for the get_ml_endpoint command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_ml_endpoint(input)
	return common.execute_aws_command_with_input({ "neptunedata", "get-ml-endpoint" }, input)
end

--- Retrieves information about a Neptune ML model training job
--- @param input table|nil The input table for the get_ml_model_training_job command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_ml_model_training_job(input)
	return common.execute_aws_command_with_input({ "neptunedata", "get-ml-model-training-job" }, input)
end

--- Gets information about a specified model transform job
--- @param input table|nil The input table for the get_ml_model_transform_job command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_ml_model_transform_job(input)
	return common.execute_aws_command_with_input({ "neptunedata", "get-ml-model-transform-job" }, input)
end

--- Retrieves the status of a specified openCypher query
--- @param input table|nil The input table for the get_open_cypher_query_status command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_open_cypher_query_status(input)
	return common.execute_aws_command_with_input({ "neptunedata", "get-open-cypher-query-status" }, input)
end

--- Gets property graph statistics (Gremlin and openCypher)
--- @param input table|nil Optional input parameters
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_propertygraph_statistics(input)
	return common.execute_aws_command_with_input({ "neptunedata", "get-propertygraph-statistics" }, input)
end

--- Gets a stream for a property graph
--- @param input table|nil The input table for the get_propertygraph_stream command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_propertygraph_stream(input)
	return common.execute_aws_command_with_input({ "neptunedata", "get-propertygraph-stream" }, input)
end

--- Gets a graph summary for a property graph
--- @param input table|nil The input table for the get_propertygraph_summary command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_propertygraph_summary(input)
	return common.execute_aws_command_with_input({ "neptunedata", "get-propertygraph-summary" }, input)
end

--- Gets a graph summary for an RDF graph
--- @param input table|nil The input table for the get_rdf_graph_summary command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_rdf_graph_summary(input)
	return common.execute_aws_command_with_input({ "neptunedata", "get-rdf-graph-summary" }, input)
end

--- Gets RDF statistics (SPARQL)
--- @param input table|nil Optional input parameters
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_sparql_statistics(input)
	return common.execute_aws_command_with_input({ "neptunedata", "get-sparql-statistics" }, input)
end

--- Gets a stream for an RDF graph
--- @param input table|nil The input table for the get_sparql_stream command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_sparql_stream(input)
	return common.execute_aws_command_with_input({ "neptunedata", "get-sparql-stream" }, input)
end

--- Lists active Gremlin queries
--- @param input table|nil The input table for the list_gremlin_queries command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_gremlin_queries(input)
	return common.execute_aws_command_with_input({ "neptunedata", "list-gremlin-queries" }, input)
end

--- Retrieves a list of the loadIds for all active loader jobs
--- @param input table|nil The input table for the list_loader_jobs command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_loader_jobs(input)
	return common.execute_aws_command_with_input({ "neptunedata", "list-loader-jobs" }, input)
end

--- Returns a list of Neptune ML data processing jobs
--- @param input table|nil The input table for the list_ml_data_processing_jobs command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_ml_data_processing_jobs(input)
	return common.execute_aws_command_with_input({ "neptunedata", "list-ml-data-processing-jobs" }, input)
end

--- Lists existing inference endpoints
--- @param input table|nil The input table for the list_ml_endpoints command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_ml_endpoints(input)
	return common.execute_aws_command_with_input({ "neptunedata", "list-ml-endpoints" }, input)
end

--- Lists Neptune ML model-training jobs
--- @param input table|nil The input table for the list_ml_model_training_jobs command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_ml_model_training_jobs(input)
	return common.execute_aws_command_with_input({ "neptunedata", "list-ml-model-training-jobs" }, input)
end

--- Returns a list of model transform job IDs
--- @param input table|nil The input table for the list_ml_model_transform_jobs command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_ml_model_transform_jobs(input)
	return common.execute_aws_command_with_input({ "neptunedata", "list-ml-model-transform-jobs" }, input)
end

--- Lists active openCypher queries
--- @param input table|nil The input table for the list_open_cypher_queries command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_open_cypher_queries(input)
	return common.execute_aws_command_with_input({ "neptunedata", "list-open-cypher-queries" }, input)
end

--- Manages the generation and use of property graph statistics
--- @param input table|nil The input table for the manage_propertygraph_statistics command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.manage_propertygraph_statistics(input)
	return common.execute_aws_command_with_input({ "neptunedata", "manage-propertygraph-statistics" }, input)
end

--- Manages the generation and use of RDF graph statistics
--- @param input table|nil The input table for the manage_sparql_statistics command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.manage_sparql_statistics(input)
	return common.execute_aws_command_with_input({ "neptunedata", "manage-sparql-statistics" }, input)
end

--- Starts a Neptune bulk loader job to load data from an Amazon S3 bucket into a Neptune DB instance
--- @param input table|nil The input table for the start_loader_job command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.start_loader_job(input)
	return common.execute_aws_command_with_input({ "neptunedata", "start-loader-job" }, input)
end

--- Creates a new Neptune ML data processing job for processing the graph data exported from Neptune for training
--- @param input table|nil The input table for the start_ml_data_processing_job command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.start_ml_data_processing_job(input)
	return common.execute_aws_command_with_input({ "neptunedata", "start-ml-data-processing-job" }, input)
end

--- Creates a new Neptune ML model training job
--- @param input table|nil The input table for the start_ml_model_training_job command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.start_ml_model_training_job(input)
	return common.execute_aws_command_with_input({ "neptunedata", "start-ml-model-training-job" }, input)
end

--- Creates a new model transform job
--- @param input table|nil The input table for the start_ml_model_transform_job command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.start_ml_model_transform_job(input)
	return common.execute_aws_command_with_input({ "neptunedata", "start-ml-model-transform-job" }, input)
end

return M
