-- AUTOGENERATED FILE - DO NOT EDIT
-- AWS Service: route53-recovery-readiness

local common = require("nvim-aws.common")

--- AWS route53-recovery-readiness service functions
local M = {}

--- AWS route53-recovery-readiness create-cell operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_cell(input, callbacks)
	return common.execute_aws_command_skeleton({ "route53-recovery-readiness", "create-cell" }, input, callbacks)
end

--- AWS route53-recovery-readiness create-cross-account-authorization operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_cross_account_authorization(input, callbacks)
	return common.execute_aws_command_skeleton({ "route53-recovery-readiness", "create-cross-account-authorization" }, input, callbacks)
end

--- AWS route53-recovery-readiness create-readiness-check operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_readiness_check(input, callbacks)
	return common.execute_aws_command_skeleton({ "route53-recovery-readiness", "create-readiness-check" }, input, callbacks)
end

--- AWS route53-recovery-readiness create-recovery-group operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_recovery_group(input, callbacks)
	return common.execute_aws_command_skeleton({ "route53-recovery-readiness", "create-recovery-group" }, input, callbacks)
end

--- AWS route53-recovery-readiness create-resource-set operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_resource_set(input, callbacks)
	return common.execute_aws_command_skeleton({ "route53-recovery-readiness", "create-resource-set" }, input, callbacks)
end

--- AWS route53-recovery-readiness delete-cell operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_cell(input, callbacks)
	return common.execute_aws_command_skeleton({ "route53-recovery-readiness", "delete-cell" }, input, callbacks)
end

--- AWS route53-recovery-readiness delete-cross-account-authorization operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_cross_account_authorization(input, callbacks)
	return common.execute_aws_command_skeleton({ "route53-recovery-readiness", "delete-cross-account-authorization" }, input, callbacks)
end

--- AWS route53-recovery-readiness delete-readiness-check operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_readiness_check(input, callbacks)
	return common.execute_aws_command_skeleton({ "route53-recovery-readiness", "delete-readiness-check" }, input, callbacks)
end

--- AWS route53-recovery-readiness delete-recovery-group operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_recovery_group(input, callbacks)
	return common.execute_aws_command_skeleton({ "route53-recovery-readiness", "delete-recovery-group" }, input, callbacks)
end

--- AWS route53-recovery-readiness delete-resource-set operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_resource_set(input, callbacks)
	return common.execute_aws_command_skeleton({ "route53-recovery-readiness", "delete-resource-set" }, input, callbacks)
end

--- AWS route53-recovery-readiness get-architecture-recommendations operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_architecture_recommendations(input, callbacks)
	return common.execute_aws_command_skeleton({ "route53-recovery-readiness", "get-architecture-recommendations" }, input, callbacks)
end

--- AWS route53-recovery-readiness get-cell operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_cell(input, callbacks)
	return common.execute_aws_command_skeleton({ "route53-recovery-readiness", "get-cell" }, input, callbacks)
end

--- AWS route53-recovery-readiness get-cell-readiness-summary operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_cell_readiness_summary(input, callbacks)
	return common.execute_aws_command_skeleton({ "route53-recovery-readiness", "get-cell-readiness-summary" }, input, callbacks)
end

--- AWS route53-recovery-readiness get-readiness-check operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_readiness_check(input, callbacks)
	return common.execute_aws_command_skeleton({ "route53-recovery-readiness", "get-readiness-check" }, input, callbacks)
end

--- AWS route53-recovery-readiness get-readiness-check-resource-status operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_readiness_check_resource_status(input, callbacks)
	return common.execute_aws_command_skeleton({ "route53-recovery-readiness", "get-readiness-check-resource-status" }, input, callbacks)
end

--- AWS route53-recovery-readiness get-readiness-check-status operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_readiness_check_status(input, callbacks)
	return common.execute_aws_command_skeleton({ "route53-recovery-readiness", "get-readiness-check-status" }, input, callbacks)
end

--- AWS route53-recovery-readiness get-recovery-group operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_recovery_group(input, callbacks)
	return common.execute_aws_command_skeleton({ "route53-recovery-readiness", "get-recovery-group" }, input, callbacks)
end

--- AWS route53-recovery-readiness get-recovery-group-readiness-summary operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_recovery_group_readiness_summary(input, callbacks)
	return common.execute_aws_command_skeleton({ "route53-recovery-readiness", "get-recovery-group-readiness-summary" }, input, callbacks)
end

--- AWS route53-recovery-readiness get-resource-set operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_resource_set(input, callbacks)
	return common.execute_aws_command_skeleton({ "route53-recovery-readiness", "get-resource-set" }, input, callbacks)
end

--- AWS route53-recovery-readiness list-cells operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_cells(input, callbacks)
	return common.execute_aws_command_skeleton({ "route53-recovery-readiness", "list-cells" }, input, callbacks)
end

--- AWS route53-recovery-readiness list-cross-account-authorizations operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_cross_account_authorizations(input, callbacks)
	return common.execute_aws_command_skeleton({ "route53-recovery-readiness", "list-cross-account-authorizations" }, input, callbacks)
end

--- AWS route53-recovery-readiness list-readiness-checks operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_readiness_checks(input, callbacks)
	return common.execute_aws_command_skeleton({ "route53-recovery-readiness", "list-readiness-checks" }, input, callbacks)
end

--- AWS route53-recovery-readiness list-recovery-groups operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_recovery_groups(input, callbacks)
	return common.execute_aws_command_skeleton({ "route53-recovery-readiness", "list-recovery-groups" }, input, callbacks)
end

--- AWS route53-recovery-readiness list-resource-sets operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_resource_sets(input, callbacks)
	return common.execute_aws_command_skeleton({ "route53-recovery-readiness", "list-resource-sets" }, input, callbacks)
end

--- AWS route53-recovery-readiness list-rules operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_rules(input, callbacks)
	return common.execute_aws_command_skeleton({ "route53-recovery-readiness", "list-rules" }, input, callbacks)
end

--- AWS route53-recovery-readiness list-tags-for-resources operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_tags_for_resources(input, callbacks)
	return common.execute_aws_command_skeleton({ "route53-recovery-readiness", "list-tags-for-resources" }, input, callbacks)
end

--- AWS route53-recovery-readiness tag-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.tag_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "route53-recovery-readiness", "tag-resource" }, input, callbacks)
end

--- AWS route53-recovery-readiness untag-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.untag_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "route53-recovery-readiness", "untag-resource" }, input, callbacks)
end

--- AWS route53-recovery-readiness update-cell operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_cell(input, callbacks)
	return common.execute_aws_command_skeleton({ "route53-recovery-readiness", "update-cell" }, input, callbacks)
end

--- AWS route53-recovery-readiness update-readiness-check operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_readiness_check(input, callbacks)
	return common.execute_aws_command_skeleton({ "route53-recovery-readiness", "update-readiness-check" }, input, callbacks)
end

--- AWS route53-recovery-readiness update-recovery-group operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_recovery_group(input, callbacks)
	return common.execute_aws_command_skeleton({ "route53-recovery-readiness", "update-recovery-group" }, input, callbacks)
end

--- AWS route53-recovery-readiness update-resource-set operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_resource_set(input, callbacks)
	return common.execute_aws_command_skeleton({ "route53-recovery-readiness", "update-resource-set" }, input, callbacks)
end

return M
