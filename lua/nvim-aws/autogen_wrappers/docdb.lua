-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-07 21:36:09
-- AWS Service: docdb

local common = require("nvim-aws.wrappers.common")

--- AWS DOCDB service functions
local M = {}

--- Adds a source identifier to an existing event notification subscription
--- @param input table The input table for the add_source_identifier_to_subscription command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.add_source_identifier_to_subscription(input)
	return common.execute_aws_command_with_input({ "docdb", "add-source-identifier-to-subscription" }, input)
end

--- Adds metadata tags to an Amazon DocumentDB resource
--- @param input table The input table for the add_tags_to_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.add_tags_to_resource(input)
	return common.execute_aws_command_with_input({ "docdb", "add-tags-to-resource" }, input)
end

--- Applies a pending maintenance action to a resource (for example, to an Amazon DocumentDB instance)
--- @param input table The input table for the apply_pending_maintenance_action command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.apply_pending_maintenance_action(input)
	return common.execute_aws_command_with_input({ "docdb", "apply-pending-maintenance-action" }, input)
end

--- Copies the specified cluster parameter group
--- @param input table The input table for the copy_db_cluster_parameter_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.copy_db_cluster_parameter_group(input)
	return common.execute_aws_command_with_input({ "docdb", "copy-db-cluster-parameter-group" }, input)
end

--- Copies a snapshot of a cluster
--- @param input table The input table for the copy_db_cluster_snapshot command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.copy_db_cluster_snapshot(input)
	return common.execute_aws_command_with_input({ "docdb", "copy-db-cluster-snapshot" }, input)
end

--- Creates a new Amazon DocumentDB cluster
--- @param input table The input table for the create_db_cluster command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_db_cluster(input)
	return common.execute_aws_command_with_input({ "docdb", "create-db-cluster" }, input)
end

--- Creates a new cluster parameter group
--- @param input table The input table for the create_db_cluster_parameter_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_db_cluster_parameter_group(input)
	return common.execute_aws_command_with_input({ "docdb", "create-db-cluster-parameter-group" }, input)
end

--- Creates a snapshot of a cluster
--- @param input table The input table for the create_db_cluster_snapshot command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_db_cluster_snapshot(input)
	return common.execute_aws_command_with_input({ "docdb", "create-db-cluster-snapshot" }, input)
end

--- Creates a new instance
--- @param input table The input table for the create_db_instance command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_db_instance(input)
	return common.execute_aws_command_with_input({ "docdb", "create-db-instance" }, input)
end

--- Creates a new subnet group
--- @param input table The input table for the create_db_subnet_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_db_subnet_group(input)
	return common.execute_aws_command_with_input({ "docdb", "create-db-subnet-group" }, input)
end

--- Creates an Amazon DocumentDB event notification subscription
--- @param input table The input table for the create_event_subscription command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_event_subscription(input)
	return common.execute_aws_command_with_input({ "docdb", "create-event-subscription" }, input)
end

--- Creates an Amazon DocumentDB global cluster that can span multiple multiple Amazon Web Services Regions
--- @param input table The input table for the create_global_cluster command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_global_cluster(input)
	return common.execute_aws_command_with_input({ "docdb", "create-global-cluster" }, input)
end

--- Deletes a previously provisioned cluster
--- @param input table The input table for the delete_db_cluster command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_db_cluster(input)
	return common.execute_aws_command_with_input({ "docdb", "delete-db-cluster" }, input)
end

--- Deletes a specified cluster parameter group
--- @param input table The input table for the delete_db_cluster_parameter_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_db_cluster_parameter_group(input)
	return common.execute_aws_command_with_input({ "docdb", "delete-db-cluster-parameter-group" }, input)
end

--- Deletes a cluster snapshot
--- @param input table The input table for the delete_db_cluster_snapshot command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_db_cluster_snapshot(input)
	return common.execute_aws_command_with_input({ "docdb", "delete-db-cluster-snapshot" }, input)
end

--- Deletes a previously provisioned instance
--- @param input table The input table for the delete_db_instance command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_db_instance(input)
	return common.execute_aws_command_with_input({ "docdb", "delete-db-instance" }, input)
end

--- Deletes a subnet group
--- @param input table The input table for the delete_db_subnet_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_db_subnet_group(input)
	return common.execute_aws_command_with_input({ "docdb", "delete-db-subnet-group" }, input)
end

--- Deletes an Amazon DocumentDB event notification subscription
--- @param input table The input table for the delete_event_subscription command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_event_subscription(input)
	return common.execute_aws_command_with_input({ "docdb", "delete-event-subscription" }, input)
end

--- Deletes a global cluster
--- @param input table The input table for the delete_global_cluster command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_global_cluster(input)
	return common.execute_aws_command_with_input({ "docdb", "delete-global-cluster" }, input)
end

--- Returns a list of certificate authority (CA) certificates provided by Amazon DocumentDB for this Amazon Web Services account
--- @param input table The input table for the describe_certificates command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_certificates(input)
	return common.execute_aws_command_with_input({ "docdb", "describe-certificates" }, input)
end

--- Returns a list of DBClusterParameterGroup descriptions
--- @param input table The input table for the describe_db_cluster_parameter_groups command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_db_cluster_parameter_groups(input)
	return common.execute_aws_command_with_input({ "docdb", "describe-db-cluster-parameter-groups" }, input)
end

--- Returns the detailed parameter list for a particular cluster parameter group
--- @param input table The input table for the describe_db_cluster_parameters command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_db_cluster_parameters(input)
	return common.execute_aws_command_with_input({ "docdb", "describe-db-cluster-parameters" }, input)
end

--- Returns a list of cluster snapshot attribute names and values for a manual DB cluster snapshot
--- @param input table The input table for the describe_db_cluster_snapshot_attributes command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_db_cluster_snapshot_attributes(input)
	return common.execute_aws_command_with_input({ "docdb", "describe-db-cluster-snapshot-attributes" }, input)
end

--- Returns information about cluster snapshots
--- @param input table The input table for the describe_db_cluster_snapshots command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_db_cluster_snapshots(input)
	return common.execute_aws_command_with_input({ "docdb", "describe-db-cluster-snapshots" }, input)
end

--- Returns information about provisioned Amazon DocumentDB clusters
--- @param input table The input table for the describe_db_clusters command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_db_clusters(input)
	return common.execute_aws_command_with_input({ "docdb", "describe-db-clusters" }, input)
end

--- Returns a list of the available engines
--- @param input table The input table for the describe_db_engine_versions command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_db_engine_versions(input)
	return common.execute_aws_command_with_input({ "docdb", "describe-db-engine-versions" }, input)
end

--- Returns information about provisioned Amazon DocumentDB instances
--- @param input table The input table for the describe_db_instances command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_db_instances(input)
	return common.execute_aws_command_with_input({ "docdb", "describe-db-instances" }, input)
end

--- Returns a list of DBSubnetGroup descriptions
--- @param input table The input table for the describe_db_subnet_groups command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_db_subnet_groups(input)
	return common.execute_aws_command_with_input({ "docdb", "describe-db-subnet-groups" }, input)
end

--- Returns the default engine and system parameter information for the cluster database engine
--- @param input table The input table for the describe_engine_default_cluster_parameters command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_engine_default_cluster_parameters(input)
	return common.execute_aws_command_with_input({ "docdb", "describe-engine-default-cluster-parameters" }, input)
end

--- Displays a list of categories for all event source types, or, if specified, for a specified source type
--- @param input table The input table for the describe_event_categories command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_event_categories(input)
	return common.execute_aws_command_with_input({ "docdb", "describe-event-categories" }, input)
end

--- Lists all the subscription descriptions for a customer account
--- @param input table The input table for the describe_event_subscriptions command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_event_subscriptions(input)
	return common.execute_aws_command_with_input({ "docdb", "describe-event-subscriptions" }, input)
end

--- Returns events related to instances, security groups, snapshots, and DB parameter groups for the past 14 days
--- @param input table The input table for the describe_events command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_events(input)
	return common.execute_aws_command_with_input({ "docdb", "describe-events" }, input)
end

--- Returns information about Amazon DocumentDB global clusters
--- @param input table The input table for the describe_global_clusters command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_global_clusters(input)
	return common.execute_aws_command_with_input({ "docdb", "describe-global-clusters" }, input)
end

--- Returns a list of orderable instance options for the specified engine
--- @param input table The input table for the describe_orderable_db_instance_options command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_orderable_db_instance_options(input)
	return common.execute_aws_command_with_input({ "docdb", "describe-orderable-db-instance-options" }, input)
end

--- Returns a list of resources (for example, instances) that have at least one pending maintenance action
--- @param input table The input table for the describe_pending_maintenance_actions command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_pending_maintenance_actions(input)
	return common.execute_aws_command_with_input({ "docdb", "describe-pending-maintenance-actions" }, input)
end

--- Forces a failover for a cluster
--- @param input table The input table for the failover_db_cluster command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.failover_db_cluster(input)
	return common.execute_aws_command_with_input({ "docdb", "failover-db-cluster" }, input)
end

--- Promotes the specified secondary DB cluster to be the primary DB cluster in the global cluster when failing over a global cluster occurs
--- @param input table The input table for the failover_global_cluster command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.failover_global_cluster(input)
	return common.execute_aws_command_with_input({ "docdb", "failover-global-cluster" }, input)
end

--- Lists all tags on an Amazon DocumentDB resource
--- @param input table The input table for the list_tags_for_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_tags_for_resource(input)
	return common.execute_aws_command_with_input({ "docdb", "list-tags-for-resource" }, input)
end

--- Modifies a setting for an Amazon DocumentDB cluster
--- @param input table The input table for the modify_db_cluster command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.modify_db_cluster(input)
	return common.execute_aws_command_with_input({ "docdb", "modify-db-cluster" }, input)
end

--- Modifies the parameters of a cluster parameter group
--- @param input table The input table for the modify_db_cluster_parameter_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.modify_db_cluster_parameter_group(input)
	return common.execute_aws_command_with_input({ "docdb", "modify-db-cluster-parameter-group" }, input)
end

--- Adds an attribute and values to, or removes an attribute and values from, a manual cluster snapshot
--- @param input table The input table for the modify_db_cluster_snapshot_attribute command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.modify_db_cluster_snapshot_attribute(input)
	return common.execute_aws_command_with_input({ "docdb", "modify-db-cluster-snapshot-attribute" }, input)
end

--- Modifies settings for an instance
--- @param input table The input table for the modify_db_instance command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.modify_db_instance(input)
	return common.execute_aws_command_with_input({ "docdb", "modify-db-instance" }, input)
end

--- Modifies an existing subnet group
--- @param input table The input table for the modify_db_subnet_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.modify_db_subnet_group(input)
	return common.execute_aws_command_with_input({ "docdb", "modify-db-subnet-group" }, input)
end

--- Modifies an existing Amazon DocumentDB event notification subscription
--- @param input table The input table for the modify_event_subscription command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.modify_event_subscription(input)
	return common.execute_aws_command_with_input({ "docdb", "modify-event-subscription" }, input)
end

--- Modify a setting for an Amazon DocumentDB global cluster
--- @param input table The input table for the modify_global_cluster command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.modify_global_cluster(input)
	return common.execute_aws_command_with_input({ "docdb", "modify-global-cluster" }, input)
end

--- You might need to reboot your instance, usually for maintenance reasons
--- @param input table The input table for the reboot_db_instance command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.reboot_db_instance(input)
	return common.execute_aws_command_with_input({ "docdb", "reboot-db-instance" }, input)
end

--- Detaches an Amazon DocumentDB secondary cluster from a global cluster
--- @param input table The input table for the remove_from_global_cluster command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.remove_from_global_cluster(input)
	return common.execute_aws_command_with_input({ "docdb", "remove-from-global-cluster" }, input)
end

--- Removes a source identifier from an existing Amazon DocumentDB event notification subscription
--- @param input table The input table for the remove_source_identifier_from_subscription command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.remove_source_identifier_from_subscription(input)
	return common.execute_aws_command_with_input({ "docdb", "remove-source-identifier-from-subscription" }, input)
end

--- Removes metadata tags from an Amazon DocumentDB resource
--- @param input table The input table for the remove_tags_from_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.remove_tags_from_resource(input)
	return common.execute_aws_command_with_input({ "docdb", "remove-tags-from-resource" }, input)
end

--- Modifies the parameters of a cluster parameter group to the default value
--- @param input table The input table for the reset_db_cluster_parameter_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.reset_db_cluster_parameter_group(input)
	return common.execute_aws_command_with_input({ "docdb", "reset-db-cluster-parameter-group" }, input)
end

--- Creates a new cluster from a snapshot or cluster snapshot
--- @param input table The input table for the restore_db_cluster_from_snapshot command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.restore_db_cluster_from_snapshot(input)
	return common.execute_aws_command_with_input({ "docdb", "restore-db-cluster-from-snapshot" }, input)
end

--- Restores a cluster to an arbitrary point in time
--- @param input table The input table for the restore_db_cluster_to_point_in_time command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.restore_db_cluster_to_point_in_time(input)
	return common.execute_aws_command_with_input({ "docdb", "restore-db-cluster-to-point-in-time" }, input)
end

--- Restarts the stopped cluster that is specified by DBClusterIdentifier
--- @param input table The input table for the start_db_cluster command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.start_db_cluster(input)
	return common.execute_aws_command_with_input({ "docdb", "start-db-cluster" }, input)
end

--- Stops the running cluster that is specified by DBClusterIdentifier
--- @param input table The input table for the stop_db_cluster command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.stop_db_cluster(input)
	return common.execute_aws_command_with_input({ "docdb", "stop-db-cluster" }, input)
end

--- Switches over the specified secondary Amazon DocumentDB cluster to be the new primary Amazon DocumentDB cluster in the global database cluster
--- @param input table The input table for the switchover_global_cluster command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.switchover_global_cluster(input)
	return common.execute_aws_command_with_input({ "docdb", "switchover-global-cluster" }, input)
end

return M
