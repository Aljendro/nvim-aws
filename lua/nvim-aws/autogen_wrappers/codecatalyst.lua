-- AUTOGENERATED FILE - DO NOT EDIT
-- AWS Service: codecatalyst

local common = require("nvim-aws.common")

--- AWS codecatalyst service functions
local M = {}

--- AWS codecatalyst create-access-token operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_access_token(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecatalyst", "create-access-token" }, input, callbacks)
end

--- AWS codecatalyst create-dev-environment operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_dev_environment(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecatalyst", "create-dev-environment" }, input, callbacks)
end

--- AWS codecatalyst create-project operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_project(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecatalyst", "create-project" }, input, callbacks)
end

--- AWS codecatalyst create-source-repository operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_source_repository(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecatalyst", "create-source-repository" }, input, callbacks)
end

--- AWS codecatalyst create-source-repository-branch operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_source_repository_branch(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecatalyst", "create-source-repository-branch" }, input, callbacks)
end

--- AWS codecatalyst delete-access-token operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_access_token(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecatalyst", "delete-access-token" }, input, callbacks)
end

--- AWS codecatalyst delete-dev-environment operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_dev_environment(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecatalyst", "delete-dev-environment" }, input, callbacks)
end

--- AWS codecatalyst delete-project operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_project(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecatalyst", "delete-project" }, input, callbacks)
end

--- AWS codecatalyst delete-source-repository operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_source_repository(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecatalyst", "delete-source-repository" }, input, callbacks)
end

--- AWS codecatalyst delete-space operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_space(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecatalyst", "delete-space" }, input, callbacks)
end

--- AWS codecatalyst get-dev-environment operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_dev_environment(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecatalyst", "get-dev-environment" }, input, callbacks)
end

--- AWS codecatalyst get-project operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_project(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecatalyst", "get-project" }, input, callbacks)
end

--- AWS codecatalyst get-source-repository operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_source_repository(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecatalyst", "get-source-repository" }, input, callbacks)
end

--- AWS codecatalyst get-source-repository-clone-urls operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_source_repository_clone_urls(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecatalyst", "get-source-repository-clone-urls" }, input, callbacks)
end

--- AWS codecatalyst get-space operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_space(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecatalyst", "get-space" }, input, callbacks)
end

--- AWS codecatalyst get-subscription operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_subscription(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecatalyst", "get-subscription" }, input, callbacks)
end

--- AWS codecatalyst get-user-details operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_user_details(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecatalyst", "get-user-details" }, input, callbacks)
end

--- AWS codecatalyst get-workflow operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_workflow(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecatalyst", "get-workflow" }, input, callbacks)
end

--- AWS codecatalyst get-workflow-run operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_workflow_run(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecatalyst", "get-workflow-run" }, input, callbacks)
end

--- AWS codecatalyst list-access-tokens operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_access_tokens(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecatalyst", "list-access-tokens" }, input, callbacks)
end

--- AWS codecatalyst list-dev-environment-sessions operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_dev_environment_sessions(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecatalyst", "list-dev-environment-sessions" }, input, callbacks)
end

--- AWS codecatalyst list-dev-environments operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_dev_environments(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecatalyst", "list-dev-environments" }, input, callbacks)
end

--- AWS codecatalyst list-event-logs operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_event_logs(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecatalyst", "list-event-logs" }, input, callbacks)
end

--- AWS codecatalyst list-projects operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_projects(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecatalyst", "list-projects" }, input, callbacks)
end

--- AWS codecatalyst list-source-repositories operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_source_repositories(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecatalyst", "list-source-repositories" }, input, callbacks)
end

--- AWS codecatalyst list-source-repository-branches operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_source_repository_branches(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecatalyst", "list-source-repository-branches" }, input, callbacks)
end

--- AWS codecatalyst list-spaces operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_spaces(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecatalyst", "list-spaces" }, input, callbacks)
end

--- AWS codecatalyst list-workflow-runs operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_workflow_runs(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecatalyst", "list-workflow-runs" }, input, callbacks)
end

--- AWS codecatalyst list-workflows operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_workflows(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecatalyst", "list-workflows" }, input, callbacks)
end

--- AWS codecatalyst start-dev-environment operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.start_dev_environment(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecatalyst", "start-dev-environment" }, input, callbacks)
end

--- AWS codecatalyst start-dev-environment-session operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.start_dev_environment_session(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecatalyst", "start-dev-environment-session" }, input, callbacks)
end

--- AWS codecatalyst start-workflow-run operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.start_workflow_run(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecatalyst", "start-workflow-run" }, input, callbacks)
end

--- AWS codecatalyst stop-dev-environment operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.stop_dev_environment(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecatalyst", "stop-dev-environment" }, input, callbacks)
end

--- AWS codecatalyst stop-dev-environment-session operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.stop_dev_environment_session(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecatalyst", "stop-dev-environment-session" }, input, callbacks)
end

--- AWS codecatalyst update-dev-environment operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_dev_environment(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecatalyst", "update-dev-environment" }, input, callbacks)
end

--- AWS codecatalyst update-project operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_project(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecatalyst", "update-project" }, input, callbacks)
end

--- AWS codecatalyst update-space operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_space(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecatalyst", "update-space" }, input, callbacks)
end

--- AWS codecatalyst verify-session operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.verify_session(input, callbacks)
	return common.execute_aws_command_skeleton({ "codecatalyst", "verify-session" }, input, callbacks)
end

return M
