-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-07 21:36:03
-- AWS Service: codedeploy

local common = require("nvim-aws.wrappers.common")

--- AWS CODEDEPLOY service functions
local M = {}

--- Adds tags to on-premises instances
--- @param input table The input table for the add_tags_to_on_premises_instances command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.add_tags_to_on_premises_instances(input)
	return common.execute_aws_command_with_input({ "codedeploy", "add-tags-to-on-premises-instances" }, input)
end

--- Gets information about one or more application revisions
--- @param input table The input table for the batch_get_application_revisions command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.batch_get_application_revisions(input)
	return common.execute_aws_command_with_input({ "codedeploy", "batch-get-application-revisions" }, input)
end

--- Gets information about one or more applications
--- @param input table The input table for the batch_get_applications command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.batch_get_applications(input)
	return common.execute_aws_command_with_input({ "codedeploy", "batch-get-applications" }, input)
end

--- Gets information about one or more deployment groups
--- @param input table The input table for the batch_get_deployment_groups command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.batch_get_deployment_groups(input)
	return common.execute_aws_command_with_input({ "codedeploy", "batch-get-deployment-groups" }, input)
end

--- This method works, but is deprecated
--- @param input table The input table for the batch_get_deployment_instances command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.batch_get_deployment_instances(input)
	return common.execute_aws_command_with_input({ "codedeploy", "batch-get-deployment-instances" }, input)
end

--- Returns an array of one or more targets associated with a deployment
--- @param input table The input table for the batch_get_deployment_targets command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.batch_get_deployment_targets(input)
	return common.execute_aws_command_with_input({ "codedeploy", "batch-get-deployment-targets" }, input)
end

--- Gets information about one or more deployments
--- @param input table The input table for the batch_get_deployments command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.batch_get_deployments(input)
	return common.execute_aws_command_with_input({ "codedeploy", "batch-get-deployments" }, input)
end

--- Gets information about one or more on-premises instances
--- @param input table The input table for the batch_get_on_premises_instances command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.batch_get_on_premises_instances(input)
	return common.execute_aws_command_with_input({ "codedeploy", "batch-get-on-premises-instances" }, input)
end

--- For a blue/green deployment, starts the process of rerouting traffic from instances in the original environment to instances in the replacement environment without waiting for a specified wait time to elapse
--- @param input table The input table for the continue_deployment command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.continue_deployment(input)
	return common.execute_aws_command_with_input({ "codedeploy", "continue-deployment" }, input)
end

--- Creates an application
--- @param input table The input table for the create_application command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_application(input)
	return common.execute_aws_command_with_input({ "codedeploy", "create-application" }, input)
end

--- Deploys an application revision through the specified deployment group
--- @param input table The input table for the create_deployment command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_deployment(input)
	return common.execute_aws_command_with_input({ "codedeploy", "create-deployment" }, input)
end

--- Creates a deployment configuration
--- @param input table The input table for the create_deployment_config command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_deployment_config(input)
	return common.execute_aws_command_with_input({ "codedeploy", "create-deployment-config" }, input)
end

--- Creates a deployment group to which application revisions are deployed
--- @param input table The input table for the create_deployment_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_deployment_group(input)
	return common.execute_aws_command_with_input({ "codedeploy", "create-deployment-group" }, input)
end

--- Deletes an application
--- @param input table The input table for the delete_application command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_application(input)
	return common.execute_aws_command_with_input({ "codedeploy", "delete-application" }, input)
end

--- Deletes a deployment configuration
--- @param input table The input table for the delete_deployment_config command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_deployment_config(input)
	return common.execute_aws_command_with_input({ "codedeploy", "delete-deployment-config" }, input)
end

--- Deletes a deployment group
--- @param input table The input table for the delete_deployment_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_deployment_group(input)
	return common.execute_aws_command_with_input({ "codedeploy", "delete-deployment-group" }, input)
end

--- Deletes a GitHub account connection
--- @param input table The input table for the delete_git_hub_account_token command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_git_hub_account_token(input)
	return common.execute_aws_command_with_input({ "codedeploy", "delete-git-hub-account-token" }, input)
end

--- Deletes resources linked to an external ID
--- @param input table The input table for the delete_resources_by_external_id command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_resources_by_external_id(input)
	return common.execute_aws_command_with_input({ "codedeploy", "delete-resources-by-external-id" }, input)
end

--- Deregisters an on-premises instance
--- @param input table The input table for the deregister_on_premises_instance command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.deregister_on_premises_instance(input)
	return common.execute_aws_command_with_input({ "codedeploy", "deregister-on-premises-instance" }, input)
end

--- Gets information about an application
--- @param input table The input table for the get_application command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_application(input)
	return common.execute_aws_command_with_input({ "codedeploy", "get-application" }, input)
end

--- Gets information about an application revision
--- @param input table The input table for the get_application_revision command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_application_revision(input)
	return common.execute_aws_command_with_input({ "codedeploy", "get-application-revision" }, input)
end

--- Gets information about a deployment
--- @param input table The input table for the get_deployment command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_deployment(input)
	return common.execute_aws_command_with_input({ "codedeploy", "get-deployment" }, input)
end

--- Gets information about a deployment configuration
--- @param input table The input table for the get_deployment_config command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_deployment_config(input)
	return common.execute_aws_command_with_input({ "codedeploy", "get-deployment-config" }, input)
end

--- Gets information about a deployment group
--- @param input table The input table for the get_deployment_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_deployment_group(input)
	return common.execute_aws_command_with_input({ "codedeploy", "get-deployment-group" }, input)
end

--- Gets information about an instance as part of a deployment
--- @param input table The input table for the get_deployment_instance command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_deployment_instance(input)
	return common.execute_aws_command_with_input({ "codedeploy", "get-deployment-instance" }, input)
end

--- Returns information about a deployment target
--- @param input table The input table for the get_deployment_target command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_deployment_target(input)
	return common.execute_aws_command_with_input({ "codedeploy", "get-deployment-target" }, input)
end

--- Gets information about an on-premises instance
--- @param input table The input table for the get_on_premises_instance command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_on_premises_instance(input)
	return common.execute_aws_command_with_input({ "codedeploy", "get-on-premises-instance" }, input)
end

--- Lists information about revisions for an application
--- @param input table The input table for the list_application_revisions command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_application_revisions(input)
	return common.execute_aws_command_with_input({ "codedeploy", "list-application-revisions" }, input)
end

--- Lists the applications registered with the user or Amazon Web Services account
--- @param input table The input table for the list_applications command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_applications(input)
	return common.execute_aws_command_with_input({ "codedeploy", "list-applications" }, input)
end

--- Lists the deployment configurations with the user or Amazon Web Services account
--- @param input table The input table for the list_deployment_configs command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_deployment_configs(input)
	return common.execute_aws_command_with_input({ "codedeploy", "list-deployment-configs" }, input)
end

--- Lists the deployment groups for an application registered with the Amazon Web Services user or Amazon Web Services account
--- @param input table The input table for the list_deployment_groups command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_deployment_groups(input)
	return common.execute_aws_command_with_input({ "codedeploy", "list-deployment-groups" }, input)
end

--- The newer BatchGetDeploymentTargets should be used instead because it works with all compute types
--- @param input table The input table for the list_deployment_instances command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_deployment_instances(input)
	return common.execute_aws_command_with_input({ "codedeploy", "list-deployment-instances" }, input)
end

--- Returns an array of target IDs that are associated a deployment
--- @param input table The input table for the list_deployment_targets command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_deployment_targets(input)
	return common.execute_aws_command_with_input({ "codedeploy", "list-deployment-targets" }, input)
end

--- Lists the deployments in a deployment group for an application registered with the user or Amazon Web Services account
--- @param input table The input table for the list_deployments command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_deployments(input)
	return common.execute_aws_command_with_input({ "codedeploy", "list-deployments" }, input)
end

--- Lists the names of stored connections to GitHub accounts
--- @param input table The input table for the list_git_hub_account_token_names command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_git_hub_account_token_names(input)
	return common.execute_aws_command_with_input({ "codedeploy", "list-git-hub-account-token-names" }, input)
end

--- Gets a list of names for one or more on-premises instances
--- @param input table The input table for the list_on_premises_instances command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_on_premises_instances(input)
	return common.execute_aws_command_with_input({ "codedeploy", "list-on-premises-instances" }, input)
end

--- Returns a list of tags for the resource identified by a specified Amazon Resource Name (ARN)
--- @param input table The input table for the list_tags_for_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_tags_for_resource(input)
	return common.execute_aws_command_with_input({ "codedeploy", "list-tags-for-resource" }, input)
end

--- Sets the result of a Lambda validation function
--- @param input table The input table for the put_lifecycle_event_hook_execution_status command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.put_lifecycle_event_hook_execution_status(input)
	return common.execute_aws_command_with_input({ "codedeploy", "put-lifecycle-event-hook-execution-status" }, input)
end

--- Registers with CodeDeploy a revision for the specified application
--- @param input table The input table for the register_application_revision command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.register_application_revision(input)
	return common.execute_aws_command_with_input({ "codedeploy", "register-application-revision" }, input)
end

--- Registers an on-premises instance
--- @param input table The input table for the register_on_premises_instance command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.register_on_premises_instance(input)
	return common.execute_aws_command_with_input({ "codedeploy", "register-on-premises-instance" }, input)
end

--- Removes one or more tags from one or more on-premises instances
--- @param input table The input table for the remove_tags_from_on_premises_instances command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.remove_tags_from_on_premises_instances(input)
	return common.execute_aws_command_with_input({ "codedeploy", "remove-tags-from-on-premises-instances" }, input)
end

--- In a blue/green deployment, overrides any specified wait time and starts terminating instances immediately after the traffic routing is complete
--- @param input table The input table for the skip_wait_time_for_instance_termination command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.skip_wait_time_for_instance_termination(input)
	return common.execute_aws_command_with_input({ "codedeploy", "skip-wait-time-for-instance-termination" }, input)
end

--- Attempts to stop an ongoing deployment
--- @param input table The input table for the stop_deployment command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.stop_deployment(input)
	return common.execute_aws_command_with_input({ "codedeploy", "stop-deployment" }, input)
end

--- Associates the list of tags in the input Tags parameter with the resource identified by the ResourceArn input parameter
--- @param input table The input table for the tag_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.tag_resource(input)
	return common.execute_aws_command_with_input({ "codedeploy", "tag-resource" }, input)
end

--- Disassociates a resource from a list of tags
--- @param input table The input table for the untag_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.untag_resource(input)
	return common.execute_aws_command_with_input({ "codedeploy", "untag-resource" }, input)
end

--- Changes the name of an application
--- @param input table The input table for the update_application command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_application(input)
	return common.execute_aws_command_with_input({ "codedeploy", "update-application" }, input)
end

--- Changes information about a deployment group
--- @param input table The input table for the update_deployment_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_deployment_group(input)
	return common.execute_aws_command_with_input({ "codedeploy", "update-deployment-group" }, input)
end

return M
