-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: lex-models-v2

local common = require("nvim-aws.wrappers.common")

--- AWS LEXV2-MODELS service functions
local M = {}

--- Create a batch of custom vocabulary items for a given bot locale's custom vocabulary
--- @param input table|nil The input table for the batch_create_custom_vocabulary_item command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.batch_create_custom_vocabulary_item(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "batch-create-custom-vocabulary-item" }, input)
end

--- Delete a batch of custom vocabulary items for a given bot locale's custom vocabulary
--- @param input table|nil The input table for the batch_delete_custom_vocabulary_item command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.batch_delete_custom_vocabulary_item(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "batch-delete-custom-vocabulary-item" }, input)
end

--- Update a batch of custom vocabulary items for a given bot locale's custom vocabulary
--- @param input table|nil The input table for the batch_update_custom_vocabulary_item command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.batch_update_custom_vocabulary_item(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "batch-update-custom-vocabulary-item" }, input)
end

--- Builds a bot, its intents, and its slot types into a specific locale
--- @param input table|nil The input table for the build_bot_locale command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.build_bot_locale(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "build-bot-locale" }, input)
end

--- Creates an Amazon Lex conversational bot
--- @param input table|nil The input table for the create_bot command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_bot(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "create-bot" }, input)
end

--- Creates an alias for the specified version of a bot
--- @param input table|nil The input table for the create_bot_alias command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_bot_alias(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "create-bot-alias" }, input)
end

--- Creates a locale in the bot
--- @param input table|nil The input table for the create_bot_locale command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_bot_locale(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "create-bot-locale" }, input)
end

--- Action to create a replication of the source bot in the secondary region
--- @param input table|nil The input table for the create_bot_replica command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_bot_replica(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "create-bot-replica" }, input)
end

--- Creates an immutable version of the bot
--- @param input table|nil The input table for the create_bot_version command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_bot_version(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "create-bot-version" }, input)
end

--- Creates a zip archive containing the contents of a bot or a bot locale
--- @param input table|nil The input table for the create_export command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_export(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "create-export" }, input)
end

--- Creates an intent
--- @param input table|nil The input table for the create_intent command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_intent(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "create-intent" }, input)
end

--- Creates a new resource policy with the specified policy statements
--- @param input table|nil The input table for the create_resource_policy command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_resource_policy(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "create-resource-policy" }, input)
end

--- Adds a new resource policy statement to a bot or bot alias
--- @param input table|nil The input table for the create_resource_policy_statement command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_resource_policy_statement(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "create-resource-policy-statement" }, input)
end

--- Creates a slot in an intent
--- @param input table|nil The input table for the create_slot command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_slot(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "create-slot" }, input)
end

--- Creates a custom slot type To create a custom slot type, specify a name for the slot type and a set of enumeration values, the values that a slot of this type can assume
--- @param input table|nil The input table for the create_slot_type command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_slot_type(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "create-slot-type" }, input)
end

--- Create a report that describes the differences between the bot and the test set
--- @param input table|nil The input table for the create_test_set_discrepancy_report command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_test_set_discrepancy_report(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "create-test-set-discrepancy-report" }, input)
end

--- Gets a pre-signed S3 write URL that you use to upload the zip archive when importing a bot or a bot locale
--- @param input table|nil The input table for the create_upload_url command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_upload_url(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "create-upload-url" }, input)
end

--- Deletes all versions of a bot, including the Draft version
--- @param input table|nil The input table for the delete_bot command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_bot(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "delete-bot" }, input)
end

--- Deletes the specified bot alias
--- @param input table|nil The input table for the delete_bot_alias command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_bot_alias(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "delete-bot-alias" }, input)
end

--- Removes a locale from a bot
--- @param input table|nil The input table for the delete_bot_locale command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_bot_locale(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "delete-bot-locale" }, input)
end

--- The action to delete the replicated bot in the secondary region
--- @param input table|nil The input table for the delete_bot_replica command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_bot_replica(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "delete-bot-replica" }, input)
end

--- Deletes a specific version of a bot
--- @param input table|nil The input table for the delete_bot_version command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_bot_version(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "delete-bot-version" }, input)
end

--- Removes a custom vocabulary from the specified locale in the specified bot
--- @param input table|nil The input table for the delete_custom_vocabulary command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_custom_vocabulary(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "delete-custom-vocabulary" }, input)
end

--- Removes a previous export and the associated files stored in an S3 bucket
--- @param input table|nil The input table for the delete_export command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_export(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "delete-export" }, input)
end

--- Removes a previous import and the associated file stored in an S3 bucket
--- @param input table|nil The input table for the delete_import command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_import(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "delete-import" }, input)
end

--- Removes the specified intent
--- @param input table|nil The input table for the delete_intent command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_intent(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "delete-intent" }, input)
end

--- Removes an existing policy from a bot or bot alias
--- @param input table|nil The input table for the delete_resource_policy command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_resource_policy(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "delete-resource-policy" }, input)
end

--- Deletes a policy statement from a resource policy
--- @param input table|nil The input table for the delete_resource_policy_statement command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_resource_policy_statement(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "delete-resource-policy-statement" }, input)
end

--- Deletes the specified slot from an intent
--- @param input table|nil The input table for the delete_slot command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_slot(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "delete-slot" }, input)
end

--- Deletes a slot type from a bot locale
--- @param input table|nil The input table for the delete_slot_type command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_slot_type(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "delete-slot-type" }, input)
end

--- The action to delete the selected test set
--- @param input table|nil The input table for the delete_test_set command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_test_set(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "delete-test-set" }, input)
end

--- Deletes stored utterances
--- @param input table|nil The input table for the delete_utterances command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_utterances(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "delete-utterances" }, input)
end

--- Provides metadata information about a bot
--- @param input table|nil The input table for the describe_bot command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_bot(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "describe-bot" }, input)
end

--- Get information about a specific bot alias
--- @param input table|nil The input table for the describe_bot_alias command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_bot_alias(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "describe-bot-alias" }, input)
end

--- Describes the settings that a bot has for a specific locale
--- @param input table|nil The input table for the describe_bot_locale command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_bot_locale(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "describe-bot-locale" }, input)
end

--- Provides metadata information about a bot recommendation
--- @param input table|nil The input table for the describe_bot_recommendation command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_bot_recommendation(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "describe-bot-recommendation" }, input)
end

--- Monitors the bot replication status through the UI console
--- @param input table|nil The input table for the describe_bot_replica command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_bot_replica(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "describe-bot-replica" }, input)
end

--- Returns information about a request to generate a bot through natural language description, made through the StartBotResource API
--- @param input table|nil The input table for the describe_bot_resource_generation command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_bot_resource_generation(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "describe-bot-resource-generation" }, input)
end

--- Provides metadata about a version of a bot
--- @param input table|nil The input table for the describe_bot_version command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_bot_version(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "describe-bot-version" }, input)
end

--- Provides metadata information about a custom vocabulary
--- @param input table|nil The input table for the describe_custom_vocabulary_metadata command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_custom_vocabulary_metadata(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "describe-custom-vocabulary-metadata" }, input)
end

--- Gets information about a specific export
--- @param input table|nil The input table for the describe_export command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_export(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "describe-export" }, input)
end

--- Gets information about a specific import
--- @param input table|nil The input table for the describe_import command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_import(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "describe-import" }, input)
end

--- Returns metadata about an intent
--- @param input table|nil The input table for the describe_intent command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_intent(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "describe-intent" }, input)
end

--- Gets the resource policy and policy revision for a bot or bot alias
--- @param input table|nil The input table for the describe_resource_policy command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_resource_policy(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "describe-resource-policy" }, input)
end

--- Gets metadata information about a slot
--- @param input table|nil The input table for the describe_slot command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_slot(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "describe-slot" }, input)
end

--- Gets metadata information about a slot type
--- @param input table|nil The input table for the describe_slot_type command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_slot_type(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "describe-slot-type" }, input)
end

--- Gets metadata information about the test execution
--- @param input table|nil The input table for the describe_test_execution command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_test_execution(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "describe-test-execution" }, input)
end

--- Gets metadata information about the test set
--- @param input table|nil The input table for the describe_test_set command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_test_set(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "describe-test-set" }, input)
end

--- Gets metadata information about the test set discrepancy report
--- @param input table|nil The input table for the describe_test_set_discrepancy_report command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_test_set_discrepancy_report(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "describe-test-set-discrepancy-report" }, input)
end

--- Gets metadata information about the test set generation
--- @param input table|nil The input table for the describe_test_set_generation command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_test_set_generation(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "describe-test-set-generation" }, input)
end

--- Generates sample utterances for an intent
--- @param input table|nil The input table for the generate_bot_element command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.generate_bot_element(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "generate-bot-element" }, input)
end

--- The pre-signed Amazon S3 URL to download the test execution result artifacts
--- @param input table|nil The input table for the get_test_execution_artifacts_url command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_test_execution_artifacts_url(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "get-test-execution-artifacts-url" }, input)
end

--- Provides a list of utterances that users have sent to the bot
--- @param input table|nil The input table for the list_aggregated_utterances command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_aggregated_utterances(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "list-aggregated-utterances" }, input)
end

--- The action to list the replicated bots created from the source bot alias
--- @param input table|nil The input table for the list_bot_alias_replicas command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_bot_alias_replicas(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "list-bot-alias-replicas" }, input)
end

--- Gets a list of aliases for the specified bot
--- @param input table|nil The input table for the list_bot_aliases command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_bot_aliases(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "list-bot-aliases" }, input)
end

--- Gets a list of locales for the specified bot
--- @param input table|nil The input table for the list_bot_locales command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_bot_locales(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "list-bot-locales" }, input)
end

--- Get a list of bot recommendations that meet the specified criteria
--- @param input table|nil The input table for the list_bot_recommendations command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_bot_recommendations(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "list-bot-recommendations" }, input)
end

--- The action to list the replicated bots
--- @param input table|nil The input table for the list_bot_replicas command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_bot_replicas(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "list-bot-replicas" }, input)
end

--- Lists the generation requests made for a bot locale
--- @param input table|nil The input table for the list_bot_resource_generations command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_bot_resource_generations(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "list-bot-resource-generations" }, input)
end

--- Contains information about all the versions replication statuses applicable for Global Resiliency
--- @param input table|nil The input table for the list_bot_version_replicas command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_bot_version_replicas(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "list-bot-version-replicas" }, input)
end

--- Gets information about all of the versions of a bot
--- @param input table|nil The input table for the list_bot_versions command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_bot_versions(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "list-bot-versions" }, input)
end

--- Gets a list of available bots
--- @param input table|nil The input table for the list_bots command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_bots(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "list-bots" }, input)
end

--- Gets a list of built-in intents provided by Amazon Lex that you can use in your bot
--- @param input table|nil The input table for the list_built_in_intents command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_built_in_intents(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "list-built-in-intents" }, input)
end

--- Gets a list of built-in slot types that meet the specified criteria
--- @param input table|nil The input table for the list_built_in_slot_types command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_built_in_slot_types(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "list-built-in-slot-types" }, input)
end

--- Paginated list of custom vocabulary items for a given bot locale's custom vocabulary
--- @param input table|nil The input table for the list_custom_vocabulary_items command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_custom_vocabulary_items(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "list-custom-vocabulary-items" }, input)
end

--- Lists the exports for a bot, bot locale, or custom vocabulary
--- @param input table|nil The input table for the list_exports command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_exports(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "list-exports" }, input)
end

--- Lists the imports for a bot, bot locale, or custom vocabulary
--- @param input table|nil The input table for the list_imports command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_imports(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "list-imports" }, input)
end

--- Retrieves summary metrics for the intents in your bot
--- @param input table|nil The input table for the list_intent_metrics command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_intent_metrics(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "list-intent-metrics" }, input)
end

--- Retrieves summary statistics for a path of intents that users take over sessions with your bot
--- @param input table|nil The input table for the list_intent_paths command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_intent_paths(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "list-intent-paths" }, input)
end

--- Retrieves summary metrics for the stages within intents in your bot
--- @param input table|nil The input table for the list_intent_stage_metrics command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_intent_stage_metrics(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "list-intent-stage-metrics" }, input)
end

--- Get a list of intents that meet the specified criteria
--- @param input table|nil The input table for the list_intents command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_intents(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "list-intents" }, input)
end

--- Gets a list of recommended intents provided by the bot recommendation that you can use in your bot
--- @param input table|nil The input table for the list_recommended_intents command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_recommended_intents(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "list-recommended-intents" }, input)
end

--- Retrieves a list of metadata for individual user sessions with your bot
--- @param input table|nil The input table for the list_session_analytics_data command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_session_analytics_data(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "list-session-analytics-data" }, input)
end

--- Retrieves summary metrics for the user sessions with your bot
--- @param input table|nil The input table for the list_session_metrics command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_session_metrics(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "list-session-metrics" }, input)
end

--- Gets a list of slot types that match the specified criteria
--- @param input table|nil The input table for the list_slot_types command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_slot_types(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "list-slot-types" }, input)
end

--- Gets a list of slots that match the specified criteria
--- @param input table|nil The input table for the list_slots command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_slots(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "list-slots" }, input)
end

--- Gets a list of tags associated with a resource
--- @param input table|nil The input table for the list_tags_for_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_tags_for_resource(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "list-tags-for-resource" }, input)
end

--- Gets a list of test execution result items
--- @param input table|nil The input table for the list_test_execution_result_items command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_test_execution_result_items(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "list-test-execution-result-items" }, input)
end

--- The list of test set executions
--- @param input table|nil The input table for the list_test_executions command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_test_executions(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "list-test-executions" }, input)
end

--- The list of test set records
--- @param input table|nil The input table for the list_test_set_records command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_test_set_records(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "list-test-set-records" }, input)
end

--- The list of the test sets
--- @param input table|nil The input table for the list_test_sets command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_test_sets(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "list-test-sets" }, input)
end

--- To use this API operation, your IAM role must have permissions to perform the ListAggregatedUtterances operation, which provides access to utterance-related analytics
--- @param input table|nil The input table for the list_utterance_analytics_data command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_utterance_analytics_data(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "list-utterance-analytics-data" }, input)
end

--- To use this API operation, your IAM role must have permissions to perform the ListAggregatedUtterances operation, which provides access to utterance-related analytics
--- @param input table|nil The input table for the list_utterance_metrics command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_utterance_metrics(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "list-utterance-metrics" }, input)
end

--- Search for associated transcripts that meet the specified criteria
--- @param input table|nil The input table for the search_associated_transcripts command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.search_associated_transcripts(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "search-associated-transcripts" }, input)
end

--- Use this to provide your transcript data, and to start the bot recommendation process
--- @param input table|nil The input table for the start_bot_recommendation command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.start_bot_recommendation(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "start-bot-recommendation" }, input)
end

--- Starts a request for the descriptive bot builder to generate a bot locale configuration based on the prompt you provide it
--- @param input table|nil The input table for the start_bot_resource_generation command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.start_bot_resource_generation(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "start-bot-resource-generation" }, input)
end

--- Starts importing a bot, bot locale, or custom vocabulary from a zip archive that you uploaded to an S3 bucket
--- @param input table|nil The input table for the start_import command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.start_import(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "start-import" }, input)
end

--- The action to start test set execution
--- @param input table|nil The input table for the start_test_execution command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.start_test_execution(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "start-test-execution" }, input)
end

--- The action to start the generation of test set
--- @param input table|nil The input table for the start_test_set_generation command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.start_test_set_generation(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "start-test-set-generation" }, input)
end

--- Stop an already running Bot Recommendation request
--- @param input table|nil The input table for the stop_bot_recommendation command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.stop_bot_recommendation(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "stop-bot-recommendation" }, input)
end

--- Adds the specified tags to the specified resource
--- @param input table|nil The input table for the tag_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.tag_resource(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "tag-resource" }, input)
end

--- Removes tags from a bot, bot alias, or bot channel
--- @param input table|nil The input table for the untag_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.untag_resource(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "untag-resource" }, input)
end

--- Updates the configuration of an existing bot
--- @param input table|nil The input table for the update_bot command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_bot(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "update-bot" }, input)
end

--- Updates the configuration of an existing bot alias
--- @param input table|nil The input table for the update_bot_alias command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_bot_alias(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "update-bot-alias" }, input)
end

--- Updates the settings that a bot has for a specific locale
--- @param input table|nil The input table for the update_bot_locale command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_bot_locale(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "update-bot-locale" }, input)
end

--- Updates an existing bot recommendation request
--- @param input table|nil The input table for the update_bot_recommendation command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_bot_recommendation(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "update-bot-recommendation" }, input)
end

--- Updates the password used to protect an export zip archive
--- @param input table|nil The input table for the update_export command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_export(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "update-export" }, input)
end

--- Updates the settings for an intent
--- @param input table|nil The input table for the update_intent command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_intent(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "update-intent" }, input)
end

--- Replaces the existing resource policy for a bot or bot alias with a new one
--- @param input table|nil The input table for the update_resource_policy command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_resource_policy(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "update-resource-policy" }, input)
end

--- Updates the settings for a slot
--- @param input table|nil The input table for the update_slot command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_slot(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "update-slot" }, input)
end

--- Updates the configuration of an existing slot type
--- @param input table|nil The input table for the update_slot_type command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_slot_type(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "update-slot-type" }, input)
end

--- The action to update the test set
--- @param input table|nil The input table for the update_test_set command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_test_set(input)
	return common.execute_aws_command_with_input({ "lexv2-models", "update-test-set" }, input)
end

return M
