-- AUTOGENERATED FILE - DO NOT EDIT
-- AWS Service: budgets

local common = require("nvim-aws.common")

--- AWS budgets service functions
local M = {}

--- AWS budgets create-budget operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_budget(input, callbacks)
	return common.execute_aws_command_skeleton({ "budgets", "create-budget" }, input, callbacks)
end

--- AWS budgets create-budget-action operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_budget_action(input, callbacks)
	return common.execute_aws_command_skeleton({ "budgets", "create-budget-action" }, input, callbacks)
end

--- AWS budgets create-notification operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_notification(input, callbacks)
	return common.execute_aws_command_skeleton({ "budgets", "create-notification" }, input, callbacks)
end

--- AWS budgets create-subscriber operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_subscriber(input, callbacks)
	return common.execute_aws_command_skeleton({ "budgets", "create-subscriber" }, input, callbacks)
end

--- AWS budgets delete-budget operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_budget(input, callbacks)
	return common.execute_aws_command_skeleton({ "budgets", "delete-budget" }, input, callbacks)
end

--- AWS budgets delete-budget-action operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_budget_action(input, callbacks)
	return common.execute_aws_command_skeleton({ "budgets", "delete-budget-action" }, input, callbacks)
end

--- AWS budgets delete-notification operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_notification(input, callbacks)
	return common.execute_aws_command_skeleton({ "budgets", "delete-notification" }, input, callbacks)
end

--- AWS budgets delete-subscriber operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_subscriber(input, callbacks)
	return common.execute_aws_command_skeleton({ "budgets", "delete-subscriber" }, input, callbacks)
end

--- AWS budgets describe-budget operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_budget(input, callbacks)
	return common.execute_aws_command_skeleton({ "budgets", "describe-budget" }, input, callbacks)
end

--- AWS budgets describe-budget-action operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_budget_action(input, callbacks)
	return common.execute_aws_command_skeleton({ "budgets", "describe-budget-action" }, input, callbacks)
end

--- AWS budgets describe-budget-action-histories operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_budget_action_histories(input, callbacks)
	return common.execute_aws_command_skeleton({ "budgets", "describe-budget-action-histories" }, input, callbacks)
end

--- AWS budgets describe-budget-actions-for-account operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_budget_actions_for_account(input, callbacks)
	return common.execute_aws_command_skeleton({ "budgets", "describe-budget-actions-for-account" }, input, callbacks)
end

--- AWS budgets describe-budget-actions-for-budget operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_budget_actions_for_budget(input, callbacks)
	return common.execute_aws_command_skeleton({ "budgets", "describe-budget-actions-for-budget" }, input, callbacks)
end

--- AWS budgets describe-budget-notifications-for-account operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_budget_notifications_for_account(input, callbacks)
	return common.execute_aws_command_skeleton({ "budgets", "describe-budget-notifications-for-account" }, input, callbacks)
end

--- AWS budgets describe-budget-performance-history operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_budget_performance_history(input, callbacks)
	return common.execute_aws_command_skeleton({ "budgets", "describe-budget-performance-history" }, input, callbacks)
end

--- AWS budgets describe-budgets operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_budgets(input, callbacks)
	return common.execute_aws_command_skeleton({ "budgets", "describe-budgets" }, input, callbacks)
end

--- AWS budgets describe-notifications-for-budget operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_notifications_for_budget(input, callbacks)
	return common.execute_aws_command_skeleton({ "budgets", "describe-notifications-for-budget" }, input, callbacks)
end

--- AWS budgets describe-subscribers-for-notification operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_subscribers_for_notification(input, callbacks)
	return common.execute_aws_command_skeleton({ "budgets", "describe-subscribers-for-notification" }, input, callbacks)
end

--- AWS budgets execute-budget-action operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.execute_budget_action(input, callbacks)
	return common.execute_aws_command_skeleton({ "budgets", "execute-budget-action" }, input, callbacks)
end

--- AWS budgets list-tags-for-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_tags_for_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "budgets", "list-tags-for-resource" }, input, callbacks)
end

--- AWS budgets tag-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.tag_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "budgets", "tag-resource" }, input, callbacks)
end

--- AWS budgets untag-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.untag_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "budgets", "untag-resource" }, input, callbacks)
end

--- AWS budgets update-budget operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_budget(input, callbacks)
	return common.execute_aws_command_skeleton({ "budgets", "update-budget" }, input, callbacks)
end

--- AWS budgets update-budget-action operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_budget_action(input, callbacks)
	return common.execute_aws_command_skeleton({ "budgets", "update-budget-action" }, input, callbacks)
end

--- AWS budgets update-notification operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_notification(input, callbacks)
	return common.execute_aws_command_skeleton({ "budgets", "update-notification" }, input, callbacks)
end

--- AWS budgets update-subscriber operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_subscriber(input, callbacks)
	return common.execute_aws_command_skeleton({ "budgets", "update-subscriber" }, input, callbacks)
end

return M
