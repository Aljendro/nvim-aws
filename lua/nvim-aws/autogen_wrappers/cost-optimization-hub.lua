-- AUTOGENERATED FILE - DO NOT EDIT
-- AWS Service: cost-optimization-hub

local common = require("nvim-aws.common")

--- AWS cost-optimization-hub service functions
local M = {}

--- AWS cost-optimization-hub get-preferences operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_preferences(input, callbacks)
	return common.execute_aws_command_skeleton({ "cost-optimization-hub", "get-preferences" }, input, callbacks)
end

--- AWS cost-optimization-hub get-recommendation operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_recommendation(input, callbacks)
	return common.execute_aws_command_skeleton({ "cost-optimization-hub", "get-recommendation" }, input, callbacks)
end

--- AWS cost-optimization-hub list-enrollment-statuses operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_enrollment_statuses(input, callbacks)
	return common.execute_aws_command_skeleton({ "cost-optimization-hub", "list-enrollment-statuses" }, input, callbacks)
end

--- AWS cost-optimization-hub list-recommendation-summaries operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_recommendation_summaries(input, callbacks)
	return common.execute_aws_command_skeleton({ "cost-optimization-hub", "list-recommendation-summaries" }, input, callbacks)
end

--- AWS cost-optimization-hub list-recommendations operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_recommendations(input, callbacks)
	return common.execute_aws_command_skeleton({ "cost-optimization-hub", "list-recommendations" }, input, callbacks)
end

--- AWS cost-optimization-hub update-enrollment-status operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_enrollment_status(input, callbacks)
	return common.execute_aws_command_skeleton({ "cost-optimization-hub", "update-enrollment-status" }, input, callbacks)
end

--- AWS cost-optimization-hub update-preferences operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_preferences(input, callbacks)
	return common.execute_aws_command_skeleton({ "cost-optimization-hub", "update-preferences" }, input, callbacks)
end

return M
