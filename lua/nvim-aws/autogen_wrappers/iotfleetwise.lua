-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-07 21:36:06
-- AWS Service: iotfleetwise

local common = require("nvim-aws.wrappers.common")

--- AWS IOTFLEETWISE service functions
local M = {}

--- Creates a group, or batch, of vehicles
--- @param input table The input table for the batch_create_vehicle command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.batch_create_vehicle(input)
	return common.execute_aws_command_with_input({ "iotfleetwise", "batch-create-vehicle" }, input)
end

--- Updates a group, or batch, of vehicles
--- @param input table The input table for the batch_update_vehicle command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.batch_update_vehicle(input)
	return common.execute_aws_command_with_input({ "iotfleetwise", "batch-update-vehicle" }, input)
end

--- Retrieves the encryption configuration for resources and data in Amazon Web Services IoT FleetWise
--- @param input table The input table for the get_encryption_configuration command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_encryption_configuration(input)
	return common.execute_aws_command_with_input({ "iotfleetwise", "get-encryption-configuration" }, input)
end

--- Retrieves the logging options
--- @param input table The input table for the get_logging_options command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_logging_options(input)
	return common.execute_aws_command_with_input({ "iotfleetwise", "get-logging-options" }, input)
end

--- Retrieves information about the status of registering your Amazon Web Services account, IAM, and Amazon Timestream resources so that Amazon Web Services IoT FleetWise can transfer your vehicle data to the Amazon Web Services Cloud
--- @param input table The input table for the get_register_account_status command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_register_account_status(input)
	return common.execute_aws_command_with_input({ "iotfleetwise", "get-register-account-status" }, input)
end

--- Retrieves information about the status of campaigns, decoder manifests, or state templates associated with a vehicle
--- @param input table The input table for the get_vehicle_status command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_vehicle_status(input)
	return common.execute_aws_command_with_input({ "iotfleetwise", "get-vehicle-status" }, input)
end

--- Lists the tags (metadata) you have assigned to the resource
--- @param input table The input table for the list_tags_for_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_tags_for_resource(input)
	return common.execute_aws_command_with_input({ "iotfleetwise", "list-tags-for-resource" }, input)
end

--- Creates or updates the encryption configuration
--- @param input table The input table for the put_encryption_configuration command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.put_encryption_configuration(input)
	return common.execute_aws_command_with_input({ "iotfleetwise", "put-encryption-configuration" }, input)
end

--- Creates or updates the logging option
--- @param input table The input table for the put_logging_options command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.put_logging_options(input)
	return common.execute_aws_command_with_input({ "iotfleetwise", "put-logging-options" }, input)
end

--- This API operation contains deprecated parameters
--- @param input table The input table for the register_account command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.register_account(input)
	return common.execute_aws_command_with_input({ "iotfleetwise", "register-account" }, input)
end

--- Adds to or modifies the tags of the given resource
--- @param input table The input table for the tag_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.tag_resource(input)
	return common.execute_aws_command_with_input({ "iotfleetwise", "tag-resource" }, input)
end

--- Removes the given tags (metadata) from the resource
--- @param input table The input table for the untag_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.untag_resource(input)
	return common.execute_aws_command_with_input({ "iotfleetwise", "untag-resource" }, input)
end

return M
