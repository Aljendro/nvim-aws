-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: iot

local common = require("nvim-aws.wrappers.common")

--- AWS IOT service functions
local M = {}

--- Accepts a pending certificate transfer
--- @param input table The input table for the accept_certificate_transfer command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.accept_certificate_transfer(input)
	return common.execute_aws_command_with_input({ "iot", "accept-certificate-transfer" }, input)
end

--- Adds a thing to a billing group
--- @param input table The input table for the add_thing_to_billing_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.add_thing_to_billing_group(input)
	return common.execute_aws_command_with_input({ "iot", "add-thing-to-billing-group" }, input)
end

--- Adds a thing to a thing group
--- @param input table The input table for the add_thing_to_thing_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.add_thing_to_thing_group(input)
	return common.execute_aws_command_with_input({ "iot", "add-thing-to-thing-group" }, input)
end

--- Associates the selected software bill of materials (SBOM) with a specific software package version
--- @param input table The input table for the associate_sbom_with_package_version command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.associate_sbom_with_package_version(input)
	return common.execute_aws_command_with_input({ "iot", "associate-sbom-with-package-version" }, input)
end

--- Associates a group with a continuous job
--- @param input table The input table for the associate_targets_with_job command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.associate_targets_with_job(input)
	return common.execute_aws_command_with_input({ "iot", "associate-targets-with-job" }, input)
end

--- Attaches the specified policy to the specified principal (certificate or other credential)
--- @param input table The input table for the attach_policy command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.attach_policy(input)
	return common.execute_aws_command_with_input({ "iot", "attach-policy" }, input)
end

--- Attaches the specified policy to the specified principal (certificate or other credential)
--- @param input table The input table for the attach_principal_policy command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.attach_principal_policy(input)
	return common.execute_aws_command_with_input({ "iot", "attach-principal-policy" }, input)
end

--- Associates a Device Defender security profile with a thing group or this account
--- @param input table The input table for the attach_security_profile command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.attach_security_profile(input)
	return common.execute_aws_command_with_input({ "iot", "attach-security-profile" }, input)
end

--- Attaches the specified principal to the specified thing
--- @param input table The input table for the attach_thing_principal command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.attach_thing_principal(input)
	return common.execute_aws_command_with_input({ "iot", "attach-thing-principal" }, input)
end

--- Cancels a mitigation action task that is in progress
--- @param input table The input table for the cancel_audit_mitigation_actions_task command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.cancel_audit_mitigation_actions_task(input)
	return common.execute_aws_command_with_input({ "iot", "cancel-audit-mitigation-actions-task" }, input)
end

--- Cancels an audit that is in progress
--- @param input table The input table for the cancel_audit_task command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.cancel_audit_task(input)
	return common.execute_aws_command_with_input({ "iot", "cancel-audit-task" }, input)
end

--- Cancels a pending transfer for the specified certificate
--- @param input table The input table for the cancel_certificate_transfer command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.cancel_certificate_transfer(input)
	return common.execute_aws_command_with_input({ "iot", "cancel-certificate-transfer" }, input)
end

--- Cancels a Device Defender ML Detect mitigation action
--- @param input table The input table for the cancel_detect_mitigation_actions_task command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.cancel_detect_mitigation_actions_task(input)
	return common.execute_aws_command_with_input({ "iot", "cancel-detect-mitigation-actions-task" }, input)
end

--- Cancels a job
--- @param input table The input table for the cancel_job command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.cancel_job(input)
	return common.execute_aws_command_with_input({ "iot", "cancel-job" }, input)
end

--- Cancels the execution of a job for a given thing
--- @param input table The input table for the cancel_job_execution command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.cancel_job_execution(input)
	return common.execute_aws_command_with_input({ "iot", "cancel-job-execution" }, input)
end

--- Clears the default authorizer
--- @param input table The input table for the clear_default_authorizer command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.clear_default_authorizer(input)
	return common.execute_aws_command_with_input({ "iot", "clear-default-authorizer" }, input)
end

--- Confirms a topic rule destination
--- @param input table The input table for the confirm_topic_rule_destination command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.confirm_topic_rule_destination(input)
	return common.execute_aws_command_with_input({ "iot", "confirm-topic-rule-destination" }, input)
end

--- Creates a Device Defender audit suppression
--- @param input table The input table for the create_audit_suppression command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_audit_suppression(input)
	return common.execute_aws_command_with_input({ "iot", "create-audit-suppression" }, input)
end

--- Creates an authorizer
--- @param input table The input table for the create_authorizer command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_authorizer(input)
	return common.execute_aws_command_with_input({ "iot", "create-authorizer" }, input)
end

--- Creates a billing group
--- @param input table The input table for the create_billing_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_billing_group(input)
	return common.execute_aws_command_with_input({ "iot", "create-billing-group" }, input)
end

--- Creates an X
--- @param input table The input table for the create_certificate_from_csr command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_certificate_from_csr(input)
	return common.execute_aws_command_with_input({ "iot", "create-certificate-from-csr" }, input)
end

--- Creates an Amazon Web Services IoT Core certificate provider
--- @param input table The input table for the create_certificate_provider command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_certificate_provider(input)
	return common.execute_aws_command_with_input({ "iot", "create-certificate-provider" }, input)
end

--- Creates a command
--- @param input table The input table for the create_command command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_command(input)
	return common.execute_aws_command_with_input({ "iot", "create-command" }, input)
end

--- Use this API to define a Custom Metric published by your devices to Device Defender
--- @param input table The input table for the create_custom_metric command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_custom_metric(input)
	return common.execute_aws_command_with_input({ "iot", "create-custom-metric" }, input)
end

--- Create a dimension that you can use to limit the scope of a metric used in a security profile for IoT Device Defender
--- @param input table The input table for the create_dimension command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_dimension(input)
	return common.execute_aws_command_with_input({ "iot", "create-dimension" }, input)
end

--- Creates a domain configuration
--- @param input table The input table for the create_domain_configuration command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_domain_configuration(input)
	return common.execute_aws_command_with_input({ "iot", "create-domain-configuration" }, input)
end

--- Creates a dynamic thing group
--- @param input table The input table for the create_dynamic_thing_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_dynamic_thing_group(input)
	return common.execute_aws_command_with_input({ "iot", "create-dynamic-thing-group" }, input)
end

--- Creates a fleet metric
--- @param input table The input table for the create_fleet_metric command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_fleet_metric(input)
	return common.execute_aws_command_with_input({ "iot", "create-fleet-metric" }, input)
end

--- Creates a job
--- @param input table The input table for the create_job command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_job(input)
	return common.execute_aws_command_with_input({ "iot", "create-job" }, input)
end

--- Creates a job template
--- @param input table The input table for the create_job_template command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_job_template(input)
	return common.execute_aws_command_with_input({ "iot", "create-job-template" }, input)
end

--- Creates a 2048-bit RSA key pair and issues an X
--- @param input table The input table for the create_keys_and_certificate command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_keys_and_certificate(input)
	return common.execute_aws_command_with_input({ "iot", "create-keys-and-certificate" }, input)
end

--- Defines an action that can be applied to audit findings by using StartAuditMitigationActionsTask
--- @param input table The input table for the create_mitigation_action command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_mitigation_action(input)
	return common.execute_aws_command_with_input({ "iot", "create-mitigation-action" }, input)
end

--- Creates an IoT OTA update on a target group of things or groups
--- @param input table The input table for the create_ota_update command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_ota_update(input)
	return common.execute_aws_command_with_input({ "iot", "create-ota-update" }, input)
end

--- Creates an IoT software package that can be deployed to your fleet
--- @param input table The input table for the create_package command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_package(input)
	return common.execute_aws_command_with_input({ "iot", "create-package" }, input)
end

--- Creates a new version for an existing IoT software package
--- @param input table The input table for the create_package_version command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_package_version(input)
	return common.execute_aws_command_with_input({ "iot", "create-package-version" }, input)
end

--- Creates an IoT policy
--- @param input table The input table for the create_policy command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_policy(input)
	return common.execute_aws_command_with_input({ "iot", "create-policy" }, input)
end

--- Creates a new version of the specified IoT policy
--- @param input table The input table for the create_policy_version command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_policy_version(input)
	return common.execute_aws_command_with_input({ "iot", "create-policy-version" }, input)
end

--- Creates a provisioning claim
--- @param input table The input table for the create_provisioning_claim command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_provisioning_claim(input)
	return common.execute_aws_command_with_input({ "iot", "create-provisioning-claim" }, input)
end

--- Creates a provisioning template
--- @param input table The input table for the create_provisioning_template command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_provisioning_template(input)
	return common.execute_aws_command_with_input({ "iot", "create-provisioning-template" }, input)
end

--- Creates a new version of a provisioning template
--- @param input table The input table for the create_provisioning_template_version command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_provisioning_template_version(input)
	return common.execute_aws_command_with_input({ "iot", "create-provisioning-template-version" }, input)
end

--- Creates a role alias
--- @param input table The input table for the create_role_alias command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_role_alias(input)
	return common.execute_aws_command_with_input({ "iot", "create-role-alias" }, input)
end

--- Creates a scheduled audit that is run at a specified time interval
--- @param input table The input table for the create_scheduled_audit command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_scheduled_audit(input)
	return common.execute_aws_command_with_input({ "iot", "create-scheduled-audit" }, input)
end

--- Creates a Device Defender security profile
--- @param input table The input table for the create_security_profile command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_security_profile(input)
	return common.execute_aws_command_with_input({ "iot", "create-security-profile" }, input)
end

--- Creates a stream for delivering one or more large files in chunks over MQTT
--- @param input table The input table for the create_stream command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_stream(input)
	return common.execute_aws_command_with_input({ "iot", "create-stream" }, input)
end

--- Creates a thing record in the registry
--- @param input table The input table for the create_thing command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_thing(input)
	return common.execute_aws_command_with_input({ "iot", "create-thing" }, input)
end

--- Create a thing group
--- @param input table The input table for the create_thing_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_thing_group(input)
	return common.execute_aws_command_with_input({ "iot", "create-thing-group" }, input)
end

--- Creates a new thing type
--- @param input table The input table for the create_thing_type command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_thing_type(input)
	return common.execute_aws_command_with_input({ "iot", "create-thing-type" }, input)
end

--- Creates a rule
--- @param input table The input table for the create_topic_rule command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_topic_rule(input)
	return common.execute_aws_command_with_input({ "iot", "create-topic-rule" }, input)
end

--- Creates a topic rule destination
--- @param input table The input table for the create_topic_rule_destination command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_topic_rule_destination(input)
	return common.execute_aws_command_with_input({ "iot", "create-topic-rule-destination" }, input)
end

--- Restores the default settings for Device Defender audits for this account
--- @param input table The input table for the delete_account_audit_configuration command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_account_audit_configuration(input)
	return common.execute_aws_command_with_input({ "iot", "delete-account-audit-configuration" }, input)
end

--- Deletes a Device Defender audit suppression
--- @param input table The input table for the delete_audit_suppression command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_audit_suppression(input)
	return common.execute_aws_command_with_input({ "iot", "delete-audit-suppression" }, input)
end

--- Deletes an authorizer
--- @param input table The input table for the delete_authorizer command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_authorizer(input)
	return common.execute_aws_command_with_input({ "iot", "delete-authorizer" }, input)
end

--- Deletes the billing group
--- @param input table The input table for the delete_billing_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_billing_group(input)
	return common.execute_aws_command_with_input({ "iot", "delete-billing-group" }, input)
end

--- Deletes a registered CA certificate
--- @param input table The input table for the delete_ca_certificate command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_ca_certificate(input)
	return common.execute_aws_command_with_input({ "iot", "delete-ca-certificate" }, input)
end

--- Deletes the specified certificate
--- @param input table The input table for the delete_certificate command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_certificate(input)
	return common.execute_aws_command_with_input({ "iot", "delete-certificate" }, input)
end

--- Deletes a certificate provider
--- @param input table The input table for the delete_certificate_provider command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_certificate_provider(input)
	return common.execute_aws_command_with_input({ "iot", "delete-certificate-provider" }, input)
end

--- Delete a command resource
--- @param input table The input table for the delete_command command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_command(input)
	return common.execute_aws_command_with_input({ "iot", "delete-command" }, input)
end

--- Delete a command execution
--- @param input table The input table for the delete_command_execution command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_command_execution(input)
	return common.execute_aws_command_with_input({ "iot", "delete-command-execution" }, input)
end

--- Deletes a Device Defender detect custom metric
--- @param input table The input table for the delete_custom_metric command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_custom_metric(input)
	return common.execute_aws_command_with_input({ "iot", "delete-custom-metric" }, input)
end

--- Removes the specified dimension from your Amazon Web Services accounts
--- @param input table The input table for the delete_dimension command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_dimension(input)
	return common.execute_aws_command_with_input({ "iot", "delete-dimension" }, input)
end

--- Deletes the specified domain configuration
--- @param input table The input table for the delete_domain_configuration command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_domain_configuration(input)
	return common.execute_aws_command_with_input({ "iot", "delete-domain-configuration" }, input)
end

--- Deletes a dynamic thing group
--- @param input table The input table for the delete_dynamic_thing_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_dynamic_thing_group(input)
	return common.execute_aws_command_with_input({ "iot", "delete-dynamic-thing-group" }, input)
end

--- Deletes the specified fleet metric
--- @param input table The input table for the delete_fleet_metric command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_fleet_metric(input)
	return common.execute_aws_command_with_input({ "iot", "delete-fleet-metric" }, input)
end

--- Deletes a job and its related job executions
--- @param input table The input table for the delete_job command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_job(input)
	return common.execute_aws_command_with_input({ "iot", "delete-job" }, input)
end

--- Deletes a job execution
--- @param input table The input table for the delete_job_execution command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_job_execution(input)
	return common.execute_aws_command_with_input({ "iot", "delete-job-execution" }, input)
end

--- Deletes the specified job template
--- @param input table The input table for the delete_job_template command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_job_template(input)
	return common.execute_aws_command_with_input({ "iot", "delete-job-template" }, input)
end

--- Deletes a defined mitigation action from your Amazon Web Services accounts
--- @param input table The input table for the delete_mitigation_action command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_mitigation_action(input)
	return common.execute_aws_command_with_input({ "iot", "delete-mitigation-action" }, input)
end

--- Delete an OTA update
--- @param input table The input table for the delete_ota_update command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_ota_update(input)
	return common.execute_aws_command_with_input({ "iot", "delete-ota-update" }, input)
end

--- Deletes a specific version from a software package
--- @param input table The input table for the delete_package command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_package(input)
	return common.execute_aws_command_with_input({ "iot", "delete-package" }, input)
end

--- Deletes a specific version from a software package
--- @param input table The input table for the delete_package_version command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_package_version(input)
	return common.execute_aws_command_with_input({ "iot", "delete-package-version" }, input)
end

--- Deletes the specified policy
--- @param input table The input table for the delete_policy command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_policy(input)
	return common.execute_aws_command_with_input({ "iot", "delete-policy" }, input)
end

--- Deletes the specified version of the specified policy
--- @param input table The input table for the delete_policy_version command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_policy_version(input)
	return common.execute_aws_command_with_input({ "iot", "delete-policy-version" }, input)
end

--- Deletes a provisioning template
--- @param input table The input table for the delete_provisioning_template command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_provisioning_template(input)
	return common.execute_aws_command_with_input({ "iot", "delete-provisioning-template" }, input)
end

--- Deletes a provisioning template version
--- @param input table The input table for the delete_provisioning_template_version command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_provisioning_template_version(input)
	return common.execute_aws_command_with_input({ "iot", "delete-provisioning-template-version" }, input)
end

--- Deletes a CA certificate registration code
--- @param input table The input table for the delete_registration_code command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_registration_code(input)
	return common.execute_aws_command_with_input({ "iot", "delete-registration-code" }, input)
end

--- Deletes a role alias Requires permission to access the DeleteRoleAlias action
--- @param input table The input table for the delete_role_alias command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_role_alias(input)
	return common.execute_aws_command_with_input({ "iot", "delete-role-alias" }, input)
end

--- Deletes a scheduled audit
--- @param input table The input table for the delete_scheduled_audit command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_scheduled_audit(input)
	return common.execute_aws_command_with_input({ "iot", "delete-scheduled-audit" }, input)
end

--- Deletes a Device Defender security profile
--- @param input table The input table for the delete_security_profile command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_security_profile(input)
	return common.execute_aws_command_with_input({ "iot", "delete-security-profile" }, input)
end

--- Deletes a stream
--- @param input table The input table for the delete_stream command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_stream(input)
	return common.execute_aws_command_with_input({ "iot", "delete-stream" }, input)
end

--- Deletes the specified thing
--- @param input table The input table for the delete_thing command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_thing(input)
	return common.execute_aws_command_with_input({ "iot", "delete-thing" }, input)
end

--- Deletes a thing group
--- @param input table The input table for the delete_thing_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_thing_group(input)
	return common.execute_aws_command_with_input({ "iot", "delete-thing-group" }, input)
end

--- Deletes the specified thing type
--- @param input table The input table for the delete_thing_type command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_thing_type(input)
	return common.execute_aws_command_with_input({ "iot", "delete-thing-type" }, input)
end

--- Deletes the rule
--- @param input table The input table for the delete_topic_rule command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_topic_rule(input)
	return common.execute_aws_command_with_input({ "iot", "delete-topic-rule" }, input)
end

--- Deletes a topic rule destination
--- @param input table The input table for the delete_topic_rule_destination command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_topic_rule_destination(input)
	return common.execute_aws_command_with_input({ "iot", "delete-topic-rule-destination" }, input)
end

--- Deletes a logging level
--- @param input table The input table for the delete_v2_logging_level command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_v2_logging_level(input)
	return common.execute_aws_command_with_input({ "iot", "delete-v2-logging-level" }, input)
end

--- Deprecates a thing type
--- @param input table The input table for the deprecate_thing_type command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.deprecate_thing_type(input)
	return common.execute_aws_command_with_input({ "iot", "deprecate-thing-type" }, input)
end

--- Gets information about the Device Defender audit settings for this account
--- @param input table The input table for the describe_account_audit_configuration command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_account_audit_configuration(input)
	return common.execute_aws_command_with_input({ "iot", "describe-account-audit-configuration" }, input)
end

--- Gets information about a single audit finding
--- @param input table The input table for the describe_audit_finding command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_audit_finding(input)
	return common.execute_aws_command_with_input({ "iot", "describe-audit-finding" }, input)
end

--- Gets information about an audit mitigation task that is used to apply mitigation actions to a set of audit findings
--- @param input table The input table for the describe_audit_mitigation_actions_task command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_audit_mitigation_actions_task(input)
	return common.execute_aws_command_with_input({ "iot", "describe-audit-mitigation-actions-task" }, input)
end

--- Gets information about a Device Defender audit suppression
--- @param input table The input table for the describe_audit_suppression command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_audit_suppression(input)
	return common.execute_aws_command_with_input({ "iot", "describe-audit-suppression" }, input)
end

--- Gets information about a Device Defender audit
--- @param input table The input table for the describe_audit_task command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_audit_task(input)
	return common.execute_aws_command_with_input({ "iot", "describe-audit-task" }, input)
end

--- Describes an authorizer
--- @param input table The input table for the describe_authorizer command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_authorizer(input)
	return common.execute_aws_command_with_input({ "iot", "describe-authorizer" }, input)
end

--- Returns information about a billing group
--- @param input table The input table for the describe_billing_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_billing_group(input)
	return common.execute_aws_command_with_input({ "iot", "describe-billing-group" }, input)
end

--- Describes a registered CA certificate
--- @param input table The input table for the describe_ca_certificate command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_ca_certificate(input)
	return common.execute_aws_command_with_input({ "iot", "describe-ca-certificate" }, input)
end

--- Gets information about the specified certificate
--- @param input table The input table for the describe_certificate command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_certificate(input)
	return common.execute_aws_command_with_input({ "iot", "describe-certificate" }, input)
end

--- Describes a certificate provider
--- @param input table The input table for the describe_certificate_provider command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_certificate_provider(input)
	return common.execute_aws_command_with_input({ "iot", "describe-certificate-provider" }, input)
end

--- Gets information about a Device Defender detect custom metric
--- @param input table The input table for the describe_custom_metric command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_custom_metric(input)
	return common.execute_aws_command_with_input({ "iot", "describe-custom-metric" }, input)
end

--- Describes the default authorizer
--- @param input table The input table for the describe_default_authorizer command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_default_authorizer(input)
	return common.execute_aws_command_with_input({ "iot", "describe-default-authorizer" }, input)
end

--- Gets information about a Device Defender ML Detect mitigation action
--- @param input table The input table for the describe_detect_mitigation_actions_task command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_detect_mitigation_actions_task(input)
	return common.execute_aws_command_with_input({ "iot", "describe-detect-mitigation-actions-task" }, input)
end

--- Provides details about a dimension that is defined in your Amazon Web Services accounts
--- @param input table The input table for the describe_dimension command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_dimension(input)
	return common.execute_aws_command_with_input({ "iot", "describe-dimension" }, input)
end

--- Gets summary information about a domain configuration
--- @param input table The input table for the describe_domain_configuration command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_domain_configuration(input)
	return common.execute_aws_command_with_input({ "iot", "describe-domain-configuration" }, input)
end

--- Returns or creates a unique endpoint specific to the Amazon Web Services account making the call
--- @param input table The input table for the describe_endpoint command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_endpoint(input)
	return common.execute_aws_command_with_input({ "iot", "describe-endpoint" }, input)
end

--- Describes event configurations
--- @param input table The input table for the describe_event_configurations command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_event_configurations(input)
	return common.execute_aws_command_with_input({ "iot", "describe-event-configurations" }, input)
end

--- Gets information about the specified fleet metric
--- @param input table The input table for the describe_fleet_metric command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_fleet_metric(input)
	return common.execute_aws_command_with_input({ "iot", "describe-fleet-metric" }, input)
end

--- Describes a search index
--- @param input table The input table for the describe_index command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_index(input)
	return common.execute_aws_command_with_input({ "iot", "describe-index" }, input)
end

--- Describes a job
--- @param input table The input table for the describe_job command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_job(input)
	return common.execute_aws_command_with_input({ "iot", "describe-job" }, input)
end

--- Describes a job execution
--- @param input table The input table for the describe_job_execution command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_job_execution(input)
	return common.execute_aws_command_with_input({ "iot", "describe-job-execution" }, input)
end

--- Returns information about a job template
--- @param input table The input table for the describe_job_template command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_job_template(input)
	return common.execute_aws_command_with_input({ "iot", "describe-job-template" }, input)
end

--- View details of a managed job template
--- @param input table The input table for the describe_managed_job_template command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_managed_job_template(input)
	return common.execute_aws_command_with_input({ "iot", "describe-managed-job-template" }, input)
end

--- Gets information about a mitigation action
--- @param input table The input table for the describe_mitigation_action command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_mitigation_action(input)
	return common.execute_aws_command_with_input({ "iot", "describe-mitigation-action" }, input)
end

--- Returns information about a provisioning template
--- @param input table The input table for the describe_provisioning_template command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_provisioning_template(input)
	return common.execute_aws_command_with_input({ "iot", "describe-provisioning-template" }, input)
end

--- Returns information about a provisioning template version
--- @param input table The input table for the describe_provisioning_template_version command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_provisioning_template_version(input)
	return common.execute_aws_command_with_input({ "iot", "describe-provisioning-template-version" }, input)
end

--- Describes a role alias
--- @param input table The input table for the describe_role_alias command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_role_alias(input)
	return common.execute_aws_command_with_input({ "iot", "describe-role-alias" }, input)
end

--- Gets information about a scheduled audit
--- @param input table The input table for the describe_scheduled_audit command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_scheduled_audit(input)
	return common.execute_aws_command_with_input({ "iot", "describe-scheduled-audit" }, input)
end

--- Gets information about a Device Defender security profile
--- @param input table The input table for the describe_security_profile command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_security_profile(input)
	return common.execute_aws_command_with_input({ "iot", "describe-security-profile" }, input)
end

--- Gets information about a stream
--- @param input table The input table for the describe_stream command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_stream(input)
	return common.execute_aws_command_with_input({ "iot", "describe-stream" }, input)
end

--- Gets information about the specified thing
--- @param input table The input table for the describe_thing command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_thing(input)
	return common.execute_aws_command_with_input({ "iot", "describe-thing" }, input)
end

--- Describe a thing group
--- @param input table The input table for the describe_thing_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_thing_group(input)
	return common.execute_aws_command_with_input({ "iot", "describe-thing-group" }, input)
end

--- Describes a bulk thing provisioning task
--- @param input table The input table for the describe_thing_registration_task command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_thing_registration_task(input)
	return common.execute_aws_command_with_input({ "iot", "describe-thing-registration-task" }, input)
end

--- Gets information about the specified thing type
--- @param input table The input table for the describe_thing_type command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_thing_type(input)
	return common.execute_aws_command_with_input({ "iot", "describe-thing-type" }, input)
end

--- Detaches a policy from the specified target
--- @param input table The input table for the detach_policy command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.detach_policy(input)
	return common.execute_aws_command_with_input({ "iot", "detach-policy" }, input)
end

--- Removes the specified policy from the specified certificate
--- @param input table The input table for the detach_principal_policy command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.detach_principal_policy(input)
	return common.execute_aws_command_with_input({ "iot", "detach-principal-policy" }, input)
end

--- Disassociates a Device Defender security profile from a thing group or from this account
--- @param input table The input table for the detach_security_profile command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.detach_security_profile(input)
	return common.execute_aws_command_with_input({ "iot", "detach-security-profile" }, input)
end

--- Detaches the specified principal from the specified thing
--- @param input table The input table for the detach_thing_principal command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.detach_thing_principal(input)
	return common.execute_aws_command_with_input({ "iot", "detach-thing-principal" }, input)
end

--- Disables the rule
--- @param input table The input table for the disable_topic_rule command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.disable_topic_rule(input)
	return common.execute_aws_command_with_input({ "iot", "disable-topic-rule" }, input)
end

--- Disassociates the selected software bill of materials (SBOM) from a specific software package version
--- @param input table The input table for the disassociate_sbom_from_package_version command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.disassociate_sbom_from_package_version(input)
	return common.execute_aws_command_with_input({ "iot", "disassociate-sbom-from-package-version" }, input)
end

--- Enables the rule
--- @param input table The input table for the enable_topic_rule command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.enable_topic_rule(input)
	return common.execute_aws_command_with_input({ "iot", "enable-topic-rule" }, input)
end

--- Returns a Device Defender's ML Detect Security Profile training model's status
--- @param input table The input table for the get_behavior_model_training_summaries command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_behavior_model_training_summaries(input)
	return common.execute_aws_command_with_input({ "iot", "get-behavior-model-training-summaries" }, input)
end

--- Aggregates on indexed data with search queries pertaining to particular fields
--- @param input table The input table for the get_buckets_aggregation command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_buckets_aggregation(input)
	return common.execute_aws_command_with_input({ "iot", "get-buckets-aggregation" }, input)
end

--- Returns the approximate count of unique values that match the query
--- @param input table The input table for the get_cardinality command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_cardinality(input)
	return common.execute_aws_command_with_input({ "iot", "get-cardinality" }, input)
end

--- Gets information about the specified command
--- @param input table The input table for the get_command command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_command(input)
	return common.execute_aws_command_with_input({ "iot", "get-command" }, input)
end

--- Gets information about the specific command execution on a single device
--- @param input table The input table for the get_command_execution command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_command_execution(input)
	return common.execute_aws_command_with_input({ "iot", "get-command-execution" }, input)
end

--- Gets a list of the policies that have an effect on the authorization behavior of the specified device when it connects to the IoT device gateway
--- @param input table The input table for the get_effective_policies command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_effective_policies(input)
	return common.execute_aws_command_with_input({ "iot", "get-effective-policies" }, input)
end

--- Gets the indexing configuration
--- @param input table The input table for the get_indexing_configuration command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_indexing_configuration(input)
	return common.execute_aws_command_with_input({ "iot", "get-indexing-configuration" }, input)
end

--- Gets a job document
--- @param input table The input table for the get_job_document command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_job_document(input)
	return common.execute_aws_command_with_input({ "iot", "get-job-document" }, input)
end

--- Gets the logging options
--- @param input table The input table for the get_logging_options command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_logging_options(input)
	return common.execute_aws_command_with_input({ "iot", "get-logging-options" }, input)
end

--- Gets an OTA update
--- @param input table The input table for the get_ota_update command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_ota_update(input)
	return common.execute_aws_command_with_input({ "iot", "get-ota-update" }, input)
end

--- Gets information about the specified software package
--- @param input table The input table for the get_package command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_package(input)
	return common.execute_aws_command_with_input({ "iot", "get-package" }, input)
end

--- Gets information about the specified software package's configuration
--- @param input table The input table for the get_package_configuration command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_package_configuration(input)
	return common.execute_aws_command_with_input({ "iot", "get-package-configuration" }, input)
end

--- Gets information about the specified package version
--- @param input table The input table for the get_package_version command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_package_version(input)
	return common.execute_aws_command_with_input({ "iot", "get-package-version" }, input)
end

--- Groups the aggregated values that match the query into percentile groupings
--- @param input table The input table for the get_percentiles command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_percentiles(input)
	return common.execute_aws_command_with_input({ "iot", "get-percentiles" }, input)
end

--- Gets information about the specified policy with the policy document of the default version
--- @param input table The input table for the get_policy command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_policy(input)
	return common.execute_aws_command_with_input({ "iot", "get-policy" }, input)
end

--- Gets information about the specified policy version
--- @param input table The input table for the get_policy_version command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_policy_version(input)
	return common.execute_aws_command_with_input({ "iot", "get-policy-version" }, input)
end

--- Gets a registration code used to register a CA certificate with IoT
--- @param input table The input table for the get_registration_code command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_registration_code(input)
	return common.execute_aws_command_with_input({ "iot", "get-registration-code" }, input)
end

--- Returns the count, average, sum, minimum, maximum, sum of squares, variance, and standard deviation for the specified aggregated field
--- @param input table The input table for the get_statistics command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_statistics(input)
	return common.execute_aws_command_with_input({ "iot", "get-statistics" }, input)
end

--- Retrieves the live connectivity status per device
--- @param input table The input table for the get_thing_connectivity_data command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_thing_connectivity_data(input)
	return common.execute_aws_command_with_input({ "iot", "get-thing-connectivity-data" }, input)
end

--- Gets information about the rule
--- @param input table The input table for the get_topic_rule command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_topic_rule(input)
	return common.execute_aws_command_with_input({ "iot", "get-topic-rule" }, input)
end

--- Gets information about a topic rule destination
--- @param input table The input table for the get_topic_rule_destination command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_topic_rule_destination(input)
	return common.execute_aws_command_with_input({ "iot", "get-topic-rule-destination" }, input)
end

--- Gets the fine grained logging options
--- @param input table The input table for the get_v2_logging_options command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_v2_logging_options(input)
	return common.execute_aws_command_with_input({ "iot", "get-v2-logging-options" }, input)
end

--- Lists the active violations for a given Device Defender security profile
--- @param input table The input table for the list_active_violations command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_active_violations(input)
	return common.execute_aws_command_with_input({ "iot", "list-active-violations" }, input)
end

--- Lists the policies attached to the specified thing group
--- @param input table The input table for the list_attached_policies command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_attached_policies(input)
	return common.execute_aws_command_with_input({ "iot", "list-attached-policies" }, input)
end

--- Lists the findings (results) of a Device Defender audit or of the audits performed during a specified time period
--- @param input table The input table for the list_audit_findings command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_audit_findings(input)
	return common.execute_aws_command_with_input({ "iot", "list-audit-findings" }, input)
end

--- Gets the status of audit mitigation action tasks that were executed
--- @param input table The input table for the list_audit_mitigation_actions_executions command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_audit_mitigation_actions_executions(input)
	return common.execute_aws_command_with_input({ "iot", "list-audit-mitigation-actions-executions" }, input)
end

--- Gets a list of audit mitigation action tasks that match the specified filters
--- @param input table The input table for the list_audit_mitigation_actions_tasks command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_audit_mitigation_actions_tasks(input)
	return common.execute_aws_command_with_input({ "iot", "list-audit-mitigation-actions-tasks" }, input)
end

--- Lists your Device Defender audit listings
--- @param input table The input table for the list_audit_suppressions command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_audit_suppressions(input)
	return common.execute_aws_command_with_input({ "iot", "list-audit-suppressions" }, input)
end

--- Lists the Device Defender audits that have been performed during a given time period
--- @param input table The input table for the list_audit_tasks command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_audit_tasks(input)
	return common.execute_aws_command_with_input({ "iot", "list-audit-tasks" }, input)
end

--- Lists the authorizers registered in your account
--- @param input table The input table for the list_authorizers command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_authorizers(input)
	return common.execute_aws_command_with_input({ "iot", "list-authorizers" }, input)
end

--- Lists the billing groups you have created
--- @param input table The input table for the list_billing_groups command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_billing_groups(input)
	return common.execute_aws_command_with_input({ "iot", "list-billing-groups" }, input)
end

--- Lists the CA certificates registered for your Amazon Web Services account
--- @param input table The input table for the list_ca_certificates command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_ca_certificates(input)
	return common.execute_aws_command_with_input({ "iot", "list-ca-certificates" }, input)
end

--- Lists all your certificate providers in your Amazon Web Services account
--- @param input table The input table for the list_certificate_providers command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_certificate_providers(input)
	return common.execute_aws_command_with_input({ "iot", "list-certificate-providers" }, input)
end

--- Lists the certificates registered in your Amazon Web Services account
--- @param input table The input table for the list_certificates command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_certificates(input)
	return common.execute_aws_command_with_input({ "iot", "list-certificates" }, input)
end

--- List the device certificates signed by the specified CA certificate
--- @param input table The input table for the list_certificates_by_ca command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_certificates_by_ca(input)
	return common.execute_aws_command_with_input({ "iot", "list-certificates-by-ca" }, input)
end

--- List all command executions
--- @param input table The input table for the list_command_executions command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_command_executions(input)
	return common.execute_aws_command_with_input({ "iot", "list-command-executions" }, input)
end

--- List all commands in your account
--- @param input table The input table for the list_commands command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_commands(input)
	return common.execute_aws_command_with_input({ "iot", "list-commands" }, input)
end

--- Lists your Device Defender detect custom metrics
--- @param input table The input table for the list_custom_metrics command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_custom_metrics(input)
	return common.execute_aws_command_with_input({ "iot", "list-custom-metrics" }, input)
end

--- Lists mitigation actions executions for a Device Defender ML Detect Security Profile
--- @param input table The input table for the list_detect_mitigation_actions_executions command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_detect_mitigation_actions_executions(input)
	return common.execute_aws_command_with_input({ "iot", "list-detect-mitigation-actions-executions" }, input)
end

--- List of Device Defender ML Detect mitigation actions tasks
--- @param input table The input table for the list_detect_mitigation_actions_tasks command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_detect_mitigation_actions_tasks(input)
	return common.execute_aws_command_with_input({ "iot", "list-detect-mitigation-actions-tasks" }, input)
end

--- List the set of dimensions that are defined for your Amazon Web Services accounts
--- @param input table The input table for the list_dimensions command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_dimensions(input)
	return common.execute_aws_command_with_input({ "iot", "list-dimensions" }, input)
end

--- Gets a list of domain configurations for the user
--- @param input table The input table for the list_domain_configurations command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_domain_configurations(input)
	return common.execute_aws_command_with_input({ "iot", "list-domain-configurations" }, input)
end

--- Lists all your fleet metrics
--- @param input table The input table for the list_fleet_metrics command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_fleet_metrics(input)
	return common.execute_aws_command_with_input({ "iot", "list-fleet-metrics" }, input)
end

--- Lists the search indices
--- @param input table The input table for the list_indices command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_indices(input)
	return common.execute_aws_command_with_input({ "iot", "list-indices" }, input)
end

--- Lists the job executions for a job
--- @param input table The input table for the list_job_executions_for_job command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_job_executions_for_job(input)
	return common.execute_aws_command_with_input({ "iot", "list-job-executions-for-job" }, input)
end

--- Lists the job executions for the specified thing
--- @param input table The input table for the list_job_executions_for_thing command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_job_executions_for_thing(input)
	return common.execute_aws_command_with_input({ "iot", "list-job-executions-for-thing" }, input)
end

--- Returns a list of job templates
--- @param input table The input table for the list_job_templates command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_job_templates(input)
	return common.execute_aws_command_with_input({ "iot", "list-job-templates" }, input)
end

--- Lists jobs
--- @param input table The input table for the list_jobs command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_jobs(input)
	return common.execute_aws_command_with_input({ "iot", "list-jobs" }, input)
end

--- Returns a list of managed job templates
--- @param input table The input table for the list_managed_job_templates command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_managed_job_templates(input)
	return common.execute_aws_command_with_input({ "iot", "list-managed-job-templates" }, input)
end

--- Lists the values reported for an IoT Device Defender metric (device-side metric, cloud-side metric, or custom metric) by the given thing during the specified time period
--- @param input table The input table for the list_metric_values command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_metric_values(input)
	return common.execute_aws_command_with_input({ "iot", "list-metric-values" }, input)
end

--- Gets a list of all mitigation actions that match the specified filter criteria
--- @param input table The input table for the list_mitigation_actions command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_mitigation_actions(input)
	return common.execute_aws_command_with_input({ "iot", "list-mitigation-actions" }, input)
end

--- Lists OTA updates
--- @param input table The input table for the list_ota_updates command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_ota_updates(input)
	return common.execute_aws_command_with_input({ "iot", "list-ota-updates" }, input)
end

--- Lists certificates that are being transferred but not yet accepted
--- @param input table The input table for the list_outgoing_certificates command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_outgoing_certificates(input)
	return common.execute_aws_command_with_input({ "iot", "list-outgoing-certificates" }, input)
end

--- Lists the software package versions associated to the account
--- @param input table The input table for the list_package_versions command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_package_versions(input)
	return common.execute_aws_command_with_input({ "iot", "list-package-versions" }, input)
end

--- Lists the software packages associated to the account
--- @param input table The input table for the list_packages command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_packages(input)
	return common.execute_aws_command_with_input({ "iot", "list-packages" }, input)
end

--- Lists your policies
--- @param input table The input table for the list_policies command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_policies(input)
	return common.execute_aws_command_with_input({ "iot", "list-policies" }, input)
end

--- Lists the principals associated with the specified policy
--- @param input table The input table for the list_policy_principals command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_policy_principals(input)
	return common.execute_aws_command_with_input({ "iot", "list-policy-principals" }, input)
end

--- Lists the versions of the specified policy and identifies the default version
--- @param input table The input table for the list_policy_versions command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_policy_versions(input)
	return common.execute_aws_command_with_input({ "iot", "list-policy-versions" }, input)
end

--- Lists the policies attached to the specified principal
--- @param input table The input table for the list_principal_policies command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_principal_policies(input)
	return common.execute_aws_command_with_input({ "iot", "list-principal-policies" }, input)
end

--- Lists the things associated with the specified principal
--- @param input table The input table for the list_principal_things command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_principal_things(input)
	return common.execute_aws_command_with_input({ "iot", "list-principal-things" }, input)
end

--- Lists the things associated with the specified principal
--- @param input table The input table for the list_principal_things_v2 command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_principal_things_v2(input)
	return common.execute_aws_command_with_input({ "iot", "list-principal-things-v2" }, input)
end

--- A list of provisioning template versions
--- @param input table The input table for the list_provisioning_template_versions command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_provisioning_template_versions(input)
	return common.execute_aws_command_with_input({ "iot", "list-provisioning-template-versions" }, input)
end

--- Lists the provisioning templates in your Amazon Web Services account
--- @param input table The input table for the list_provisioning_templates command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_provisioning_templates(input)
	return common.execute_aws_command_with_input({ "iot", "list-provisioning-templates" }, input)
end

--- The related resources of an Audit finding
--- @param input table The input table for the list_related_resources_for_audit_finding command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_related_resources_for_audit_finding(input)
	return common.execute_aws_command_with_input({ "iot", "list-related-resources-for-audit-finding" }, input)
end

--- Lists the role aliases registered in your account
--- @param input table The input table for the list_role_aliases command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_role_aliases(input)
	return common.execute_aws_command_with_input({ "iot", "list-role-aliases" }, input)
end

--- The validation results for all software bill of materials (SBOM) attached to a specific software package version
--- @param input table The input table for the list_sbom_validation_results command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_sbom_validation_results(input)
	return common.execute_aws_command_with_input({ "iot", "list-sbom-validation-results" }, input)
end

--- Lists all of your scheduled audits
--- @param input table The input table for the list_scheduled_audits command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_scheduled_audits(input)
	return common.execute_aws_command_with_input({ "iot", "list-scheduled-audits" }, input)
end

--- Lists the Device Defender security profiles you've created
--- @param input table The input table for the list_security_profiles command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_security_profiles(input)
	return common.execute_aws_command_with_input({ "iot", "list-security-profiles" }, input)
end

--- Lists the Device Defender security profiles attached to a target (thing group)
--- @param input table The input table for the list_security_profiles_for_target command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_security_profiles_for_target(input)
	return common.execute_aws_command_with_input({ "iot", "list-security-profiles-for-target" }, input)
end

--- Lists all of the streams in your Amazon Web Services account
--- @param input table The input table for the list_streams command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_streams(input)
	return common.execute_aws_command_with_input({ "iot", "list-streams" }, input)
end

--- Lists the tags (metadata) you have assigned to the resource
--- @param input table The input table for the list_tags_for_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_tags_for_resource(input)
	return common.execute_aws_command_with_input({ "iot", "list-tags-for-resource" }, input)
end

--- List targets for the specified policy
--- @param input table The input table for the list_targets_for_policy command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_targets_for_policy(input)
	return common.execute_aws_command_with_input({ "iot", "list-targets-for-policy" }, input)
end

--- Lists the targets (thing groups) associated with a given Device Defender security profile
--- @param input table The input table for the list_targets_for_security_profile command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_targets_for_security_profile(input)
	return common.execute_aws_command_with_input({ "iot", "list-targets-for-security-profile" }, input)
end

--- List the thing groups in your account
--- @param input table The input table for the list_thing_groups command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_thing_groups(input)
	return common.execute_aws_command_with_input({ "iot", "list-thing-groups" }, input)
end

--- List the thing groups to which the specified thing belongs
--- @param input table The input table for the list_thing_groups_for_thing command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_thing_groups_for_thing(input)
	return common.execute_aws_command_with_input({ "iot", "list-thing-groups-for-thing" }, input)
end

--- Lists the principals associated with the specified thing
--- @param input table The input table for the list_thing_principals command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_thing_principals(input)
	return common.execute_aws_command_with_input({ "iot", "list-thing-principals" }, input)
end

--- Lists the principals associated with the specified thing
--- @param input table The input table for the list_thing_principals_v2 command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_thing_principals_v2(input)
	return common.execute_aws_command_with_input({ "iot", "list-thing-principals-v2" }, input)
end

--- Information about the thing registration tasks
--- @param input table The input table for the list_thing_registration_task_reports command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_thing_registration_task_reports(input)
	return common.execute_aws_command_with_input({ "iot", "list-thing-registration-task-reports" }, input)
end

--- List bulk thing provisioning tasks
--- @param input table The input table for the list_thing_registration_tasks command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_thing_registration_tasks(input)
	return common.execute_aws_command_with_input({ "iot", "list-thing-registration-tasks" }, input)
end

--- Lists the existing thing types
--- @param input table The input table for the list_thing_types command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_thing_types(input)
	return common.execute_aws_command_with_input({ "iot", "list-thing-types" }, input)
end

--- Lists your things
--- @param input table The input table for the list_things command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_things(input)
	return common.execute_aws_command_with_input({ "iot", "list-things" }, input)
end

--- Lists the things you have added to the given billing group
--- @param input table The input table for the list_things_in_billing_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_things_in_billing_group(input)
	return common.execute_aws_command_with_input({ "iot", "list-things-in-billing-group" }, input)
end

--- Lists the things in the specified group
--- @param input table The input table for the list_things_in_thing_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_things_in_thing_group(input)
	return common.execute_aws_command_with_input({ "iot", "list-things-in-thing-group" }, input)
end

--- Lists all the topic rule destinations in your Amazon Web Services account
--- @param input table The input table for the list_topic_rule_destinations command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_topic_rule_destinations(input)
	return common.execute_aws_command_with_input({ "iot", "list-topic-rule-destinations" }, input)
end

--- Lists the rules for the specific topic
--- @param input table The input table for the list_topic_rules command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_topic_rules(input)
	return common.execute_aws_command_with_input({ "iot", "list-topic-rules" }, input)
end

--- Lists logging levels
--- @param input table The input table for the list_v2_logging_levels command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_v2_logging_levels(input)
	return common.execute_aws_command_with_input({ "iot", "list-v2-logging-levels" }, input)
end

--- Lists the Device Defender security profile violations discovered during the given time period
--- @param input table The input table for the list_violation_events command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_violation_events(input)
	return common.execute_aws_command_with_input({ "iot", "list-violation-events" }, input)
end

--- Set a verification state and provide a description of that verification state on a violation (detect alarm)
--- @param input table The input table for the put_verification_state_on_violation command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.put_verification_state_on_violation(input)
	return common.execute_aws_command_with_input({ "iot", "put-verification-state-on-violation" }, input)
end

--- Registers a CA certificate with Amazon Web Services IoT Core
--- @param input table The input table for the register_ca_certificate command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.register_ca_certificate(input)
	return common.execute_aws_command_with_input({ "iot", "register-ca-certificate" }, input)
end

--- Registers a device certificate with IoT in the same certificate mode as the signing CA
--- @param input table The input table for the register_certificate command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.register_certificate(input)
	return common.execute_aws_command_with_input({ "iot", "register-certificate" }, input)
end

--- Register a certificate that does not have a certificate authority (CA)
--- @param input table The input table for the register_certificate_without_ca command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.register_certificate_without_ca(input)
	return common.execute_aws_command_with_input({ "iot", "register-certificate-without-ca" }, input)
end

--- Provisions a thing in the device registry
--- @param input table The input table for the register_thing command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.register_thing(input)
	return common.execute_aws_command_with_input({ "iot", "register-thing" }, input)
end

--- Rejects a pending certificate transfer
--- @param input table The input table for the reject_certificate_transfer command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.reject_certificate_transfer(input)
	return common.execute_aws_command_with_input({ "iot", "reject-certificate-transfer" }, input)
end

--- Removes the given thing from the billing group
--- @param input table The input table for the remove_thing_from_billing_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.remove_thing_from_billing_group(input)
	return common.execute_aws_command_with_input({ "iot", "remove-thing-from-billing-group" }, input)
end

--- Remove the specified thing from the specified group
--- @param input table The input table for the remove_thing_from_thing_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.remove_thing_from_thing_group(input)
	return common.execute_aws_command_with_input({ "iot", "remove-thing-from-thing-group" }, input)
end

--- Replaces the rule
--- @param input table The input table for the replace_topic_rule command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.replace_topic_rule(input)
	return common.execute_aws_command_with_input({ "iot", "replace-topic-rule" }, input)
end

--- The query search index
--- @param input table The input table for the search_index command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.search_index(input)
	return common.execute_aws_command_with_input({ "iot", "search-index" }, input)
end

--- Sets the default authorizer
--- @param input table The input table for the set_default_authorizer command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.set_default_authorizer(input)
	return common.execute_aws_command_with_input({ "iot", "set-default-authorizer" }, input)
end

--- Sets the specified version of the specified policy as the policy's default (operative) version
--- @param input table The input table for the set_default_policy_version command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.set_default_policy_version(input)
	return common.execute_aws_command_with_input({ "iot", "set-default-policy-version" }, input)
end

--- Sets the logging options
--- @param input table The input table for the set_logging_options command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.set_logging_options(input)
	return common.execute_aws_command_with_input({ "iot", "set-logging-options" }, input)
end

--- Sets the logging level
--- @param input table The input table for the set_v2_logging_level command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.set_v2_logging_level(input)
	return common.execute_aws_command_with_input({ "iot", "set-v2-logging-level" }, input)
end

--- Sets the logging options for the V2 logging service
--- @param input table The input table for the set_v2_logging_options command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.set_v2_logging_options(input)
	return common.execute_aws_command_with_input({ "iot", "set-v2-logging-options" }, input)
end

--- Starts a task that applies a set of mitigation actions to the specified target
--- @param input table The input table for the start_audit_mitigation_actions_task command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.start_audit_mitigation_actions_task(input)
	return common.execute_aws_command_with_input({ "iot", "start-audit-mitigation-actions-task" }, input)
end

--- Starts a Device Defender ML Detect mitigation actions task
--- @param input table The input table for the start_detect_mitigation_actions_task command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.start_detect_mitigation_actions_task(input)
	return common.execute_aws_command_with_input({ "iot", "start-detect-mitigation-actions-task" }, input)
end

--- Starts an on-demand Device Defender audit
--- @param input table The input table for the start_on_demand_audit_task command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.start_on_demand_audit_task(input)
	return common.execute_aws_command_with_input({ "iot", "start-on-demand-audit-task" }, input)
end

--- Creates a bulk thing provisioning task
--- @param input table The input table for the start_thing_registration_task command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.start_thing_registration_task(input)
	return common.execute_aws_command_with_input({ "iot", "start-thing-registration-task" }, input)
end

--- Cancels a bulk thing provisioning task
--- @param input table The input table for the stop_thing_registration_task command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.stop_thing_registration_task(input)
	return common.execute_aws_command_with_input({ "iot", "stop-thing-registration-task" }, input)
end

--- Adds to or modifies the tags of the given resource
--- @param input table The input table for the tag_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.tag_resource(input)
	return common.execute_aws_command_with_input({ "iot", "tag-resource" }, input)
end

--- Tests if a specified principal is authorized to perform an IoT action on a specified resource
--- @param input table The input table for the test_authorization command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.test_authorization(input)
	return common.execute_aws_command_with_input({ "iot", "test-authorization" }, input)
end

--- Tests a custom authorization behavior by invoking a specified custom authorizer
--- @param input table The input table for the test_invoke_authorizer command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.test_invoke_authorizer(input)
	return common.execute_aws_command_with_input({ "iot", "test-invoke-authorizer" }, input)
end

--- Transfers the specified certificate to the specified Amazon Web Services account
--- @param input table The input table for the transfer_certificate command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.transfer_certificate(input)
	return common.execute_aws_command_with_input({ "iot", "transfer-certificate" }, input)
end

--- Removes the given tags (metadata) from the resource
--- @param input table The input table for the untag_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.untag_resource(input)
	return common.execute_aws_command_with_input({ "iot", "untag-resource" }, input)
end

--- Configures or reconfigures the Device Defender audit settings for this account
--- @param input table The input table for the update_account_audit_configuration command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_account_audit_configuration(input)
	return common.execute_aws_command_with_input({ "iot", "update-account-audit-configuration" }, input)
end

--- Updates a Device Defender audit suppression
--- @param input table The input table for the update_audit_suppression command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_audit_suppression(input)
	return common.execute_aws_command_with_input({ "iot", "update-audit-suppression" }, input)
end

--- Updates an authorizer
--- @param input table The input table for the update_authorizer command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_authorizer(input)
	return common.execute_aws_command_with_input({ "iot", "update-authorizer" }, input)
end

--- Updates information about the billing group
--- @param input table The input table for the update_billing_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_billing_group(input)
	return common.execute_aws_command_with_input({ "iot", "update-billing-group" }, input)
end

--- Updates a registered CA certificate
--- @param input table The input table for the update_ca_certificate command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_ca_certificate(input)
	return common.execute_aws_command_with_input({ "iot", "update-ca-certificate" }, input)
end

--- Updates the status of the specified certificate
--- @param input table The input table for the update_certificate command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_certificate(input)
	return common.execute_aws_command_with_input({ "iot", "update-certificate" }, input)
end

--- Updates a certificate provider
--- @param input table The input table for the update_certificate_provider command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_certificate_provider(input)
	return common.execute_aws_command_with_input({ "iot", "update-certificate-provider" }, input)
end

--- Update information about a command or mark a command for deprecation
--- @param input table The input table for the update_command command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_command(input)
	return common.execute_aws_command_with_input({ "iot", "update-command" }, input)
end

--- Updates a Device Defender detect custom metric
--- @param input table The input table for the update_custom_metric command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_custom_metric(input)
	return common.execute_aws_command_with_input({ "iot", "update-custom-metric" }, input)
end

--- Updates the definition for a dimension
--- @param input table The input table for the update_dimension command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_dimension(input)
	return common.execute_aws_command_with_input({ "iot", "update-dimension" }, input)
end

--- Updates values stored in the domain configuration
--- @param input table The input table for the update_domain_configuration command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_domain_configuration(input)
	return common.execute_aws_command_with_input({ "iot", "update-domain-configuration" }, input)
end

--- Updates a dynamic thing group
--- @param input table The input table for the update_dynamic_thing_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_dynamic_thing_group(input)
	return common.execute_aws_command_with_input({ "iot", "update-dynamic-thing-group" }, input)
end

--- Updates the event configurations
--- @param input table The input table for the update_event_configurations command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_event_configurations(input)
	return common.execute_aws_command_with_input({ "iot", "update-event-configurations" }, input)
end

--- Updates the data for a fleet metric
--- @param input table The input table for the update_fleet_metric command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_fleet_metric(input)
	return common.execute_aws_command_with_input({ "iot", "update-fleet-metric" }, input)
end

--- Updates the search configuration
--- @param input table The input table for the update_indexing_configuration command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_indexing_configuration(input)
	return common.execute_aws_command_with_input({ "iot", "update-indexing-configuration" }, input)
end

--- Updates supported fields of the specified job
--- @param input table The input table for the update_job command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_job(input)
	return common.execute_aws_command_with_input({ "iot", "update-job" }, input)
end

--- Updates the definition for the specified mitigation action
--- @param input table The input table for the update_mitigation_action command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_mitigation_action(input)
	return common.execute_aws_command_with_input({ "iot", "update-mitigation-action" }, input)
end

--- Updates the supported fields for a specific software package
--- @param input table The input table for the update_package command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_package(input)
	return common.execute_aws_command_with_input({ "iot", "update-package" }, input)
end

--- Updates the software package configuration
--- @param input table The input table for the update_package_configuration command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_package_configuration(input)
	return common.execute_aws_command_with_input({ "iot", "update-package-configuration" }, input)
end

--- Updates the supported fields for a specific package version
--- @param input table The input table for the update_package_version command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_package_version(input)
	return common.execute_aws_command_with_input({ "iot", "update-package-version" }, input)
end

--- Updates a provisioning template
--- @param input table The input table for the update_provisioning_template command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_provisioning_template(input)
	return common.execute_aws_command_with_input({ "iot", "update-provisioning-template" }, input)
end

--- Updates a role alias
--- @param input table The input table for the update_role_alias command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_role_alias(input)
	return common.execute_aws_command_with_input({ "iot", "update-role-alias" }, input)
end

--- Updates a scheduled audit, including which checks are performed and how often the audit takes place
--- @param input table The input table for the update_scheduled_audit command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_scheduled_audit(input)
	return common.execute_aws_command_with_input({ "iot", "update-scheduled-audit" }, input)
end

--- Updates a Device Defender security profile
--- @param input table The input table for the update_security_profile command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_security_profile(input)
	return common.execute_aws_command_with_input({ "iot", "update-security-profile" }, input)
end

--- Updates an existing stream
--- @param input table The input table for the update_stream command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_stream(input)
	return common.execute_aws_command_with_input({ "iot", "update-stream" }, input)
end

--- Updates the data for a thing
--- @param input table The input table for the update_thing command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_thing(input)
	return common.execute_aws_command_with_input({ "iot", "update-thing" }, input)
end

--- Update a thing group
--- @param input table The input table for the update_thing_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_thing_group(input)
	return common.execute_aws_command_with_input({ "iot", "update-thing-group" }, input)
end

--- Updates the groups to which the thing belongs
--- @param input table The input table for the update_thing_groups_for_thing command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_thing_groups_for_thing(input)
	return common.execute_aws_command_with_input({ "iot", "update-thing-groups-for-thing" }, input)
end

--- Updates a thing type
--- @param input table The input table for the update_thing_type command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_thing_type(input)
	return common.execute_aws_command_with_input({ "iot", "update-thing-type" }, input)
end

--- Updates a topic rule destination
--- @param input table The input table for the update_topic_rule_destination command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_topic_rule_destination(input)
	return common.execute_aws_command_with_input({ "iot", "update-topic-rule-destination" }, input)
end

--- Validates a Device Defender security profile behaviors specification
--- @param input table The input table for the validate_security_profile_behaviors command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.validate_security_profile_behaviors(input)
	return common.execute_aws_command_with_input({ "iot", "validate-security-profile-behaviors" }, input)
end

return M
