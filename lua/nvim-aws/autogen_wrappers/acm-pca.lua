-- AUTOGENERATED FILE - DO NOT EDIT
-- AWS Service: acm-pca

local common = require("nvim-aws.common")

--- AWS acm-pca service functions
local M = {}

--- AWS acm-pca create-certificate-authority operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_certificate_authority(input, callbacks)
	return common.execute_aws_command_skeleton({ "acm-pca", "create-certificate-authority" }, input, callbacks)
end

--- AWS acm-pca create-certificate-authority-audit-report operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_certificate_authority_audit_report(input, callbacks)
	return common.execute_aws_command_skeleton({ "acm-pca", "create-certificate-authority-audit-report" }, input, callbacks)
end

--- AWS acm-pca create-permission operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_permission(input, callbacks)
	return common.execute_aws_command_skeleton({ "acm-pca", "create-permission" }, input, callbacks)
end

--- AWS acm-pca delete-certificate-authority operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_certificate_authority(input, callbacks)
	return common.execute_aws_command_skeleton({ "acm-pca", "delete-certificate-authority" }, input, callbacks)
end

--- AWS acm-pca delete-permission operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_permission(input, callbacks)
	return common.execute_aws_command_skeleton({ "acm-pca", "delete-permission" }, input, callbacks)
end

--- AWS acm-pca delete-policy operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_policy(input, callbacks)
	return common.execute_aws_command_skeleton({ "acm-pca", "delete-policy" }, input, callbacks)
end

--- AWS acm-pca describe-certificate-authority operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_certificate_authority(input, callbacks)
	return common.execute_aws_command_skeleton({ "acm-pca", "describe-certificate-authority" }, input, callbacks)
end

--- AWS acm-pca describe-certificate-authority-audit-report operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_certificate_authority_audit_report(input, callbacks)
	return common.execute_aws_command_skeleton({ "acm-pca", "describe-certificate-authority-audit-report" }, input, callbacks)
end

--- AWS acm-pca get-certificate operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_certificate(input, callbacks)
	return common.execute_aws_command_skeleton({ "acm-pca", "get-certificate" }, input, callbacks)
end

--- AWS acm-pca get-certificate-authority-certificate operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_certificate_authority_certificate(input, callbacks)
	return common.execute_aws_command_skeleton({ "acm-pca", "get-certificate-authority-certificate" }, input, callbacks)
end

--- AWS acm-pca get-certificate-authority-csr operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_certificate_authority_csr(input, callbacks)
	return common.execute_aws_command_skeleton({ "acm-pca", "get-certificate-authority-csr" }, input, callbacks)
end

--- AWS acm-pca get-policy operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_policy(input, callbacks)
	return common.execute_aws_command_skeleton({ "acm-pca", "get-policy" }, input, callbacks)
end

--- AWS acm-pca import-certificate-authority-certificate operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.import_certificate_authority_certificate(input, callbacks)
	return common.execute_aws_command_skeleton({ "acm-pca", "import-certificate-authority-certificate" }, input, callbacks)
end

--- AWS acm-pca issue-certificate operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.issue_certificate(input, callbacks)
	return common.execute_aws_command_skeleton({ "acm-pca", "issue-certificate" }, input, callbacks)
end

--- AWS acm-pca list-certificate-authorities operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_certificate_authorities(input, callbacks)
	return common.execute_aws_command_skeleton({ "acm-pca", "list-certificate-authorities" }, input, callbacks)
end

--- AWS acm-pca list-permissions operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_permissions(input, callbacks)
	return common.execute_aws_command_skeleton({ "acm-pca", "list-permissions" }, input, callbacks)
end

--- AWS acm-pca list-tags operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_tags(input, callbacks)
	return common.execute_aws_command_skeleton({ "acm-pca", "list-tags" }, input, callbacks)
end

--- AWS acm-pca put-policy operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.put_policy(input, callbacks)
	return common.execute_aws_command_skeleton({ "acm-pca", "put-policy" }, input, callbacks)
end

--- AWS acm-pca restore-certificate-authority operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.restore_certificate_authority(input, callbacks)
	return common.execute_aws_command_skeleton({ "acm-pca", "restore-certificate-authority" }, input, callbacks)
end

--- AWS acm-pca revoke-certificate operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.revoke_certificate(input, callbacks)
	return common.execute_aws_command_skeleton({ "acm-pca", "revoke-certificate" }, input, callbacks)
end

--- AWS acm-pca tag-certificate-authority operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.tag_certificate_authority(input, callbacks)
	return common.execute_aws_command_skeleton({ "acm-pca", "tag-certificate-authority" }, input, callbacks)
end

--- AWS acm-pca untag-certificate-authority operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.untag_certificate_authority(input, callbacks)
	return common.execute_aws_command_skeleton({ "acm-pca", "untag-certificate-authority" }, input, callbacks)
end

--- AWS acm-pca update-certificate-authority operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_certificate_authority(input, callbacks)
	return common.execute_aws_command_skeleton({ "acm-pca", "update-certificate-authority" }, input, callbacks)
end

--- AWS acm-pca wait operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.wait(input, callbacks)
	return common.execute_aws_command({ "acm-pca", "wait" }, input, callbacks)
end

return M
