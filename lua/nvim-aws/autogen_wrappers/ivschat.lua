-- AUTOGENERATED FILE - DO NOT EDIT
-- AWS Service: ivschat

local common = require("nvim-aws.common")

--- AWS ivschat service functions
local M = {}

--- AWS ivschat create-chat-token operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_chat_token(input, callbacks)
	return common.execute_aws_command_skeleton({ "ivschat", "create-chat-token" }, input, callbacks)
end

--- AWS ivschat create-logging-configuration operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_logging_configuration(input, callbacks)
	return common.execute_aws_command_skeleton({ "ivschat", "create-logging-configuration" }, input, callbacks)
end

--- AWS ivschat create-room operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_room(input, callbacks)
	return common.execute_aws_command_skeleton({ "ivschat", "create-room" }, input, callbacks)
end

--- AWS ivschat delete-logging-configuration operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_logging_configuration(input, callbacks)
	return common.execute_aws_command_skeleton({ "ivschat", "delete-logging-configuration" }, input, callbacks)
end

--- AWS ivschat delete-message operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_message(input, callbacks)
	return common.execute_aws_command_skeleton({ "ivschat", "delete-message" }, input, callbacks)
end

--- AWS ivschat delete-room operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_room(input, callbacks)
	return common.execute_aws_command_skeleton({ "ivschat", "delete-room" }, input, callbacks)
end

--- AWS ivschat disconnect-user operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.disconnect_user(input, callbacks)
	return common.execute_aws_command_skeleton({ "ivschat", "disconnect-user" }, input, callbacks)
end

--- AWS ivschat get-logging-configuration operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_logging_configuration(input, callbacks)
	return common.execute_aws_command_skeleton({ "ivschat", "get-logging-configuration" }, input, callbacks)
end

--- AWS ivschat get-room operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_room(input, callbacks)
	return common.execute_aws_command_skeleton({ "ivschat", "get-room" }, input, callbacks)
end

--- AWS ivschat list-logging-configurations operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_logging_configurations(input, callbacks)
	return common.execute_aws_command_skeleton({ "ivschat", "list-logging-configurations" }, input, callbacks)
end

--- AWS ivschat list-rooms operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_rooms(input, callbacks)
	return common.execute_aws_command_skeleton({ "ivschat", "list-rooms" }, input, callbacks)
end

--- AWS ivschat list-tags-for-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_tags_for_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "ivschat", "list-tags-for-resource" }, input, callbacks)
end

--- AWS ivschat send-event operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.send_event(input, callbacks)
	return common.execute_aws_command_skeleton({ "ivschat", "send-event" }, input, callbacks)
end

--- AWS ivschat tag-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.tag_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "ivschat", "tag-resource" }, input, callbacks)
end

--- AWS ivschat untag-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.untag_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "ivschat", "untag-resource" }, input, callbacks)
end

--- AWS ivschat update-logging-configuration operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_logging_configuration(input, callbacks)
	return common.execute_aws_command_skeleton({ "ivschat", "update-logging-configuration" }, input, callbacks)
end

--- AWS ivschat update-room operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_room(input, callbacks)
	return common.execute_aws_command_skeleton({ "ivschat", "update-room" }, input, callbacks)
end

return M
