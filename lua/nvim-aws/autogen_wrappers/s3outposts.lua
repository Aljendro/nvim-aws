-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-07 21:36:08
-- AWS Service: s3outposts

local common = require("nvim-aws.wrappers.common")

--- AWS S3OUTPOSTS service functions
local M = {}

--- Creates an endpoint and associates it with the specified Outpost
--- @param input table The input table for the create_endpoint command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_endpoint(input)
	return common.execute_aws_command_with_input({ "s3outposts", "create-endpoint" }, input)
end

--- Deletes an endpoint
--- @param input table The input table for the delete_endpoint command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_endpoint(input)
	return common.execute_aws_command_with_input({ "s3outposts", "delete-endpoint" }, input)
end

--- Lists endpoints associated with the specified Outpost
--- @param input table The input table for the list_endpoints command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_endpoints(input)
	return common.execute_aws_command_with_input({ "s3outposts", "list-endpoints" }, input)
end

--- Lists the Outposts with S3 on Outposts capacity for your Amazon Web Services account
--- @param input table The input table for the list_outposts_with_s3 command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_outposts_with_s3(input)
	return common.execute_aws_command_with_input({ "s3outposts", "list-outposts-with-s3" }, input)
end

--- Lists all endpoints associated with an Outpost that has been shared by Amazon Web Services Resource Access Manager (RAM)
--- @param input table The input table for the list_shared_endpoints command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_shared_endpoints(input)
	return common.execute_aws_command_with_input({ "s3outposts", "list-shared-endpoints" }, input)
end

return M
