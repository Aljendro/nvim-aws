-- AUTOGENERATED FILE - DO NOT EDIT
-- AWS Service: s3outposts

local common = require("nvim-aws.common")

--- AWS s3outposts service functions
local M = {}

--- AWS s3outposts create-endpoint operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.create_endpoint(input)
	return common.execute_aws_command_skeleton({ "s3outposts", "create-endpoint" }, input)
end

--- AWS s3outposts delete-endpoint operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.delete_endpoint(input)
	return common.execute_aws_command_skeleton({ "s3outposts", "delete-endpoint" }, input)
end

--- AWS s3outposts list-endpoints operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.list_endpoints(input)
	return common.execute_aws_command_skeleton({ "s3outposts", "list-endpoints" }, input)
end

--- AWS s3outposts list-outposts-with-s3 operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.list_outposts_with_s3(input)
	return common.execute_aws_command_skeleton({ "s3outposts", "list-outposts-with-s3" }, input)
end

--- AWS s3outposts list-shared-endpoints operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.list_shared_endpoints(input)
	return common.execute_aws_command_skeleton({ "s3outposts", "list-shared-endpoints" }, input)
end

return M
