-- AUTOGENERATED FILE - DO NOT EDIT
-- AWS Service: kendra

local common = require("nvim-aws.common")

--- AWS kendra service functions
local M = {}

--- AWS kendra associate-entities-to-experience operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.associate_entities_to_experience(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "associate-entities-to-experience" }, input, callbacks)
end

--- AWS kendra associate-personas-to-entities operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.associate_personas_to_entities(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "associate-personas-to-entities" }, input, callbacks)
end

--- AWS kendra batch-delete-document operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.batch_delete_document(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "batch-delete-document" }, input, callbacks)
end

--- AWS kendra batch-delete-featured-results-set operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.batch_delete_featured_results_set(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "batch-delete-featured-results-set" }, input, callbacks)
end

--- AWS kendra batch-get-document-status operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.batch_get_document_status(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "batch-get-document-status" }, input, callbacks)
end

--- AWS kendra batch-put-document operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.batch_put_document(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "batch-put-document" }, input, callbacks)
end

--- AWS kendra clear-query-suggestions operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.clear_query_suggestions(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "clear-query-suggestions" }, input, callbacks)
end

--- AWS kendra create-access-control-configuration operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_access_control_configuration(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "create-access-control-configuration" }, input, callbacks)
end

--- AWS kendra create-data-source operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_data_source(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "create-data-source" }, input, callbacks)
end

--- AWS kendra create-experience operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_experience(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "create-experience" }, input, callbacks)
end

--- AWS kendra create-faq operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_faq(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "create-faq" }, input, callbacks)
end

--- AWS kendra create-featured-results-set operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_featured_results_set(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "create-featured-results-set" }, input, callbacks)
end

--- AWS kendra create-index operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_index(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "create-index" }, input, callbacks)
end

--- AWS kendra create-query-suggestions-block-list operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_query_suggestions_block_list(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "create-query-suggestions-block-list" }, input, callbacks)
end

--- AWS kendra create-thesaurus operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_thesaurus(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "create-thesaurus" }, input, callbacks)
end

--- AWS kendra delete-access-control-configuration operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_access_control_configuration(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "delete-access-control-configuration" }, input, callbacks)
end

--- AWS kendra delete-data-source operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_data_source(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "delete-data-source" }, input, callbacks)
end

--- AWS kendra delete-experience operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_experience(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "delete-experience" }, input, callbacks)
end

--- AWS kendra delete-faq operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_faq(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "delete-faq" }, input, callbacks)
end

--- AWS kendra delete-index operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_index(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "delete-index" }, input, callbacks)
end

--- AWS kendra delete-principal-mapping operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_principal_mapping(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "delete-principal-mapping" }, input, callbacks)
end

--- AWS kendra delete-query-suggestions-block-list operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_query_suggestions_block_list(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "delete-query-suggestions-block-list" }, input, callbacks)
end

--- AWS kendra delete-thesaurus operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_thesaurus(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "delete-thesaurus" }, input, callbacks)
end

--- AWS kendra describe-access-control-configuration operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_access_control_configuration(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "describe-access-control-configuration" }, input, callbacks)
end

--- AWS kendra describe-data-source operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_data_source(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "describe-data-source" }, input, callbacks)
end

--- AWS kendra describe-experience operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_experience(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "describe-experience" }, input, callbacks)
end

--- AWS kendra describe-faq operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_faq(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "describe-faq" }, input, callbacks)
end

--- AWS kendra describe-featured-results-set operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_featured_results_set(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "describe-featured-results-set" }, input, callbacks)
end

--- AWS kendra describe-index operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_index(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "describe-index" }, input, callbacks)
end

--- AWS kendra describe-principal-mapping operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_principal_mapping(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "describe-principal-mapping" }, input, callbacks)
end

--- AWS kendra describe-query-suggestions-block-list operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_query_suggestions_block_list(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "describe-query-suggestions-block-list" }, input, callbacks)
end

--- AWS kendra describe-query-suggestions-config operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_query_suggestions_config(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "describe-query-suggestions-config" }, input, callbacks)
end

--- AWS kendra describe-thesaurus operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_thesaurus(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "describe-thesaurus" }, input, callbacks)
end

--- AWS kendra disassociate-entities-from-experience operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.disassociate_entities_from_experience(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "disassociate-entities-from-experience" }, input, callbacks)
end

--- AWS kendra disassociate-personas-from-entities operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.disassociate_personas_from_entities(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "disassociate-personas-from-entities" }, input, callbacks)
end

--- AWS kendra get-query-suggestions operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_query_suggestions(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "get-query-suggestions" }, input, callbacks)
end

--- AWS kendra get-snapshots operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_snapshots(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "get-snapshots" }, input, callbacks)
end

--- AWS kendra list-access-control-configurations operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_access_control_configurations(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "list-access-control-configurations" }, input, callbacks)
end

--- AWS kendra list-data-source-sync-jobs operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_data_source_sync_jobs(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "list-data-source-sync-jobs" }, input, callbacks)
end

--- AWS kendra list-data-sources operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_data_sources(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "list-data-sources" }, input, callbacks)
end

--- AWS kendra list-entity-personas operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_entity_personas(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "list-entity-personas" }, input, callbacks)
end

--- AWS kendra list-experience-entities operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_experience_entities(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "list-experience-entities" }, input, callbacks)
end

--- AWS kendra list-experiences operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_experiences(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "list-experiences" }, input, callbacks)
end

--- AWS kendra list-faqs operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_faqs(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "list-faqs" }, input, callbacks)
end

--- AWS kendra list-featured-results-sets operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_featured_results_sets(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "list-featured-results-sets" }, input, callbacks)
end

--- AWS kendra list-groups-older-than-ordering-id operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_groups_older_than_ordering_id(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "list-groups-older-than-ordering-id" }, input, callbacks)
end

--- AWS kendra list-indices operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_indices(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "list-indices" }, input, callbacks)
end

--- AWS kendra list-query-suggestions-block-lists operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_query_suggestions_block_lists(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "list-query-suggestions-block-lists" }, input, callbacks)
end

--- AWS kendra list-tags-for-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_tags_for_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "list-tags-for-resource" }, input, callbacks)
end

--- AWS kendra list-thesauri operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_thesauri(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "list-thesauri" }, input, callbacks)
end

--- AWS kendra put-principal-mapping operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.put_principal_mapping(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "put-principal-mapping" }, input, callbacks)
end

--- AWS kendra query operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.query(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "query" }, input, callbacks)
end

--- AWS kendra retrieve operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.retrieve(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "retrieve" }, input, callbacks)
end

--- AWS kendra start-data-source-sync-job operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.start_data_source_sync_job(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "start-data-source-sync-job" }, input, callbacks)
end

--- AWS kendra stop-data-source-sync-job operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.stop_data_source_sync_job(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "stop-data-source-sync-job" }, input, callbacks)
end

--- AWS kendra submit-feedback operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.submit_feedback(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "submit-feedback" }, input, callbacks)
end

--- AWS kendra tag-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.tag_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "tag-resource" }, input, callbacks)
end

--- AWS kendra untag-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.untag_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "untag-resource" }, input, callbacks)
end

--- AWS kendra update-access-control-configuration operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_access_control_configuration(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "update-access-control-configuration" }, input, callbacks)
end

--- AWS kendra update-data-source operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_data_source(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "update-data-source" }, input, callbacks)
end

--- AWS kendra update-experience operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_experience(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "update-experience" }, input, callbacks)
end

--- AWS kendra update-featured-results-set operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_featured_results_set(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "update-featured-results-set" }, input, callbacks)
end

--- AWS kendra update-index operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_index(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "update-index" }, input, callbacks)
end

--- AWS kendra update-query-suggestions-block-list operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_query_suggestions_block_list(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "update-query-suggestions-block-list" }, input, callbacks)
end

--- AWS kendra update-query-suggestions-config operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_query_suggestions_config(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "update-query-suggestions-config" }, input, callbacks)
end

--- AWS kendra update-thesaurus operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_thesaurus(input, callbacks)
	return common.execute_aws_command_skeleton({ "kendra", "update-thesaurus" }, input, callbacks)
end

return M
