-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: snowball

local common = require("nvim-aws.wrappers.common")

--- AWS SNOWBALL service functions
local M = {}

--- Cancels a cluster job
--- @param input table The input table for the cancel_cluster command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.cancel_cluster(input)
	return common.execute_aws_command_with_input({ "snowball", "cancel-cluster" }, input)
end

--- Cancels the specified job
--- @param input table The input table for the cancel_job command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.cancel_job(input)
	return common.execute_aws_command_with_input({ "snowball", "cancel-job" }, input)
end

--- Creates an address for a Snow device to be shipped to
--- @param input table The input table for the create_address command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_address(input)
	return common.execute_aws_command_with_input({ "snowball", "create-address" }, input)
end

--- Creates an empty cluster
--- @param input table The input table for the create_cluster command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_cluster(input)
	return common.execute_aws_command_with_input({ "snowball", "create-cluster" }, input)
end

--- Creates a job to import or export data between Amazon S3 and your on-premises data center
--- @param input table The input table for the create_job command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_job(input)
	return common.execute_aws_command_with_input({ "snowball", "create-job" }, input)
end

--- Creates a job with the long-term usage option for a device
--- @param input table The input table for the create_long_term_pricing command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_long_term_pricing(input)
	return common.execute_aws_command_with_input({ "snowball", "create-long-term-pricing" }, input)
end

--- Creates a shipping label that will be used to return the Snow device to Amazon Web Services
--- @param input table The input table for the create_return_shipping_label command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_return_shipping_label(input)
	return common.execute_aws_command_with_input({ "snowball", "create-return-shipping-label" }, input)
end

--- Takes an AddressId and returns specific details about that address in the form of an Address object
--- @param input table The input table for the describe_address command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_address(input)
	return common.execute_aws_command_with_input({ "snowball", "describe-address" }, input)
end

--- Returns a specified number of ADDRESS objects
--- @param input table The input table for the describe_addresses command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_addresses(input)
	return common.execute_aws_command_with_input({ "snowball", "describe-addresses" }, input)
end

--- Returns information about a specific cluster including shipping information, cluster status, and other important metadata
--- @param input table The input table for the describe_cluster command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_cluster(input)
	return common.execute_aws_command_with_input({ "snowball", "describe-cluster" }, input)
end

--- Returns information about a specific job including shipping information, job status, and other important metadata
--- @param input table The input table for the describe_job command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_job(input)
	return common.execute_aws_command_with_input({ "snowball", "describe-job" }, input)
end

--- Information on the shipping label of a Snow device that is being returned to Amazon Web Services
--- @param input table The input table for the describe_return_shipping_label command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_return_shipping_label(input)
	return common.execute_aws_command_with_input({ "snowball", "describe-return-shipping-label" }, input)
end

--- Returns a link to an Amazon S3 presigned URL for the manifest file associated with the specified JobId value
--- @param input table The input table for the get_job_manifest command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_job_manifest(input)
	return common.execute_aws_command_with_input({ "snowball", "get-job-manifest" }, input)
end

--- Returns the UnlockCode code value for the specified job
--- @param input table The input table for the get_job_unlock_code command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_job_unlock_code(input)
	return common.execute_aws_command_with_input({ "snowball", "get-job-unlock-code" }, input)
end

--- Returns information about the Snow Family service limit for your account, and also the number of Snow devices your account has in use
--- @param input table The input table for the get_snowball_usage command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_snowball_usage(input)
	return common.execute_aws_command_with_input({ "snowball", "get-snowball-usage" }, input)
end

--- Returns an Amazon S3 presigned URL for an update file associated with a specified JobId
--- @param input table The input table for the get_software_updates command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_software_updates(input)
	return common.execute_aws_command_with_input({ "snowball", "get-software-updates" }, input)
end

--- Returns an array of JobListEntry objects of the specified length
--- @param input table The input table for the list_cluster_jobs command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_cluster_jobs(input)
	return common.execute_aws_command_with_input({ "snowball", "list-cluster-jobs" }, input)
end

--- Returns an array of ClusterListEntry objects of the specified length
--- @param input table The input table for the list_clusters command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_clusters(input)
	return common.execute_aws_command_with_input({ "snowball", "list-clusters" }, input)
end

--- This action returns a list of the different Amazon EC2-compatible Amazon Machine Images (AMIs) that are owned by your Amazon Web Services accountthat would be supported for use on a Snow device
--- @param input table The input table for the list_compatible_images command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_compatible_images(input)
	return common.execute_aws_command_with_input({ "snowball", "list-compatible-images" }, input)
end

--- Returns an array of JobListEntry objects of the specified length
--- @param input table The input table for the list_jobs command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_jobs(input)
	return common.execute_aws_command_with_input({ "snowball", "list-jobs" }, input)
end

--- Lists all long-term pricing types
--- @param input table The input table for the list_long_term_pricing command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_long_term_pricing(input)
	return common.execute_aws_command_with_input({ "snowball", "list-long-term-pricing" }, input)
end

--- A list of locations from which the customer can choose to pickup a device
--- @param input table The input table for the list_pickup_locations command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_pickup_locations(input)
	return common.execute_aws_command_with_input({ "snowball", "list-pickup-locations" }, input)
end

--- Lists all supported versions for Snow on-device services
--- @param input table The input table for the list_service_versions command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_service_versions(input)
	return common.execute_aws_command_with_input({ "snowball", "list-service-versions" }, input)
end

--- While a cluster's ClusterState value is in the AwaitingQuorum state, you can update some of the information associated with a cluster
--- @param input table The input table for the update_cluster command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_cluster(input)
	return common.execute_aws_command_with_input({ "snowball", "update-cluster" }, input)
end

--- While a job's JobState value is New, you can update some of the information associated with a job
--- @param input table The input table for the update_job command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_job(input)
	return common.execute_aws_command_with_input({ "snowball", "update-job" }, input)
end

--- Updates the state when a shipment state changes to a different state
--- @param input table The input table for the update_job_shipment_state command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_job_shipment_state(input)
	return common.execute_aws_command_with_input({ "snowball", "update-job-shipment-state" }, input)
end

--- Updates the long-term pricing type
--- @param input table The input table for the update_long_term_pricing command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_long_term_pricing(input)
	return common.execute_aws_command_with_input({ "snowball", "update-long-term-pricing" }, input)
end

return M
