-- AUTOGENERATED FILE - DO NOT EDIT
-- AWS Service: backup

local common = require("nvim-aws.common")

--- AWS backup service functions
local M = {}

--- AWS backup cancel-legal-hold operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.cancel_legal_hold(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "cancel-legal-hold" }, input, callbacks)
end

--- AWS backup create-backup-plan operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_backup_plan(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "create-backup-plan" }, input, callbacks)
end

--- AWS backup create-backup-selection operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_backup_selection(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "create-backup-selection" }, input, callbacks)
end

--- AWS backup create-backup-vault operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_backup_vault(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "create-backup-vault" }, input, callbacks)
end

--- AWS backup create-framework operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_framework(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "create-framework" }, input, callbacks)
end

--- AWS backup create-legal-hold operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_legal_hold(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "create-legal-hold" }, input, callbacks)
end

--- AWS backup create-logically-air-gapped-backup-vault operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_logically_air_gapped_backup_vault(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "create-logically-air-gapped-backup-vault" }, input, callbacks)
end

--- AWS backup create-report-plan operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_report_plan(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "create-report-plan" }, input, callbacks)
end

--- AWS backup create-restore-testing-plan operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_restore_testing_plan(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "create-restore-testing-plan" }, input, callbacks)
end

--- AWS backup create-restore-testing-selection operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_restore_testing_selection(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "create-restore-testing-selection" }, input, callbacks)
end

--- AWS backup delete-backup-plan operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_backup_plan(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "delete-backup-plan" }, input, callbacks)
end

--- AWS backup delete-backup-selection operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_backup_selection(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "delete-backup-selection" }, input, callbacks)
end

--- AWS backup delete-backup-vault operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_backup_vault(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "delete-backup-vault" }, input, callbacks)
end

--- AWS backup delete-backup-vault-access-policy operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_backup_vault_access_policy(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "delete-backup-vault-access-policy" }, input, callbacks)
end

--- AWS backup delete-backup-vault-lock-configuration operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_backup_vault_lock_configuration(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "delete-backup-vault-lock-configuration" }, input, callbacks)
end

--- AWS backup delete-backup-vault-notifications operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_backup_vault_notifications(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "delete-backup-vault-notifications" }, input, callbacks)
end

--- AWS backup delete-framework operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_framework(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "delete-framework" }, input, callbacks)
end

--- AWS backup delete-recovery-point operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_recovery_point(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "delete-recovery-point" }, input, callbacks)
end

--- AWS backup delete-report-plan operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_report_plan(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "delete-report-plan" }, input, callbacks)
end

--- AWS backup delete-restore-testing-plan operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_restore_testing_plan(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "delete-restore-testing-plan" }, input, callbacks)
end

--- AWS backup delete-restore-testing-selection operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_restore_testing_selection(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "delete-restore-testing-selection" }, input, callbacks)
end

--- AWS backup describe-backup-job operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_backup_job(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "describe-backup-job" }, input, callbacks)
end

--- AWS backup describe-backup-vault operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_backup_vault(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "describe-backup-vault" }, input, callbacks)
end

--- AWS backup describe-copy-job operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_copy_job(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "describe-copy-job" }, input, callbacks)
end

--- AWS backup describe-framework operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_framework(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "describe-framework" }, input, callbacks)
end

--- AWS backup describe-global-settings operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_global_settings(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "describe-global-settings" }, input, callbacks)
end

--- AWS backup describe-protected-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_protected_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "describe-protected-resource" }, input, callbacks)
end

--- AWS backup describe-recovery-point operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_recovery_point(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "describe-recovery-point" }, input, callbacks)
end

--- AWS backup describe-region-settings operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_region_settings(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "describe-region-settings" }, input, callbacks)
end

--- AWS backup describe-report-job operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_report_job(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "describe-report-job" }, input, callbacks)
end

--- AWS backup describe-report-plan operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_report_plan(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "describe-report-plan" }, input, callbacks)
end

--- AWS backup describe-restore-job operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_restore_job(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "describe-restore-job" }, input, callbacks)
end

--- AWS backup disassociate-recovery-point operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.disassociate_recovery_point(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "disassociate-recovery-point" }, input, callbacks)
end

--- AWS backup disassociate-recovery-point-from-parent operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.disassociate_recovery_point_from_parent(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "disassociate-recovery-point-from-parent" }, input, callbacks)
end

--- AWS backup export-backup-plan-template operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.export_backup_plan_template(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "export-backup-plan-template" }, input, callbacks)
end

--- AWS backup get-backup-plan operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_backup_plan(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "get-backup-plan" }, input, callbacks)
end

--- AWS backup get-backup-plan-from-json operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_backup_plan_from_json(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "get-backup-plan-from-json" }, input, callbacks)
end

--- AWS backup get-backup-plan-from-template operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_backup_plan_from_template(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "get-backup-plan-from-template" }, input, callbacks)
end

--- AWS backup get-backup-selection operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_backup_selection(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "get-backup-selection" }, input, callbacks)
end

--- AWS backup get-backup-vault-access-policy operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_backup_vault_access_policy(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "get-backup-vault-access-policy" }, input, callbacks)
end

--- AWS backup get-backup-vault-notifications operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_backup_vault_notifications(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "get-backup-vault-notifications" }, input, callbacks)
end

--- AWS backup get-legal-hold operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_legal_hold(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "get-legal-hold" }, input, callbacks)
end

--- AWS backup get-recovery-point-index-details operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_recovery_point_index_details(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "get-recovery-point-index-details" }, input, callbacks)
end

--- AWS backup get-recovery-point-restore-metadata operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_recovery_point_restore_metadata(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "get-recovery-point-restore-metadata" }, input, callbacks)
end

--- AWS backup get-restore-job-metadata operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_restore_job_metadata(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "get-restore-job-metadata" }, input, callbacks)
end

--- AWS backup get-restore-testing-inferred-metadata operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_restore_testing_inferred_metadata(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "get-restore-testing-inferred-metadata" }, input, callbacks)
end

--- AWS backup get-restore-testing-plan operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_restore_testing_plan(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "get-restore-testing-plan" }, input, callbacks)
end

--- AWS backup get-restore-testing-selection operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_restore_testing_selection(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "get-restore-testing-selection" }, input, callbacks)
end

--- AWS backup get-supported-resource-types operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_supported_resource_types(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "get-supported-resource-types" }, input, callbacks)
end

--- AWS backup list-backup-job-summaries operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_backup_job_summaries(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "list-backup-job-summaries" }, input, callbacks)
end

--- AWS backup list-backup-jobs operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_backup_jobs(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "list-backup-jobs" }, input, callbacks)
end

--- AWS backup list-backup-plan-templates operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_backup_plan_templates(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "list-backup-plan-templates" }, input, callbacks)
end

--- AWS backup list-backup-plan-versions operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_backup_plan_versions(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "list-backup-plan-versions" }, input, callbacks)
end

--- AWS backup list-backup-plans operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_backup_plans(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "list-backup-plans" }, input, callbacks)
end

--- AWS backup list-backup-selections operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_backup_selections(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "list-backup-selections" }, input, callbacks)
end

--- AWS backup list-backup-vaults operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_backup_vaults(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "list-backup-vaults" }, input, callbacks)
end

--- AWS backup list-copy-job-summaries operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_copy_job_summaries(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "list-copy-job-summaries" }, input, callbacks)
end

--- AWS backup list-copy-jobs operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_copy_jobs(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "list-copy-jobs" }, input, callbacks)
end

--- AWS backup list-frameworks operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_frameworks(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "list-frameworks" }, input, callbacks)
end

--- AWS backup list-indexed-recovery-points operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_indexed_recovery_points(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "list-indexed-recovery-points" }, input, callbacks)
end

--- AWS backup list-legal-holds operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_legal_holds(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "list-legal-holds" }, input, callbacks)
end

--- AWS backup list-protected-resources operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_protected_resources(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "list-protected-resources" }, input, callbacks)
end

--- AWS backup list-protected-resources-by-backup-vault operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_protected_resources_by_backup_vault(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "list-protected-resources-by-backup-vault" }, input, callbacks)
end

--- AWS backup list-recovery-points-by-backup-vault operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_recovery_points_by_backup_vault(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "list-recovery-points-by-backup-vault" }, input, callbacks)
end

--- AWS backup list-recovery-points-by-legal-hold operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_recovery_points_by_legal_hold(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "list-recovery-points-by-legal-hold" }, input, callbacks)
end

--- AWS backup list-recovery-points-by-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_recovery_points_by_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "list-recovery-points-by-resource" }, input, callbacks)
end

--- AWS backup list-report-jobs operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_report_jobs(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "list-report-jobs" }, input, callbacks)
end

--- AWS backup list-report-plans operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_report_plans(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "list-report-plans" }, input, callbacks)
end

--- AWS backup list-restore-job-summaries operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_restore_job_summaries(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "list-restore-job-summaries" }, input, callbacks)
end

--- AWS backup list-restore-jobs operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_restore_jobs(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "list-restore-jobs" }, input, callbacks)
end

--- AWS backup list-restore-jobs-by-protected-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_restore_jobs_by_protected_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "list-restore-jobs-by-protected-resource" }, input, callbacks)
end

--- AWS backup list-restore-testing-plans operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_restore_testing_plans(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "list-restore-testing-plans" }, input, callbacks)
end

--- AWS backup list-restore-testing-selections operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_restore_testing_selections(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "list-restore-testing-selections" }, input, callbacks)
end

--- AWS backup list-tags operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_tags(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "list-tags" }, input, callbacks)
end

--- AWS backup put-backup-vault-access-policy operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.put_backup_vault_access_policy(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "put-backup-vault-access-policy" }, input, callbacks)
end

--- AWS backup put-backup-vault-lock-configuration operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.put_backup_vault_lock_configuration(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "put-backup-vault-lock-configuration" }, input, callbacks)
end

--- AWS backup put-backup-vault-notifications operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.put_backup_vault_notifications(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "put-backup-vault-notifications" }, input, callbacks)
end

--- AWS backup put-restore-validation-result operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.put_restore_validation_result(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "put-restore-validation-result" }, input, callbacks)
end

--- AWS backup start-backup-job operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.start_backup_job(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "start-backup-job" }, input, callbacks)
end

--- AWS backup start-copy-job operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.start_copy_job(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "start-copy-job" }, input, callbacks)
end

--- AWS backup start-report-job operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.start_report_job(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "start-report-job" }, input, callbacks)
end

--- AWS backup start-restore-job operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.start_restore_job(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "start-restore-job" }, input, callbacks)
end

--- AWS backup stop-backup-job operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.stop_backup_job(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "stop-backup-job" }, input, callbacks)
end

--- AWS backup tag-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.tag_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "tag-resource" }, input, callbacks)
end

--- AWS backup untag-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.untag_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "untag-resource" }, input, callbacks)
end

--- AWS backup update-backup-plan operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_backup_plan(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "update-backup-plan" }, input, callbacks)
end

--- AWS backup update-framework operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_framework(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "update-framework" }, input, callbacks)
end

--- AWS backup update-global-settings operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_global_settings(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "update-global-settings" }, input, callbacks)
end

--- AWS backup update-recovery-point-index-settings operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_recovery_point_index_settings(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "update-recovery-point-index-settings" }, input, callbacks)
end

--- AWS backup update-recovery-point-lifecycle operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_recovery_point_lifecycle(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "update-recovery-point-lifecycle" }, input, callbacks)
end

--- AWS backup update-region-settings operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_region_settings(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "update-region-settings" }, input, callbacks)
end

--- AWS backup update-report-plan operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_report_plan(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "update-report-plan" }, input, callbacks)
end

--- AWS backup update-restore-testing-plan operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_restore_testing_plan(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "update-restore-testing-plan" }, input, callbacks)
end

--- AWS backup update-restore-testing-selection operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_restore_testing_selection(input, callbacks)
	return common.execute_aws_command_skeleton({ "backup", "update-restore-testing-selection" }, input, callbacks)
end

return M
