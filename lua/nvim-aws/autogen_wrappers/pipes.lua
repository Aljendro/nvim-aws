-- AUTOGENERATED FILE - DO NOT EDIT
-- AWS Service: pipes

local common = require("nvim-aws.common")

--- AWS pipes service functions
local M = {}

--- AWS pipes create-pipe operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.create_pipe(input)
	return common.execute_aws_command_skeleton({ "pipes", "create-pipe" }, input)
end

--- AWS pipes delete-pipe operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.delete_pipe(input)
	return common.execute_aws_command_skeleton({ "pipes", "delete-pipe" }, input)
end

--- AWS pipes describe-pipe operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.describe_pipe(input)
	return common.execute_aws_command_skeleton({ "pipes", "describe-pipe" }, input)
end

--- AWS pipes list-pipes operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.list_pipes(input)
	return common.execute_aws_command_skeleton({ "pipes", "list-pipes" }, input)
end

--- AWS pipes list-tags-for-resource operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.list_tags_for_resource(input)
	return common.execute_aws_command_skeleton({ "pipes", "list-tags-for-resource" }, input)
end

--- AWS pipes start-pipe operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.start_pipe(input)
	return common.execute_aws_command_skeleton({ "pipes", "start-pipe" }, input)
end

--- AWS pipes stop-pipe operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.stop_pipe(input)
	return common.execute_aws_command_skeleton({ "pipes", "stop-pipe" }, input)
end

--- AWS pipes tag-resource operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.tag_resource(input)
	return common.execute_aws_command_skeleton({ "pipes", "tag-resource" }, input)
end

--- AWS pipes untag-resource operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.untag_resource(input)
	return common.execute_aws_command_skeleton({ "pipes", "untag-resource" }, input)
end

--- AWS pipes update-pipe operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.update_pipe(input)
	return common.execute_aws_command_skeleton({ "pipes", "update-pipe" }, input)
end

return M
