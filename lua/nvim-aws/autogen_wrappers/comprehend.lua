-- AUTOGENERATED FILE - DO NOT EDIT
-- AWS Service: comprehend

local common = require("nvim-aws.common")

--- AWS comprehend service functions
local M = {}

--- AWS comprehend batch-detect-dominant-language operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.batch_detect_dominant_language(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "batch-detect-dominant-language" }, input, callbacks)
end

--- AWS comprehend batch-detect-entities operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.batch_detect_entities(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "batch-detect-entities" }, input, callbacks)
end

--- AWS comprehend batch-detect-key-phrases operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.batch_detect_key_phrases(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "batch-detect-key-phrases" }, input, callbacks)
end

--- AWS comprehend batch-detect-sentiment operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.batch_detect_sentiment(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "batch-detect-sentiment" }, input, callbacks)
end

--- AWS comprehend batch-detect-syntax operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.batch_detect_syntax(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "batch-detect-syntax" }, input, callbacks)
end

--- AWS comprehend batch-detect-targeted-sentiment operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.batch_detect_targeted_sentiment(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "batch-detect-targeted-sentiment" }, input, callbacks)
end

--- AWS comprehend classify-document operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.classify_document(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "classify-document" }, input, callbacks)
end

--- AWS comprehend contains-pii-entities operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.contains_pii_entities(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "contains-pii-entities" }, input, callbacks)
end

--- AWS comprehend create-dataset operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_dataset(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "create-dataset" }, input, callbacks)
end

--- AWS comprehend create-document-classifier operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_document_classifier(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "create-document-classifier" }, input, callbacks)
end

--- AWS comprehend create-endpoint operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_endpoint(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "create-endpoint" }, input, callbacks)
end

--- AWS comprehend create-entity-recognizer operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_entity_recognizer(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "create-entity-recognizer" }, input, callbacks)
end

--- AWS comprehend create-flywheel operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_flywheel(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "create-flywheel" }, input, callbacks)
end

--- AWS comprehend delete-document-classifier operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_document_classifier(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "delete-document-classifier" }, input, callbacks)
end

--- AWS comprehend delete-endpoint operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_endpoint(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "delete-endpoint" }, input, callbacks)
end

--- AWS comprehend delete-entity-recognizer operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_entity_recognizer(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "delete-entity-recognizer" }, input, callbacks)
end

--- AWS comprehend delete-flywheel operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_flywheel(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "delete-flywheel" }, input, callbacks)
end

--- AWS comprehend delete-resource-policy operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_resource_policy(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "delete-resource-policy" }, input, callbacks)
end

--- AWS comprehend describe-dataset operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_dataset(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "describe-dataset" }, input, callbacks)
end

--- AWS comprehend describe-document-classification-job operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_document_classification_job(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "describe-document-classification-job" }, input, callbacks)
end

--- AWS comprehend describe-document-classifier operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_document_classifier(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "describe-document-classifier" }, input, callbacks)
end

--- AWS comprehend describe-dominant-language-detection-job operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_dominant_language_detection_job(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "describe-dominant-language-detection-job" }, input, callbacks)
end

--- AWS comprehend describe-endpoint operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_endpoint(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "describe-endpoint" }, input, callbacks)
end

--- AWS comprehend describe-entities-detection-job operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_entities_detection_job(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "describe-entities-detection-job" }, input, callbacks)
end

--- AWS comprehend describe-entity-recognizer operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_entity_recognizer(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "describe-entity-recognizer" }, input, callbacks)
end

--- AWS comprehend describe-events-detection-job operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_events_detection_job(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "describe-events-detection-job" }, input, callbacks)
end

--- AWS comprehend describe-flywheel operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_flywheel(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "describe-flywheel" }, input, callbacks)
end

--- AWS comprehend describe-flywheel-iteration operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_flywheel_iteration(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "describe-flywheel-iteration" }, input, callbacks)
end

--- AWS comprehend describe-key-phrases-detection-job operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_key_phrases_detection_job(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "describe-key-phrases-detection-job" }, input, callbacks)
end

--- AWS comprehend describe-pii-entities-detection-job operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_pii_entities_detection_job(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "describe-pii-entities-detection-job" }, input, callbacks)
end

--- AWS comprehend describe-resource-policy operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_resource_policy(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "describe-resource-policy" }, input, callbacks)
end

--- AWS comprehend describe-sentiment-detection-job operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_sentiment_detection_job(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "describe-sentiment-detection-job" }, input, callbacks)
end

--- AWS comprehend describe-targeted-sentiment-detection-job operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_targeted_sentiment_detection_job(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "describe-targeted-sentiment-detection-job" }, input, callbacks)
end

--- AWS comprehend describe-topics-detection-job operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_topics_detection_job(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "describe-topics-detection-job" }, input, callbacks)
end

--- AWS comprehend detect-dominant-language operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.detect_dominant_language(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "detect-dominant-language" }, input, callbacks)
end

--- AWS comprehend detect-entities operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.detect_entities(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "detect-entities" }, input, callbacks)
end

--- AWS comprehend detect-key-phrases operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.detect_key_phrases(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "detect-key-phrases" }, input, callbacks)
end

--- AWS comprehend detect-pii-entities operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.detect_pii_entities(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "detect-pii-entities" }, input, callbacks)
end

--- AWS comprehend detect-sentiment operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.detect_sentiment(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "detect-sentiment" }, input, callbacks)
end

--- AWS comprehend detect-syntax operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.detect_syntax(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "detect-syntax" }, input, callbacks)
end

--- AWS comprehend detect-targeted-sentiment operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.detect_targeted_sentiment(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "detect-targeted-sentiment" }, input, callbacks)
end

--- AWS comprehend detect-toxic-content operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.detect_toxic_content(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "detect-toxic-content" }, input, callbacks)
end

--- AWS comprehend import-model operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.import_model(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "import-model" }, input, callbacks)
end

--- AWS comprehend list-datasets operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_datasets(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "list-datasets" }, input, callbacks)
end

--- AWS comprehend list-document-classification-jobs operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_document_classification_jobs(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "list-document-classification-jobs" }, input, callbacks)
end

--- AWS comprehend list-document-classifier-summaries operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_document_classifier_summaries(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "list-document-classifier-summaries" }, input, callbacks)
end

--- AWS comprehend list-document-classifiers operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_document_classifiers(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "list-document-classifiers" }, input, callbacks)
end

--- AWS comprehend list-dominant-language-detection-jobs operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_dominant_language_detection_jobs(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "list-dominant-language-detection-jobs" }, input, callbacks)
end

--- AWS comprehend list-endpoints operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_endpoints(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "list-endpoints" }, input, callbacks)
end

--- AWS comprehend list-entities-detection-jobs operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_entities_detection_jobs(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "list-entities-detection-jobs" }, input, callbacks)
end

--- AWS comprehend list-entity-recognizer-summaries operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_entity_recognizer_summaries(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "list-entity-recognizer-summaries" }, input, callbacks)
end

--- AWS comprehend list-entity-recognizers operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_entity_recognizers(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "list-entity-recognizers" }, input, callbacks)
end

--- AWS comprehend list-events-detection-jobs operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_events_detection_jobs(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "list-events-detection-jobs" }, input, callbacks)
end

--- AWS comprehend list-flywheel-iteration-history operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_flywheel_iteration_history(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "list-flywheel-iteration-history" }, input, callbacks)
end

--- AWS comprehend list-flywheels operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_flywheels(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "list-flywheels" }, input, callbacks)
end

--- AWS comprehend list-key-phrases-detection-jobs operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_key_phrases_detection_jobs(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "list-key-phrases-detection-jobs" }, input, callbacks)
end

--- AWS comprehend list-pii-entities-detection-jobs operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_pii_entities_detection_jobs(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "list-pii-entities-detection-jobs" }, input, callbacks)
end

--- AWS comprehend list-sentiment-detection-jobs operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_sentiment_detection_jobs(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "list-sentiment-detection-jobs" }, input, callbacks)
end

--- AWS comprehend list-tags-for-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_tags_for_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "list-tags-for-resource" }, input, callbacks)
end

--- AWS comprehend list-targeted-sentiment-detection-jobs operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_targeted_sentiment_detection_jobs(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "list-targeted-sentiment-detection-jobs" }, input, callbacks)
end

--- AWS comprehend list-topics-detection-jobs operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_topics_detection_jobs(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "list-topics-detection-jobs" }, input, callbacks)
end

--- AWS comprehend put-resource-policy operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.put_resource_policy(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "put-resource-policy" }, input, callbacks)
end

--- AWS comprehend start-document-classification-job operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.start_document_classification_job(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "start-document-classification-job" }, input, callbacks)
end

--- AWS comprehend start-dominant-language-detection-job operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.start_dominant_language_detection_job(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "start-dominant-language-detection-job" }, input, callbacks)
end

--- AWS comprehend start-entities-detection-job operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.start_entities_detection_job(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "start-entities-detection-job" }, input, callbacks)
end

--- AWS comprehend start-events-detection-job operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.start_events_detection_job(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "start-events-detection-job" }, input, callbacks)
end

--- AWS comprehend start-flywheel-iteration operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.start_flywheel_iteration(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "start-flywheel-iteration" }, input, callbacks)
end

--- AWS comprehend start-key-phrases-detection-job operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.start_key_phrases_detection_job(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "start-key-phrases-detection-job" }, input, callbacks)
end

--- AWS comprehend start-pii-entities-detection-job operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.start_pii_entities_detection_job(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "start-pii-entities-detection-job" }, input, callbacks)
end

--- AWS comprehend start-sentiment-detection-job operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.start_sentiment_detection_job(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "start-sentiment-detection-job" }, input, callbacks)
end

--- AWS comprehend start-targeted-sentiment-detection-job operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.start_targeted_sentiment_detection_job(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "start-targeted-sentiment-detection-job" }, input, callbacks)
end

--- AWS comprehend start-topics-detection-job operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.start_topics_detection_job(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "start-topics-detection-job" }, input, callbacks)
end

--- AWS comprehend stop-dominant-language-detection-job operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.stop_dominant_language_detection_job(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "stop-dominant-language-detection-job" }, input, callbacks)
end

--- AWS comprehend stop-entities-detection-job operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.stop_entities_detection_job(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "stop-entities-detection-job" }, input, callbacks)
end

--- AWS comprehend stop-events-detection-job operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.stop_events_detection_job(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "stop-events-detection-job" }, input, callbacks)
end

--- AWS comprehend stop-key-phrases-detection-job operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.stop_key_phrases_detection_job(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "stop-key-phrases-detection-job" }, input, callbacks)
end

--- AWS comprehend stop-pii-entities-detection-job operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.stop_pii_entities_detection_job(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "stop-pii-entities-detection-job" }, input, callbacks)
end

--- AWS comprehend stop-sentiment-detection-job operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.stop_sentiment_detection_job(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "stop-sentiment-detection-job" }, input, callbacks)
end

--- AWS comprehend stop-targeted-sentiment-detection-job operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.stop_targeted_sentiment_detection_job(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "stop-targeted-sentiment-detection-job" }, input, callbacks)
end

--- AWS comprehend stop-training-document-classifier operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.stop_training_document_classifier(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "stop-training-document-classifier" }, input, callbacks)
end

--- AWS comprehend stop-training-entity-recognizer operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.stop_training_entity_recognizer(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "stop-training-entity-recognizer" }, input, callbacks)
end

--- AWS comprehend tag-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.tag_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "tag-resource" }, input, callbacks)
end

--- AWS comprehend untag-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.untag_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "untag-resource" }, input, callbacks)
end

--- AWS comprehend update-endpoint operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_endpoint(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "update-endpoint" }, input, callbacks)
end

--- AWS comprehend update-flywheel operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_flywheel(input, callbacks)
	return common.execute_aws_command_skeleton({ "comprehend", "update-flywheel" }, input, callbacks)
end

return M
