-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-07 21:36:08
-- AWS Service: m2

local common = require("nvim-aws.wrappers.common")

--- AWS M2 service functions
local M = {}

--- Gets a single sign-on URL that can be used to connect to AWS Blu Insights
--- @param input table Optional input parameters
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_signed_bluinsights_url(input)
	return common.execute_aws_command_with_input({ "m2", "get-signed-bluinsights-url" }, input)
end

--- Lists the available engine versions
--- @param input table The input table for the list_engine_versions command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_engine_versions(input)
	return common.execute_aws_command_with_input({ "m2", "list-engine-versions" }, input)
end

--- Lists the tags for the specified resource
--- @param input table The input table for the list_tags_for_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_tags_for_resource(input)
	return common.execute_aws_command_with_input({ "m2", "list-tags-for-resource" }, input)
end

--- Adds one or more tags to the specified resource
--- @param input table The input table for the tag_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.tag_resource(input)
	return common.execute_aws_command_with_input({ "m2", "tag-resource" }, input)
end

--- Removes one or more tags from the specified resource
--- @param input table The input table for the untag_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.untag_resource(input)
	return common.execute_aws_command_with_input({ "m2", "untag-resource" }, input)
end

return M
