-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-07 21:36:02
-- AWS Service: proton

local common = require("nvim-aws.wrappers.common")

--- AWS PROTON service functions
local M = {}

--- Attempts to cancel a component deployment (for a component that is in the IN_PROGRESS deployment status)
--- @param input table The input table for the cancel_component_deployment command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.cancel_component_deployment(input)
	return common.execute_aws_command_with_input({ "proton", "cancel-component-deployment" }, input)
end

--- Attempts to cancel an environment deployment on an UpdateEnvironment action, if the deployment is IN_PROGRESS
--- @param input table The input table for the cancel_environment_deployment command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.cancel_environment_deployment(input)
	return common.execute_aws_command_with_input({ "proton", "cancel-environment-deployment" }, input)
end

--- Attempts to cancel a service instance deployment on an UpdateServiceInstance action, if the deployment is IN_PROGRESS
--- @param input table The input table for the cancel_service_instance_deployment command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.cancel_service_instance_deployment(input)
	return common.execute_aws_command_with_input({ "proton", "cancel-service-instance-deployment" }, input)
end

--- Attempts to cancel a service pipeline deployment on an UpdateServicePipeline action, if the deployment is IN_PROGRESS
--- @param input table The input table for the cancel_service_pipeline_deployment command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.cancel_service_pipeline_deployment(input)
	return common.execute_aws_command_with_input({ "proton", "cancel-service-pipeline-deployment" }, input)
end

--- Get the sync status of a repository used for Proton template sync
--- @param input table The input table for the get_repository_sync_status command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_repository_sync_status(input)
	return common.execute_aws_command_with_input({ "proton", "get-repository-sync-status" }, input)
end

--- Get counts of Proton resources
--- @param input table The input table for the get_resources_summary command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_resources_summary(input)
	return common.execute_aws_command_with_input({ "proton", "get-resources-summary" }, input)
end

--- Get the status of the synced service instance
--- @param input table The input table for the get_service_instance_sync_status command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_service_instance_sync_status(input)
	return common.execute_aws_command_with_input({ "proton", "get-service-instance-sync-status" }, input)
end

--- Get the status of a template sync
--- @param input table The input table for the get_template_sync_status command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_template_sync_status(input)
	return common.execute_aws_command_with_input({ "proton", "get-template-sync-status" }, input)
end

--- List repository sync definitions with detail data
--- @param input table The input table for the list_repository_sync_definitions command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_repository_sync_definitions(input)
	return common.execute_aws_command_with_input({ "proton", "list-repository-sync-definitions" }, input)
end

--- List tags for a resource
--- @param input table The input table for the list_tags_for_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_tags_for_resource(input)
	return common.execute_aws_command_with_input({ "proton", "list-tags-for-resource" }, input)
end

--- Notify Proton of status changes to a provisioned resource when you use self-managed provisioning
--- @param input table The input table for the notify_resource_deployment_status_change command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.notify_resource_deployment_status_change(input)
	return common.execute_aws_command_with_input({ "proton", "notify-resource-deployment-status-change" }, input)
end

--- Tag a resource
--- @param input table The input table for the tag_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.tag_resource(input)
	return common.execute_aws_command_with_input({ "proton", "tag-resource" }, input)
end

--- Remove a customer tag from a resource
--- @param input table The input table for the untag_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.untag_resource(input)
	return common.execute_aws_command_with_input({ "proton", "untag-resource" }, input)
end

return M
