-- AUTOGENERATED FILE - DO NOT EDIT
-- AWS Service: cognito-identity-provider

local common = require("nvim-aws.wrappers.common")

--- AWS COGNITO-IDP service functions
local M = {}

--- Adds additional user attributes to the user pool schema
--- @param input table|nil The input table for the add_custom_attributes command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.add_custom_attributes(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "add-custom-attributes" }, input)
end

--- Adds a user to a group
--- @param input table|nil The input table for the admin_add_user_to_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.admin_add_user_to_group(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "admin-add-user-to-group" }, input)
end

--- Confirms user sign-up as an administrator
--- @param input table|nil The input table for the admin_confirm_sign_up command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.admin_confirm_sign_up(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "admin-confirm-sign-up" }, input)
end

--- Creates a new user in the specified user pool
--- @param input table|nil The input table for the admin_create_user command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.admin_create_user(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "admin-create-user" }, input)
end

--- Deletes a user profile in your user pool
--- @param input table|nil The input table for the admin_delete_user command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.admin_delete_user(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "admin-delete-user" }, input)
end

--- Deletes attribute values from a user
--- @param input table|nil The input table for the admin_delete_user_attributes command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.admin_delete_user_attributes(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "admin-delete-user-attributes" }, input)
end

--- Prevents the user from signing in with the specified external (SAML or social) identity provider (IdP)
--- @param input table|nil The input table for the admin_disable_provider_for_user command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.admin_disable_provider_for_user(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "admin-disable-provider-for-user" }, input)
end

--- Deactivates a user profile and revokes all access tokens for the user
--- @param input table|nil The input table for the admin_disable_user command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.admin_disable_user(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "admin-disable-user" }, input)
end

--- Activates sign-in for a user profile that previously had sign-in access disabled
--- @param input table|nil The input table for the admin_enable_user command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.admin_enable_user(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "admin-enable-user" }, input)
end

--- Forgets, or deletes, a remembered device from a user's profile
--- @param input table|nil The input table for the admin_forget_device command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.admin_forget_device(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "admin-forget-device" }, input)
end

--- Given the device key, returns details for a user's device
--- @param input table|nil The input table for the admin_get_device command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.admin_get_device(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "admin-get-device" }, input)
end

--- Given a username, returns details about a user profile in a user pool
--- @param input table|nil The input table for the admin_get_user command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.admin_get_user(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "admin-get-user" }, input)
end

--- Starts sign-in for applications with a server-side component, for example a traditional web application
--- @param input table|nil The input table for the admin_initiate_auth command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.admin_initiate_auth(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "admin-initiate-auth" }, input)
end

--- Links an existing user account in a user pool, or DestinationUser, to an identity from an external IdP, or SourceUser, based on a specified attribute name and value from the external IdP
--- @param input table|nil The input table for the admin_link_provider_for_user command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.admin_link_provider_for_user(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "admin-link-provider-for-user" }, input)
end

--- Lists a user's registered devices
--- @param input table|nil The input table for the admin_list_devices command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.admin_list_devices(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "admin-list-devices" }, input)
end

--- Lists the groups that a user belongs to
--- @param input table|nil The input table for the admin_list_groups_for_user command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.admin_list_groups_for_user(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "admin-list-groups-for-user" }, input)
end

--- Requests a history of user activity and any risks detected as part of Amazon Cognito threat protection
--- @param input table|nil The input table for the admin_list_user_auth_events command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.admin_list_user_auth_events(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "admin-list-user-auth-events" }, input)
end

--- Given a username and a group name, removes them from the group
--- @param input table|nil The input table for the admin_remove_user_from_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.admin_remove_user_from_group(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "admin-remove-user-from-group" }, input)
end

--- Resets the specified user's password in a user pool
--- @param input table|nil The input table for the admin_reset_user_password command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.admin_reset_user_password(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "admin-reset-user-password" }, input)
end

--- Some API operations in a user pool generate a challenge, like a prompt for an MFA code, for device authentication that bypasses MFA, or for a custom authentication challenge
--- @param input table|nil The input table for the admin_respond_to_auth_challenge command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.admin_respond_to_auth_challenge(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "admin-respond-to-auth-challenge" }, input)
end

--- Sets the user's multi-factor authentication (MFA) preference, including which MFA options are activated, and if any are preferred
--- @param input table|nil The input table for the admin_set_user_mfa_preference command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.admin_set_user_mfa_preference(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "admin-set-user-mfa-preference" }, input)
end

--- Sets the specified user's password in a user pool
--- @param input table|nil The input table for the admin_set_user_password command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.admin_set_user_password(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "admin-set-user-password" }, input)
end

--- This action is no longer supported
--- @param input table|nil The input table for the admin_set_user_settings command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.admin_set_user_settings(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "admin-set-user-settings" }, input)
end

--- Provides the feedback for an authentication event generated by threat protection features
--- @param input table|nil The input table for the admin_update_auth_event_feedback command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.admin_update_auth_event_feedback(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "admin-update-auth-event-feedback" }, input)
end

--- Updates the status of a user's device so that it is marked as remembered or not remembered for the purpose of device authentication
--- @param input table|nil The input table for the admin_update_device_status command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.admin_update_device_status(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "admin-update-device-status" }, input)
end

--- Updates the specified user's attributes
--- @param input table|nil The input table for the admin_update_user_attributes command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.admin_update_user_attributes(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "admin-update-user-attributes" }, input)
end

--- Invalidates the identity, access, and refresh tokens that Amazon Cognito issued to a user
--- @param input table|nil The input table for the admin_user_global_sign_out command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.admin_user_global_sign_out(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "admin-user-global-sign-out" }, input)
end

--- Begins setup of time-based one-time password (TOTP) multi-factor authentication (MFA) for a user, with a unique private key that Amazon Cognito generates and returns in the API response
--- @param input table|nil The input table for the associate_software_token command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.associate_software_token(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "associate-software-token" }, input)
end

--- Changes the password for the currently signed-in user
--- @param input table|nil The input table for the change_password command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.change_password(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "change-password" }, input)
end

--- Completes registration of a passkey authenticator for the currently signed-in user
--- @param input table|nil The input table for the complete_web_authn_registration command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.complete_web_authn_registration(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "complete-web-authn-registration" }, input)
end

--- Confirms a device that a user wants to remember
--- @param input table|nil The input table for the confirm_device command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.confirm_device(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "confirm-device" }, input)
end

--- This public API operation accepts a confirmation code that Amazon Cognito sent to a user and accepts a new password for that user
--- @param input table|nil The input table for the confirm_forgot_password command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.confirm_forgot_password(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "confirm-forgot-password" }, input)
end

--- Confirms the account of a new user
--- @param input table|nil The input table for the confirm_sign_up command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.confirm_sign_up(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "confirm-sign-up" }, input)
end

--- Creates a new group in the specified user pool
--- @param input table|nil The input table for the create_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_group(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "create-group" }, input)
end

--- Adds a configuration and trust relationship between a third-party identity provider (IdP) and a user pool
--- @param input table|nil The input table for the create_identity_provider command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_identity_provider(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "create-identity-provider" }, input)
end

--- Creates a new set of branding settings for a user pool style and associates it with an app client
--- @param input table|nil The input table for the create_managed_login_branding command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_managed_login_branding(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "create-managed-login-branding" }, input)
end

--- Creates a new OAuth2
--- @param input table|nil The input table for the create_resource_server command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_resource_server(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "create-resource-server" }, input)
end

--- Creates a user import job
--- @param input table|nil The input table for the create_user_import_job command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_user_import_job(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "create-user-import-job" }, input)
end

--- Creates a new Amazon Cognito user pool
--- @param input table|nil The input table for the create_user_pool command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_user_pool(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "create-user-pool" }, input)
end

--- Creates an app client in a user pool
--- @param input table|nil The input table for the create_user_pool_client command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_user_pool_client(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "create-user-pool-client" }, input)
end

--- A user pool domain hosts managed login, an authorization server and web server for authentication in your application
--- @param input table|nil The input table for the create_user_pool_domain command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_user_pool_domain(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "create-user-pool-domain" }, input)
end

--- Deletes a group from the specified user pool
--- @param input table|nil The input table for the delete_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_group(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "delete-group" }, input)
end

--- Deletes a user pool identity provider (IdP)
--- @param input table|nil The input table for the delete_identity_provider command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_identity_provider(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "delete-identity-provider" }, input)
end

--- Deletes a managed login branding style
--- @param input table|nil The input table for the delete_managed_login_branding command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_managed_login_branding(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "delete-managed-login-branding" }, input)
end

--- Deletes a resource server
--- @param input table|nil The input table for the delete_resource_server command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_resource_server(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "delete-resource-server" }, input)
end

--- Deletes the profile of the currently signed-in user
--- @param input table|nil The input table for the delete_user command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_user(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "delete-user" }, input)
end

--- Deletes attributes from the currently signed-in user
--- @param input table|nil The input table for the delete_user_attributes command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_user_attributes(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "delete-user-attributes" }, input)
end

--- Deletes a user pool
--- @param input table|nil The input table for the delete_user_pool command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_user_pool(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "delete-user-pool" }, input)
end

--- Deletes a user pool app client
--- @param input table|nil The input table for the delete_user_pool_client command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_user_pool_client(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "delete-user-pool-client" }, input)
end

--- Given a user pool ID and domain identifier, deletes a user pool domain
--- @param input table|nil The input table for the delete_user_pool_domain command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_user_pool_domain(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "delete-user-pool-domain" }, input)
end

--- Deletes a registered passkey, or WebAuthn, authenticator for the currently signed-in user
--- @param input table|nil The input table for the delete_web_authn_credential command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_web_authn_credential(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "delete-web-authn-credential" }, input)
end

--- Given a user pool ID and identity provider (IdP) name, returns details about the IdP
--- @param input table|nil The input table for the describe_identity_provider command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_identity_provider(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "describe-identity-provider" }, input)
end

--- Given the ID of a managed login branding style, returns detailed information about the style
--- @param input table|nil The input table for the describe_managed_login_branding command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_managed_login_branding(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "describe-managed-login-branding" }, input)
end

--- Given the ID of a user pool app client, returns detailed information about the style assigned to the app client
--- @param input table|nil The input table for the describe_managed_login_branding_by_client command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_managed_login_branding_by_client(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "describe-managed-login-branding-by-client" }, input)
end

--- Describes a resource server
--- @param input table|nil The input table for the describe_resource_server command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_resource_server(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "describe-resource-server" }, input)
end

--- Given an app client or user pool ID where threat protection is configured, describes the risk configuration
--- @param input table|nil The input table for the describe_risk_configuration command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_risk_configuration(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "describe-risk-configuration" }, input)
end

--- Describes a user import job
--- @param input table|nil The input table for the describe_user_import_job command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_user_import_job(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "describe-user-import-job" }, input)
end

--- Given a user pool ID, returns configuration information
--- @param input table|nil The input table for the describe_user_pool command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_user_pool(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "describe-user-pool" }, input)
end

--- Given an app client ID, returns configuration information
--- @param input table|nil The input table for the describe_user_pool_client command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_user_pool_client(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "describe-user-pool-client" }, input)
end

--- Given a user pool domain name, returns information about the domain configuration
--- @param input table|nil The input table for the describe_user_pool_domain command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_user_pool_domain(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "describe-user-pool-domain" }, input)
end

--- Given a device key, deletes a remembered device as the currently signed-in user
--- @param input table|nil The input table for the forget_device command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.forget_device(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "forget-device" }, input)
end

--- Sends a password-reset confirmation code for the currently signed-in user
--- @param input table|nil The input table for the forgot_password command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.forgot_password(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "forgot-password" }, input)
end

--- Given a user pool ID, generates a comma-separated value (CSV) list populated with available user attributes in the user pool
--- @param input table|nil The input table for the get_csv_header command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_csv_header(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "get-csv-header" }, input)
end

--- Given a device key, returns information about a remembered device for the current user
--- @param input table|nil The input table for the get_device command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_device(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "get-device" }, input)
end

--- Given a user pool ID and a group name, returns information about the user group
--- @param input table|nil The input table for the get_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_group(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "get-group" }, input)
end

--- Given the identifier of an identity provider (IdP), for example examplecorp, returns information about the user pool configuration for that IdP
--- @param input table|nil The input table for the get_identity_provider_by_identifier command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_identity_provider_by_identifier(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "get-identity-provider-by-identifier" }, input)
end

--- Given a user pool ID, returns the logging configuration
--- @param input table|nil The input table for the get_log_delivery_configuration command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_log_delivery_configuration(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "get-log-delivery-configuration" }, input)
end

--- Given a user pool ID, returns the signing certificate for SAML 2
--- @param input table|nil The input table for the get_signing_certificate command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_signing_certificate(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "get-signing-certificate" }, input)
end

--- Given a user pool ID or app client, returns information about classic hosted UI branding that you applied, if any
--- @param input table|nil The input table for the get_ui_customization command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_ui_customization(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "get-ui-customization" }, input)
end

--- Gets user attributes and and MFA settings for the currently signed-in user
--- @param input table|nil The input table for the get_user command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_user(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "get-user" }, input)
end

--- Given an attribute name, sends a user attribute verification code for the specified attribute name to the currently signed-in user
--- @param input table|nil The input table for the get_user_attribute_verification_code command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_user_attribute_verification_code(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "get-user-attribute-verification-code" }, input)
end

--- Lists the authentication options for the currently signed-in user
--- @param input table|nil The input table for the get_user_auth_factors command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_user_auth_factors(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "get-user-auth-factors" }, input)
end

--- Given a user pool ID, returns configuration for sign-in with WebAuthn authenticators and for multi-factor authentication (MFA)
--- @param input table|nil The input table for the get_user_pool_mfa_config command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_user_pool_mfa_config(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "get-user-pool-mfa-config" }, input)
end

--- Invalidates the identity, access, and refresh tokens that Amazon Cognito issued to a user
--- @param input table|nil The input table for the global_sign_out command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.global_sign_out(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "global-sign-out" }, input)
end

--- Declares an authentication flow and initiates sign-in for a user in the Amazon Cognito user directory
--- @param input table|nil The input table for the initiate_auth command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.initiate_auth(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "initiate-auth" }, input)
end

--- Lists the devices that Amazon Cognito has registered to the currently signed-in user
--- @param input table|nil The input table for the list_devices command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_devices(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "list-devices" }, input)
end

--- Given a user pool ID, returns user pool groups and their details
--- @param input table|nil The input table for the list_groups command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_groups(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "list-groups" }, input)
end

--- Given a user pool ID, returns information about configured identity providers (IdPs)
--- @param input table|nil The input table for the list_identity_providers command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_identity_providers(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "list-identity-providers" }, input)
end

--- Given a user pool ID, returns all resource servers and their details
--- @param input table|nil The input table for the list_resource_servers command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_resource_servers(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "list-resource-servers" }, input)
end

--- Lists the tags that are assigned to an Amazon Cognito user pool
--- @param input table|nil The input table for the list_tags_for_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_tags_for_resource(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "list-tags-for-resource" }, input)
end

--- Given a user pool ID, returns user import jobs and their details
--- @param input table|nil The input table for the list_user_import_jobs command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_user_import_jobs(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "list-user-import-jobs" }, input)
end

--- Given a user pool ID, lists app clients
--- @param input table|nil The input table for the list_user_pool_clients command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_user_pool_clients(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "list-user-pool-clients" }, input)
end

--- Lists user pools and their details in the current Amazon Web Services account
--- @param input table|nil The input table for the list_user_pools command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_user_pools(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "list-user-pools" }, input)
end

--- Given a user pool ID, returns a list of users and their basic details in a user pool
--- @param input table|nil The input table for the list_users command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_users(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "list-users" }, input)
end

--- Given a user pool ID and a group name, returns a list of users in the group
--- @param input table|nil The input table for the list_users_in_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_users_in_group(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "list-users-in-group" }, input)
end

--- Generates a list of the currently signed-in user's registered passkey, or WebAuthn, credentials
--- @param input table|nil The input table for the list_web_authn_credentials command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_web_authn_credentials(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "list-web-authn-credentials" }, input)
end

--- Resends the code that confirms a new account for a user who has signed up in your user pool
--- @param input table|nil The input table for the resend_confirmation_code command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.resend_confirmation_code(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "resend-confirmation-code" }, input)
end

--- Some API operations in a user pool generate a challenge, like a prompt for an MFA code, for device authentication that bypasses MFA, or for a custom authentication challenge
--- @param input table|nil The input table for the respond_to_auth_challenge command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.respond_to_auth_challenge(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "respond-to-auth-challenge" }, input)
end

--- Revokes all of the access tokens generated by, and at the same time as, the specified refresh token
--- @param input table|nil The input table for the revoke_token command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.revoke_token(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "revoke-token" }, input)
end

--- Sets up or modifies the logging configuration of a user pool
--- @param input table|nil The input table for the set_log_delivery_configuration command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.set_log_delivery_configuration(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "set-log-delivery-configuration" }, input)
end

--- Configures threat protection for a user pool or app client
--- @param input table|nil The input table for the set_risk_configuration command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.set_risk_configuration(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "set-risk-configuration" }, input)
end

--- Configures UI branding settings for domains with the hosted UI (classic) branding version
--- @param input table|nil The input table for the set_ui_customization command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.set_ui_customization(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "set-ui-customization" }, input)
end

--- Set the user's multi-factor authentication (MFA) method preference, including which MFA factors are activated and if any are preferred
--- @param input table|nil The input table for the set_user_mfa_preference command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.set_user_mfa_preference(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "set-user-mfa-preference" }, input)
end

--- Sets user pool multi-factor authentication (MFA) and passkey configuration
--- @param input table|nil The input table for the set_user_pool_mfa_config command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.set_user_pool_mfa_config(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "set-user-pool-mfa-config" }, input)
end

--- This action is no longer supported
--- @param input table|nil The input table for the set_user_settings command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.set_user_settings(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "set-user-settings" }, input)
end

--- Registers a user with an app client and requests a user name, password, and user attributes in the user pool
--- @param input table|nil The input table for the sign_up command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.sign_up(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "sign-up" }, input)
end

--- Instructs your user pool to start importing users from a CSV file that contains their usernames and attributes
--- @param input table|nil The input table for the start_user_import_job command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.start_user_import_job(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "start-user-import-job" }, input)
end

--- Requests credential creation options from your user pool for the currently signed-in user
--- @param input table|nil The input table for the start_web_authn_registration command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.start_web_authn_registration(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "start-web-authn-registration" }, input)
end

--- Instructs your user pool to stop a running job that's importing users from a CSV file that contains their usernames and attributes
--- @param input table|nil The input table for the stop_user_import_job command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.stop_user_import_job(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "stop-user-import-job" }, input)
end

--- Assigns a set of tags to an Amazon Cognito user pool
--- @param input table|nil The input table for the tag_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.tag_resource(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "tag-resource" }, input)
end

--- Given tag IDs that you previously assigned to a user pool, removes them
--- @param input table|nil The input table for the untag_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.untag_resource(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "untag-resource" }, input)
end

--- Provides the feedback for an authentication event generated by threat protection features
--- @param input table|nil The input table for the update_auth_event_feedback command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_auth_event_feedback(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "update-auth-event-feedback" }, input)
end

--- Updates the status of a the currently signed-in user's device so that it is marked as remembered or not remembered for the purpose of device authentication
--- @param input table|nil The input table for the update_device_status command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_device_status(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "update-device-status" }, input)
end

--- Given the name of a user pool group, updates any of the properties for precedence, IAM role, or description
--- @param input table|nil The input table for the update_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_group(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "update-group" }, input)
end

--- Modifies the configuration and trust relationship between a third-party identity provider (IdP) and a user pool
--- @param input table|nil The input table for the update_identity_provider command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_identity_provider(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "update-identity-provider" }, input)
end

--- Configures the branding settings for a user pool style
--- @param input table|nil The input table for the update_managed_login_branding command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_managed_login_branding(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "update-managed-login-branding" }, input)
end

--- Updates the name and scopes of a resource server
--- @param input table|nil The input table for the update_resource_server command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_resource_server(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "update-resource-server" }, input)
end

--- Updates the currently signed-in user's attributes
--- @param input table|nil The input table for the update_user_attributes command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_user_attributes(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "update-user-attributes" }, input)
end

--- Updates the configuration of a user pool
--- @param input table|nil The input table for the update_user_pool command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_user_pool(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "update-user-pool" }, input)
end

--- Given a user pool app client ID, updates the configuration
--- @param input table|nil The input table for the update_user_pool_client command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_user_pool_client(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "update-user-pool-client" }, input)
end

--- A user pool domain hosts managed login, an authorization server and web server for authentication in your application
--- @param input table|nil The input table for the update_user_pool_domain command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_user_pool_domain(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "update-user-pool-domain" }, input)
end

--- Registers the current user's time-based one-time password (TOTP) authenticator with a code generated in their authenticator app from a private key that's supplied by your user pool
--- @param input table|nil The input table for the verify_software_token command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.verify_software_token(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "verify-software-token" }, input)
end

--- Submits a verification code for a signed-in user who has added or changed a value of an auto-verified attribute
--- @param input table|nil The input table for the verify_user_attribute command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.verify_user_attribute(input)
	return common.execute_aws_command_with_input({ "cognito-idp", "verify-user-attribute" }, input)
end

return M
