-- AUTOGENERATED FILE - DO NOT EDIT
-- AWS Service: waf

local common = require("nvim-aws.common")

--- AWS waf service functions
local M = {}

--- AWS waf create-byte-match-set operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.create_byte_match_set(input)
	return common.execute_aws_command_skeleton({ "waf", "create-byte-match-set" }, input)
end

--- AWS waf create-geo-match-set operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.create_geo_match_set(input)
	return common.execute_aws_command_skeleton({ "waf", "create-geo-match-set" }, input)
end

--- AWS waf create-ip-set operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.create_ip_set(input)
	return common.execute_aws_command_skeleton({ "waf", "create-ip-set" }, input)
end

--- AWS waf create-rate-based-rule operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.create_rate_based_rule(input)
	return common.execute_aws_command_skeleton({ "waf", "create-rate-based-rule" }, input)
end

--- AWS waf create-regex-match-set operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.create_regex_match_set(input)
	return common.execute_aws_command_skeleton({ "waf", "create-regex-match-set" }, input)
end

--- AWS waf create-regex-pattern-set operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.create_regex_pattern_set(input)
	return common.execute_aws_command_skeleton({ "waf", "create-regex-pattern-set" }, input)
end

--- AWS waf create-rule operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.create_rule(input)
	return common.execute_aws_command_skeleton({ "waf", "create-rule" }, input)
end

--- AWS waf create-rule-group operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.create_rule_group(input)
	return common.execute_aws_command_skeleton({ "waf", "create-rule-group" }, input)
end

--- AWS waf create-size-constraint-set operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.create_size_constraint_set(input)
	return common.execute_aws_command_skeleton({ "waf", "create-size-constraint-set" }, input)
end

--- AWS waf create-sql-injection-match-set operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.create_sql_injection_match_set(input)
	return common.execute_aws_command_skeleton({ "waf", "create-sql-injection-match-set" }, input)
end

--- AWS waf create-web-acl operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.create_web_acl(input)
	return common.execute_aws_command_skeleton({ "waf", "create-web-acl" }, input)
end

--- AWS waf create-web-acl-migration-stack operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.create_web_acl_migration_stack(input)
	return common.execute_aws_command_skeleton({ "waf", "create-web-acl-migration-stack" }, input)
end

--- AWS waf create-xss-match-set operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.create_xss_match_set(input)
	return common.execute_aws_command_skeleton({ "waf", "create-xss-match-set" }, input)
end

--- AWS waf delete-byte-match-set operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.delete_byte_match_set(input)
	return common.execute_aws_command_skeleton({ "waf", "delete-byte-match-set" }, input)
end

--- AWS waf delete-geo-match-set operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.delete_geo_match_set(input)
	return common.execute_aws_command_skeleton({ "waf", "delete-geo-match-set" }, input)
end

--- AWS waf delete-ip-set operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.delete_ip_set(input)
	return common.execute_aws_command_skeleton({ "waf", "delete-ip-set" }, input)
end

--- AWS waf delete-logging-configuration operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.delete_logging_configuration(input)
	return common.execute_aws_command_skeleton({ "waf", "delete-logging-configuration" }, input)
end

--- AWS waf delete-permission-policy operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.delete_permission_policy(input)
	return common.execute_aws_command_skeleton({ "waf", "delete-permission-policy" }, input)
end

--- AWS waf delete-rate-based-rule operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.delete_rate_based_rule(input)
	return common.execute_aws_command_skeleton({ "waf", "delete-rate-based-rule" }, input)
end

--- AWS waf delete-regex-match-set operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.delete_regex_match_set(input)
	return common.execute_aws_command_skeleton({ "waf", "delete-regex-match-set" }, input)
end

--- AWS waf delete-regex-pattern-set operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.delete_regex_pattern_set(input)
	return common.execute_aws_command_skeleton({ "waf", "delete-regex-pattern-set" }, input)
end

--- AWS waf delete-rule operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.delete_rule(input)
	return common.execute_aws_command_skeleton({ "waf", "delete-rule" }, input)
end

--- AWS waf delete-rule-group operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.delete_rule_group(input)
	return common.execute_aws_command_skeleton({ "waf", "delete-rule-group" }, input)
end

--- AWS waf delete-size-constraint-set operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.delete_size_constraint_set(input)
	return common.execute_aws_command_skeleton({ "waf", "delete-size-constraint-set" }, input)
end

--- AWS waf delete-sql-injection-match-set operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.delete_sql_injection_match_set(input)
	return common.execute_aws_command_skeleton({ "waf", "delete-sql-injection-match-set" }, input)
end

--- AWS waf delete-web-acl operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.delete_web_acl(input)
	return common.execute_aws_command_skeleton({ "waf", "delete-web-acl" }, input)
end

--- AWS waf delete-xss-match-set operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.delete_xss_match_set(input)
	return common.execute_aws_command_skeleton({ "waf", "delete-xss-match-set" }, input)
end

--- AWS waf get-byte-match-set operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.get_byte_match_set(input)
	return common.execute_aws_command_skeleton({ "waf", "get-byte-match-set" }, input)
end

--- AWS waf get-change-token operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.get_change_token(input)
	return common.execute_aws_command_skeleton({ "waf", "get-change-token" }, input)
end

--- AWS waf get-change-token-status operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.get_change_token_status(input)
	return common.execute_aws_command_skeleton({ "waf", "get-change-token-status" }, input)
end

--- AWS waf get-geo-match-set operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.get_geo_match_set(input)
	return common.execute_aws_command_skeleton({ "waf", "get-geo-match-set" }, input)
end

--- AWS waf get-ip-set operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.get_ip_set(input)
	return common.execute_aws_command_skeleton({ "waf", "get-ip-set" }, input)
end

--- AWS waf get-logging-configuration operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.get_logging_configuration(input)
	return common.execute_aws_command_skeleton({ "waf", "get-logging-configuration" }, input)
end

--- AWS waf get-permission-policy operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.get_permission_policy(input)
	return common.execute_aws_command_skeleton({ "waf", "get-permission-policy" }, input)
end

--- AWS waf get-rate-based-rule operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.get_rate_based_rule(input)
	return common.execute_aws_command_skeleton({ "waf", "get-rate-based-rule" }, input)
end

--- AWS waf get-rate-based-rule-managed-keys operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.get_rate_based_rule_managed_keys(input)
	return common.execute_aws_command_skeleton({ "waf", "get-rate-based-rule-managed-keys" }, input)
end

--- AWS waf get-regex-match-set operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.get_regex_match_set(input)
	return common.execute_aws_command_skeleton({ "waf", "get-regex-match-set" }, input)
end

--- AWS waf get-regex-pattern-set operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.get_regex_pattern_set(input)
	return common.execute_aws_command_skeleton({ "waf", "get-regex-pattern-set" }, input)
end

--- AWS waf get-rule operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.get_rule(input)
	return common.execute_aws_command_skeleton({ "waf", "get-rule" }, input)
end

--- AWS waf get-rule-group operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.get_rule_group(input)
	return common.execute_aws_command_skeleton({ "waf", "get-rule-group" }, input)
end

--- AWS waf get-sampled-requests operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.get_sampled_requests(input)
	return common.execute_aws_command_skeleton({ "waf", "get-sampled-requests" }, input)
end

--- AWS waf get-size-constraint-set operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.get_size_constraint_set(input)
	return common.execute_aws_command_skeleton({ "waf", "get-size-constraint-set" }, input)
end

--- AWS waf get-sql-injection-match-set operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.get_sql_injection_match_set(input)
	return common.execute_aws_command_skeleton({ "waf", "get-sql-injection-match-set" }, input)
end

--- AWS waf get-web-acl operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.get_web_acl(input)
	return common.execute_aws_command_skeleton({ "waf", "get-web-acl" }, input)
end

--- AWS waf get-xss-match-set operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.get_xss_match_set(input)
	return common.execute_aws_command_skeleton({ "waf", "get-xss-match-set" }, input)
end

--- AWS waf list-activated-rules-in-rule-group operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.list_activated_rules_in_rule_group(input)
	return common.execute_aws_command_skeleton({ "waf", "list-activated-rules-in-rule-group" }, input)
end

--- AWS waf list-byte-match-sets operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.list_byte_match_sets(input)
	return common.execute_aws_command_skeleton({ "waf", "list-byte-match-sets" }, input)
end

--- AWS waf list-geo-match-sets operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.list_geo_match_sets(input)
	return common.execute_aws_command_skeleton({ "waf", "list-geo-match-sets" }, input)
end

--- AWS waf list-ip-sets operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.list_ip_sets(input)
	return common.execute_aws_command_skeleton({ "waf", "list-ip-sets" }, input)
end

--- AWS waf list-logging-configurations operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.list_logging_configurations(input)
	return common.execute_aws_command_skeleton({ "waf", "list-logging-configurations" }, input)
end

--- AWS waf list-rate-based-rules operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.list_rate_based_rules(input)
	return common.execute_aws_command_skeleton({ "waf", "list-rate-based-rules" }, input)
end

--- AWS waf list-regex-match-sets operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.list_regex_match_sets(input)
	return common.execute_aws_command_skeleton({ "waf", "list-regex-match-sets" }, input)
end

--- AWS waf list-regex-pattern-sets operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.list_regex_pattern_sets(input)
	return common.execute_aws_command_skeleton({ "waf", "list-regex-pattern-sets" }, input)
end

--- AWS waf list-rule-groups operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.list_rule_groups(input)
	return common.execute_aws_command_skeleton({ "waf", "list-rule-groups" }, input)
end

--- AWS waf list-rules operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.list_rules(input)
	return common.execute_aws_command_skeleton({ "waf", "list-rules" }, input)
end

--- AWS waf list-size-constraint-sets operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.list_size_constraint_sets(input)
	return common.execute_aws_command_skeleton({ "waf", "list-size-constraint-sets" }, input)
end

--- AWS waf list-sql-injection-match-sets operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.list_sql_injection_match_sets(input)
	return common.execute_aws_command_skeleton({ "waf", "list-sql-injection-match-sets" }, input)
end

--- AWS waf list-subscribed-rule-groups operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.list_subscribed_rule_groups(input)
	return common.execute_aws_command_skeleton({ "waf", "list-subscribed-rule-groups" }, input)
end

--- AWS waf list-tags-for-resource operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.list_tags_for_resource(input)
	return common.execute_aws_command_skeleton({ "waf", "list-tags-for-resource" }, input)
end

--- AWS waf list-web-acls operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.list_web_acls(input)
	return common.execute_aws_command_skeleton({ "waf", "list-web-acls" }, input)
end

--- AWS waf list-xss-match-sets operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.list_xss_match_sets(input)
	return common.execute_aws_command_skeleton({ "waf", "list-xss-match-sets" }, input)
end

--- AWS waf put-logging-configuration operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.put_logging_configuration(input)
	return common.execute_aws_command_skeleton({ "waf", "put-logging-configuration" }, input)
end

--- AWS waf put-permission-policy operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.put_permission_policy(input)
	return common.execute_aws_command_skeleton({ "waf", "put-permission-policy" }, input)
end

--- AWS waf tag-resource operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.tag_resource(input)
	return common.execute_aws_command_skeleton({ "waf", "tag-resource" }, input)
end

--- AWS waf untag-resource operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.untag_resource(input)
	return common.execute_aws_command_skeleton({ "waf", "untag-resource" }, input)
end

--- AWS waf update-byte-match-set operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.update_byte_match_set(input)
	return common.execute_aws_command_skeleton({ "waf", "update-byte-match-set" }, input)
end

--- AWS waf update-geo-match-set operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.update_geo_match_set(input)
	return common.execute_aws_command_skeleton({ "waf", "update-geo-match-set" }, input)
end

--- AWS waf update-ip-set operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.update_ip_set(input)
	return common.execute_aws_command_skeleton({ "waf", "update-ip-set" }, input)
end

--- AWS waf update-rate-based-rule operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.update_rate_based_rule(input)
	return common.execute_aws_command_skeleton({ "waf", "update-rate-based-rule" }, input)
end

--- AWS waf update-regex-match-set operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.update_regex_match_set(input)
	return common.execute_aws_command_skeleton({ "waf", "update-regex-match-set" }, input)
end

--- AWS waf update-regex-pattern-set operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.update_regex_pattern_set(input)
	return common.execute_aws_command_skeleton({ "waf", "update-regex-pattern-set" }, input)
end

--- AWS waf update-rule operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.update_rule(input)
	return common.execute_aws_command_skeleton({ "waf", "update-rule" }, input)
end

--- AWS waf update-rule-group operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.update_rule_group(input)
	return common.execute_aws_command_skeleton({ "waf", "update-rule-group" }, input)
end

--- AWS waf update-size-constraint-set operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.update_size_constraint_set(input)
	return common.execute_aws_command_skeleton({ "waf", "update-size-constraint-set" }, input)
end

--- AWS waf update-sql-injection-match-set operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.update_sql_injection_match_set(input)
	return common.execute_aws_command_skeleton({ "waf", "update-sql-injection-match-set" }, input)
end

--- AWS waf update-web-acl operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.update_web_acl(input)
	return common.execute_aws_command_skeleton({ "waf", "update-web-acl" }, input)
end

--- AWS waf update-xss-match-set operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.update_xss_match_set(input)
	return common.execute_aws_command_skeleton({ "waf", "update-xss-match-set" }, input)
end

return M
