-- AUTOGENERATED FILE - DO NOT EDIT
-- AWS Service: wellarchitected

local common = require("nvim-aws.common")

--- AWS wellarchitected service functions
local M = {}

--- AWS wellarchitected associate-lenses operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.associate_lenses(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "associate-lenses" }, input, callbacks)
end

--- AWS wellarchitected associate-profiles operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.associate_profiles(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "associate-profiles" }, input, callbacks)
end

--- AWS wellarchitected create-lens-share operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_lens_share(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "create-lens-share" }, input, callbacks)
end

--- AWS wellarchitected create-lens-version operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_lens_version(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "create-lens-version" }, input, callbacks)
end

--- AWS wellarchitected create-milestone operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_milestone(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "create-milestone" }, input, callbacks)
end

--- AWS wellarchitected create-profile operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_profile(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "create-profile" }, input, callbacks)
end

--- AWS wellarchitected create-profile-share operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_profile_share(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "create-profile-share" }, input, callbacks)
end

--- AWS wellarchitected create-review-template operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_review_template(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "create-review-template" }, input, callbacks)
end

--- AWS wellarchitected create-template-share operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_template_share(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "create-template-share" }, input, callbacks)
end

--- AWS wellarchitected create-workload operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_workload(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "create-workload" }, input, callbacks)
end

--- AWS wellarchitected create-workload-share operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_workload_share(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "create-workload-share" }, input, callbacks)
end

--- AWS wellarchitected delete-lens operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_lens(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "delete-lens" }, input, callbacks)
end

--- AWS wellarchitected delete-lens-share operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_lens_share(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "delete-lens-share" }, input, callbacks)
end

--- AWS wellarchitected delete-profile operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_profile(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "delete-profile" }, input, callbacks)
end

--- AWS wellarchitected delete-profile-share operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_profile_share(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "delete-profile-share" }, input, callbacks)
end

--- AWS wellarchitected delete-review-template operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_review_template(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "delete-review-template" }, input, callbacks)
end

--- AWS wellarchitected delete-template-share operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_template_share(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "delete-template-share" }, input, callbacks)
end

--- AWS wellarchitected delete-workload operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_workload(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "delete-workload" }, input, callbacks)
end

--- AWS wellarchitected delete-workload-share operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_workload_share(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "delete-workload-share" }, input, callbacks)
end

--- AWS wellarchitected disassociate-lenses operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.disassociate_lenses(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "disassociate-lenses" }, input, callbacks)
end

--- AWS wellarchitected disassociate-profiles operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.disassociate_profiles(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "disassociate-profiles" }, input, callbacks)
end

--- AWS wellarchitected export-lens operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.export_lens(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "export-lens" }, input, callbacks)
end

--- AWS wellarchitected get-answer operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_answer(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "get-answer" }, input, callbacks)
end

--- AWS wellarchitected get-consolidated-report operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_consolidated_report(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "get-consolidated-report" }, input, callbacks)
end

--- AWS wellarchitected get-global-settings operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_global_settings(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "get-global-settings" }, input, callbacks)
end

--- AWS wellarchitected get-lens operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_lens(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "get-lens" }, input, callbacks)
end

--- AWS wellarchitected get-lens-review operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_lens_review(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "get-lens-review" }, input, callbacks)
end

--- AWS wellarchitected get-lens-review-report operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_lens_review_report(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "get-lens-review-report" }, input, callbacks)
end

--- AWS wellarchitected get-lens-version-difference operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_lens_version_difference(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "get-lens-version-difference" }, input, callbacks)
end

--- AWS wellarchitected get-milestone operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_milestone(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "get-milestone" }, input, callbacks)
end

--- AWS wellarchitected get-profile operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_profile(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "get-profile" }, input, callbacks)
end

--- AWS wellarchitected get-profile-template operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_profile_template(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "get-profile-template" }, input, callbacks)
end

--- AWS wellarchitected get-review-template operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_review_template(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "get-review-template" }, input, callbacks)
end

--- AWS wellarchitected get-review-template-answer operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_review_template_answer(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "get-review-template-answer" }, input, callbacks)
end

--- AWS wellarchitected get-review-template-lens-review operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_review_template_lens_review(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "get-review-template-lens-review" }, input, callbacks)
end

--- AWS wellarchitected get-workload operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_workload(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "get-workload" }, input, callbacks)
end

--- AWS wellarchitected import-lens operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.import_lens(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "import-lens" }, input, callbacks)
end

--- AWS wellarchitected list-answers operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_answers(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "list-answers" }, input, callbacks)
end

--- AWS wellarchitected list-check-details operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_check_details(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "list-check-details" }, input, callbacks)
end

--- AWS wellarchitected list-check-summaries operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_check_summaries(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "list-check-summaries" }, input, callbacks)
end

--- AWS wellarchitected list-lens-review-improvements operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_lens_review_improvements(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "list-lens-review-improvements" }, input, callbacks)
end

--- AWS wellarchitected list-lens-reviews operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_lens_reviews(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "list-lens-reviews" }, input, callbacks)
end

--- AWS wellarchitected list-lens-shares operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_lens_shares(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "list-lens-shares" }, input, callbacks)
end

--- AWS wellarchitected list-lenses operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_lenses(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "list-lenses" }, input, callbacks)
end

--- AWS wellarchitected list-milestones operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_milestones(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "list-milestones" }, input, callbacks)
end

--- AWS wellarchitected list-notifications operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_notifications(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "list-notifications" }, input, callbacks)
end

--- AWS wellarchitected list-profile-notifications operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_profile_notifications(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "list-profile-notifications" }, input, callbacks)
end

--- AWS wellarchitected list-profile-shares operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_profile_shares(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "list-profile-shares" }, input, callbacks)
end

--- AWS wellarchitected list-profiles operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_profiles(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "list-profiles" }, input, callbacks)
end

--- AWS wellarchitected list-review-template-answers operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_review_template_answers(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "list-review-template-answers" }, input, callbacks)
end

--- AWS wellarchitected list-review-templates operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_review_templates(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "list-review-templates" }, input, callbacks)
end

--- AWS wellarchitected list-share-invitations operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_share_invitations(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "list-share-invitations" }, input, callbacks)
end

--- AWS wellarchitected list-tags-for-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_tags_for_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "list-tags-for-resource" }, input, callbacks)
end

--- AWS wellarchitected list-template-shares operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_template_shares(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "list-template-shares" }, input, callbacks)
end

--- AWS wellarchitected list-workload-shares operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_workload_shares(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "list-workload-shares" }, input, callbacks)
end

--- AWS wellarchitected list-workloads operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_workloads(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "list-workloads" }, input, callbacks)
end

--- AWS wellarchitected tag-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.tag_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "tag-resource" }, input, callbacks)
end

--- AWS wellarchitected untag-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.untag_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "untag-resource" }, input, callbacks)
end

--- AWS wellarchitected update-answer operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_answer(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "update-answer" }, input, callbacks)
end

--- AWS wellarchitected update-global-settings operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_global_settings(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "update-global-settings" }, input, callbacks)
end

--- AWS wellarchitected update-integration operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_integration(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "update-integration" }, input, callbacks)
end

--- AWS wellarchitected update-lens-review operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_lens_review(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "update-lens-review" }, input, callbacks)
end

--- AWS wellarchitected update-profile operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_profile(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "update-profile" }, input, callbacks)
end

--- AWS wellarchitected update-review-template operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_review_template(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "update-review-template" }, input, callbacks)
end

--- AWS wellarchitected update-review-template-answer operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_review_template_answer(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "update-review-template-answer" }, input, callbacks)
end

--- AWS wellarchitected update-review-template-lens-review operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_review_template_lens_review(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "update-review-template-lens-review" }, input, callbacks)
end

--- AWS wellarchitected update-share-invitation operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_share_invitation(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "update-share-invitation" }, input, callbacks)
end

--- AWS wellarchitected update-workload operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_workload(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "update-workload" }, input, callbacks)
end

--- AWS wellarchitected update-workload-share operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_workload_share(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "update-workload-share" }, input, callbacks)
end

--- AWS wellarchitected upgrade-lens-review operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.upgrade_lens_review(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "upgrade-lens-review" }, input, callbacks)
end

--- AWS wellarchitected upgrade-profile-version operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.upgrade_profile_version(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "upgrade-profile-version" }, input, callbacks)
end

--- AWS wellarchitected upgrade-review-template-lens-review operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.upgrade_review_template_lens_review(input, callbacks)
	return common.execute_aws_command_skeleton({ "wellarchitected", "upgrade-review-template-lens-review" }, input, callbacks)
end

return M
