-- AUTOGENERATED FILE - DO NOT EDIT
-- AWS Service: iotsitewise

local common = require("nvim-aws.common")

--- AWS iotsitewise service functions
local M = {}

--- AWS iotsitewise associate-assets operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.associate_assets(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "associate-assets" }, input, callbacks)
end

--- AWS iotsitewise associate-time-series-to-asset-property operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.associate_time_series_to_asset_property(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "associate-time-series-to-asset-property" }, input, callbacks)
end

--- AWS iotsitewise batch-associate-project-assets operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.batch_associate_project_assets(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "batch-associate-project-assets" }, input, callbacks)
end

--- AWS iotsitewise batch-disassociate-project-assets operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.batch_disassociate_project_assets(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "batch-disassociate-project-assets" }, input, callbacks)
end

--- AWS iotsitewise batch-get-asset-property-aggregates operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.batch_get_asset_property_aggregates(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "batch-get-asset-property-aggregates" }, input, callbacks)
end

--- AWS iotsitewise batch-get-asset-property-value operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.batch_get_asset_property_value(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "batch-get-asset-property-value" }, input, callbacks)
end

--- AWS iotsitewise batch-get-asset-property-value-history operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.batch_get_asset_property_value_history(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "batch-get-asset-property-value-history" }, input, callbacks)
end

--- AWS iotsitewise batch-put-asset-property-value operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.batch_put_asset_property_value(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "batch-put-asset-property-value" }, input, callbacks)
end

--- AWS iotsitewise create-access-policy operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_access_policy(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "create-access-policy" }, input, callbacks)
end

--- AWS iotsitewise create-asset operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_asset(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "create-asset" }, input, callbacks)
end

--- AWS iotsitewise create-asset-model operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_asset_model(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "create-asset-model" }, input, callbacks)
end

--- AWS iotsitewise create-asset-model-composite-model operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_asset_model_composite_model(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "create-asset-model-composite-model" }, input, callbacks)
end

--- AWS iotsitewise create-bulk-import-job operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_bulk_import_job(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "create-bulk-import-job" }, input, callbacks)
end

--- AWS iotsitewise create-dashboard operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_dashboard(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "create-dashboard" }, input, callbacks)
end

--- AWS iotsitewise create-dataset operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_dataset(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "create-dataset" }, input, callbacks)
end

--- AWS iotsitewise create-gateway operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_gateway(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "create-gateway" }, input, callbacks)
end

--- AWS iotsitewise create-portal operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_portal(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "create-portal" }, input, callbacks)
end

--- AWS iotsitewise create-project operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_project(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "create-project" }, input, callbacks)
end

--- AWS iotsitewise delete-access-policy operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_access_policy(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "delete-access-policy" }, input, callbacks)
end

--- AWS iotsitewise delete-asset operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_asset(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "delete-asset" }, input, callbacks)
end

--- AWS iotsitewise delete-asset-model operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_asset_model(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "delete-asset-model" }, input, callbacks)
end

--- AWS iotsitewise delete-asset-model-composite-model operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_asset_model_composite_model(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "delete-asset-model-composite-model" }, input, callbacks)
end

--- AWS iotsitewise delete-dashboard operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_dashboard(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "delete-dashboard" }, input, callbacks)
end

--- AWS iotsitewise delete-dataset operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_dataset(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "delete-dataset" }, input, callbacks)
end

--- AWS iotsitewise delete-gateway operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_gateway(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "delete-gateway" }, input, callbacks)
end

--- AWS iotsitewise delete-portal operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_portal(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "delete-portal" }, input, callbacks)
end

--- AWS iotsitewise delete-project operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_project(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "delete-project" }, input, callbacks)
end

--- AWS iotsitewise delete-time-series operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_time_series(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "delete-time-series" }, input, callbacks)
end

--- AWS iotsitewise describe-access-policy operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_access_policy(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "describe-access-policy" }, input, callbacks)
end

--- AWS iotsitewise describe-action operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_action(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "describe-action" }, input, callbacks)
end

--- AWS iotsitewise describe-asset operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_asset(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "describe-asset" }, input, callbacks)
end

--- AWS iotsitewise describe-asset-composite-model operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_asset_composite_model(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "describe-asset-composite-model" }, input, callbacks)
end

--- AWS iotsitewise describe-asset-model operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_asset_model(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "describe-asset-model" }, input, callbacks)
end

--- AWS iotsitewise describe-asset-model-composite-model operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_asset_model_composite_model(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "describe-asset-model-composite-model" }, input, callbacks)
end

--- AWS iotsitewise describe-asset-property operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_asset_property(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "describe-asset-property" }, input, callbacks)
end

--- AWS iotsitewise describe-bulk-import-job operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_bulk_import_job(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "describe-bulk-import-job" }, input, callbacks)
end

--- AWS iotsitewise describe-dashboard operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_dashboard(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "describe-dashboard" }, input, callbacks)
end

--- AWS iotsitewise describe-dataset operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_dataset(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "describe-dataset" }, input, callbacks)
end

--- AWS iotsitewise describe-default-encryption-configuration operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_default_encryption_configuration(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "describe-default-encryption-configuration" }, input, callbacks)
end

--- AWS iotsitewise describe-gateway operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_gateway(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "describe-gateway" }, input, callbacks)
end

--- AWS iotsitewise describe-gateway-capability-configuration operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_gateway_capability_configuration(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "describe-gateway-capability-configuration" }, input, callbacks)
end

--- AWS iotsitewise describe-logging-options operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_logging_options(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "describe-logging-options" }, input, callbacks)
end

--- AWS iotsitewise describe-portal operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_portal(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "describe-portal" }, input, callbacks)
end

--- AWS iotsitewise describe-project operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_project(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "describe-project" }, input, callbacks)
end

--- AWS iotsitewise describe-storage-configuration operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_storage_configuration(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "describe-storage-configuration" }, input, callbacks)
end

--- AWS iotsitewise describe-time-series operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_time_series(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "describe-time-series" }, input, callbacks)
end

--- AWS iotsitewise disassociate-assets operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.disassociate_assets(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "disassociate-assets" }, input, callbacks)
end

--- AWS iotsitewise disassociate-time-series-from-asset-property operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.disassociate_time_series_from_asset_property(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "disassociate-time-series-from-asset-property" }, input, callbacks)
end

--- AWS iotsitewise execute-action operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.execute_action(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "execute-action" }, input, callbacks)
end

--- AWS iotsitewise execute-query operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.execute_query(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "execute-query" }, input, callbacks)
end

--- AWS iotsitewise get-asset-property-aggregates operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_asset_property_aggregates(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "get-asset-property-aggregates" }, input, callbacks)
end

--- AWS iotsitewise get-asset-property-value operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_asset_property_value(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "get-asset-property-value" }, input, callbacks)
end

--- AWS iotsitewise get-asset-property-value-history operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_asset_property_value_history(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "get-asset-property-value-history" }, input, callbacks)
end

--- AWS iotsitewise get-interpolated-asset-property-values operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_interpolated_asset_property_values(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "get-interpolated-asset-property-values" }, input, callbacks)
end

--- AWS iotsitewise list-access-policies operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_access_policies(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "list-access-policies" }, input, callbacks)
end

--- AWS iotsitewise list-actions operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_actions(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "list-actions" }, input, callbacks)
end

--- AWS iotsitewise list-asset-model-composite-models operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_asset_model_composite_models(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "list-asset-model-composite-models" }, input, callbacks)
end

--- AWS iotsitewise list-asset-model-properties operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_asset_model_properties(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "list-asset-model-properties" }, input, callbacks)
end

--- AWS iotsitewise list-asset-models operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_asset_models(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "list-asset-models" }, input, callbacks)
end

--- AWS iotsitewise list-asset-properties operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_asset_properties(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "list-asset-properties" }, input, callbacks)
end

--- AWS iotsitewise list-asset-relationships operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_asset_relationships(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "list-asset-relationships" }, input, callbacks)
end

--- AWS iotsitewise list-assets operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_assets(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "list-assets" }, input, callbacks)
end

--- AWS iotsitewise list-associated-assets operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_associated_assets(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "list-associated-assets" }, input, callbacks)
end

--- AWS iotsitewise list-bulk-import-jobs operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_bulk_import_jobs(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "list-bulk-import-jobs" }, input, callbacks)
end

--- AWS iotsitewise list-composition-relationships operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_composition_relationships(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "list-composition-relationships" }, input, callbacks)
end

--- AWS iotsitewise list-dashboards operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_dashboards(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "list-dashboards" }, input, callbacks)
end

--- AWS iotsitewise list-datasets operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_datasets(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "list-datasets" }, input, callbacks)
end

--- AWS iotsitewise list-gateways operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_gateways(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "list-gateways" }, input, callbacks)
end

--- AWS iotsitewise list-portals operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_portals(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "list-portals" }, input, callbacks)
end

--- AWS iotsitewise list-project-assets operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_project_assets(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "list-project-assets" }, input, callbacks)
end

--- AWS iotsitewise list-projects operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_projects(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "list-projects" }, input, callbacks)
end

--- AWS iotsitewise list-tags-for-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_tags_for_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "list-tags-for-resource" }, input, callbacks)
end

--- AWS iotsitewise list-time-series operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_time_series(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "list-time-series" }, input, callbacks)
end

--- AWS iotsitewise put-default-encryption-configuration operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.put_default_encryption_configuration(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "put-default-encryption-configuration" }, input, callbacks)
end

--- AWS iotsitewise put-logging-options operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.put_logging_options(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "put-logging-options" }, input, callbacks)
end

--- AWS iotsitewise put-storage-configuration operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.put_storage_configuration(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "put-storage-configuration" }, input, callbacks)
end

--- AWS iotsitewise tag-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.tag_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "tag-resource" }, input, callbacks)
end

--- AWS iotsitewise untag-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.untag_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "untag-resource" }, input, callbacks)
end

--- AWS iotsitewise update-access-policy operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_access_policy(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "update-access-policy" }, input, callbacks)
end

--- AWS iotsitewise update-asset operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_asset(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "update-asset" }, input, callbacks)
end

--- AWS iotsitewise update-asset-model operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_asset_model(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "update-asset-model" }, input, callbacks)
end

--- AWS iotsitewise update-asset-model-composite-model operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_asset_model_composite_model(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "update-asset-model-composite-model" }, input, callbacks)
end

--- AWS iotsitewise update-asset-property operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_asset_property(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "update-asset-property" }, input, callbacks)
end

--- AWS iotsitewise update-dashboard operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_dashboard(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "update-dashboard" }, input, callbacks)
end

--- AWS iotsitewise update-dataset operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_dataset(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "update-dataset" }, input, callbacks)
end

--- AWS iotsitewise update-gateway operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_gateway(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "update-gateway" }, input, callbacks)
end

--- AWS iotsitewise update-gateway-capability-configuration operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_gateway_capability_configuration(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "update-gateway-capability-configuration" }, input, callbacks)
end

--- AWS iotsitewise update-portal operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_portal(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "update-portal" }, input, callbacks)
end

--- AWS iotsitewise update-project operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_project(input, callbacks)
	return common.execute_aws_command_skeleton({ "iotsitewise", "update-project" }, input, callbacks)
end

--- AWS iotsitewise wait operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.wait(input, callbacks)
	return common.execute_aws_command({ "iotsitewise", "wait" }, input, callbacks)
end

return M
