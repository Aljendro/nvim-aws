-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: iotsecuretunneling

local common = require("nvim-aws.wrappers.common")

--- AWS IOTSECURETUNNELING service functions
local M = {}

--- Closes a tunnel identified by the unique tunnel id
--- @param input table|nil The input table for the close_tunnel command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.close_tunnel(input)
	return common.execute_aws_command_with_input({ "iotsecuretunneling", "close-tunnel" }, input)
end

--- Gets information about a tunnel identified by the unique tunnel id
--- @param input table|nil The input table for the describe_tunnel command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_tunnel(input)
	return common.execute_aws_command_with_input({ "iotsecuretunneling", "describe-tunnel" }, input)
end

--- Lists the tags for the specified resource
--- @param input table|nil The input table for the list_tags_for_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_tags_for_resource(input)
	return common.execute_aws_command_with_input({ "iotsecuretunneling", "list-tags-for-resource" }, input)
end

--- List all tunnels for an Amazon Web Services account
--- @param input table|nil The input table for the list_tunnels command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_tunnels(input)
	return common.execute_aws_command_with_input({ "iotsecuretunneling", "list-tunnels" }, input)
end

--- Creates a new tunnel, and returns two client access tokens for clients to use to connect to the IoT Secure Tunneling proxy server
--- @param input table|nil The input table for the open_tunnel command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.open_tunnel(input)
	return common.execute_aws_command_with_input({ "iotsecuretunneling", "open-tunnel" }, input)
end

--- Revokes the current client access token (CAT) and returns new CAT for clients to use when reconnecting to secure tunneling to access the same tunnel
--- @param input table|nil The input table for the rotate_tunnel_access_token command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.rotate_tunnel_access_token(input)
	return common.execute_aws_command_with_input({ "iotsecuretunneling", "rotate-tunnel-access-token" }, input)
end

--- A resource tag
--- @param input table|nil The input table for the tag_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.tag_resource(input)
	return common.execute_aws_command_with_input({ "iotsecuretunneling", "tag-resource" }, input)
end

--- Removes a tag from a resource
--- @param input table|nil The input table for the untag_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.untag_resource(input)
	return common.execute_aws_command_with_input({ "iotsecuretunneling", "untag-resource" }, input)
end

return M
