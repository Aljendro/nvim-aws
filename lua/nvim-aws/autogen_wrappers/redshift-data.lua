-- AUTOGENERATED FILE - DO NOT EDIT
-- AWS Service: redshift-data

local common = require("nvim-aws.common")

--- AWS redshift-data service functions
local M = {}

--- AWS redshift-data batch-execute-statement operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.batch_execute_statement(input, callbacks)
	return common.execute_aws_command_skeleton({ "redshift-data", "batch-execute-statement" }, input, callbacks)
end

--- AWS redshift-data cancel-statement operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.cancel_statement(input, callbacks)
	return common.execute_aws_command_skeleton({ "redshift-data", "cancel-statement" }, input, callbacks)
end

--- AWS redshift-data describe-statement operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_statement(input, callbacks)
	return common.execute_aws_command_skeleton({ "redshift-data", "describe-statement" }, input, callbacks)
end

--- AWS redshift-data describe-table operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_table(input, callbacks)
	return common.execute_aws_command_skeleton({ "redshift-data", "describe-table" }, input, callbacks)
end

--- AWS redshift-data execute-statement operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.execute_statement(input, callbacks)
	return common.execute_aws_command_skeleton({ "redshift-data", "execute-statement" }, input, callbacks)
end

--- AWS redshift-data get-statement-result operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_statement_result(input, callbacks)
	return common.execute_aws_command_skeleton({ "redshift-data", "get-statement-result" }, input, callbacks)
end

--- AWS redshift-data get-statement-result-v2 operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_statement_result_v2(input, callbacks)
	return common.execute_aws_command_skeleton({ "redshift-data", "get-statement-result-v2" }, input, callbacks)
end

--- AWS redshift-data list-databases operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_databases(input, callbacks)
	return common.execute_aws_command_skeleton({ "redshift-data", "list-databases" }, input, callbacks)
end

--- AWS redshift-data list-schemas operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_schemas(input, callbacks)
	return common.execute_aws_command_skeleton({ "redshift-data", "list-schemas" }, input, callbacks)
end

--- AWS redshift-data list-statements operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_statements(input, callbacks)
	return common.execute_aws_command_skeleton({ "redshift-data", "list-statements" }, input, callbacks)
end

--- AWS redshift-data list-tables operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_tables(input, callbacks)
	return common.execute_aws_command_skeleton({ "redshift-data", "list-tables" }, input, callbacks)
end

return M
