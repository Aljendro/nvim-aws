-- AUTOGENERATED FILE - DO NOT EDIT
-- AWS Service: dataexchange

local common = require("nvim-aws.common")

--- AWS dataexchange service functions
local M = {}

--- AWS dataexchange accept-data-grant operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.accept_data_grant(input, callbacks)
	return common.execute_aws_command_skeleton({ "dataexchange", "accept-data-grant" }, input, callbacks)
end

--- AWS dataexchange cancel-job operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.cancel_job(input, callbacks)
	return common.execute_aws_command_skeleton({ "dataexchange", "cancel-job" }, input, callbacks)
end

--- AWS dataexchange create-data-grant operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_data_grant(input, callbacks)
	return common.execute_aws_command_skeleton({ "dataexchange", "create-data-grant" }, input, callbacks)
end

--- AWS dataexchange create-data-set operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_data_set(input, callbacks)
	return common.execute_aws_command_skeleton({ "dataexchange", "create-data-set" }, input, callbacks)
end

--- AWS dataexchange create-event-action operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_event_action(input, callbacks)
	return common.execute_aws_command_skeleton({ "dataexchange", "create-event-action" }, input, callbacks)
end

--- AWS dataexchange create-job operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_job(input, callbacks)
	return common.execute_aws_command_skeleton({ "dataexchange", "create-job" }, input, callbacks)
end

--- AWS dataexchange create-revision operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_revision(input, callbacks)
	return common.execute_aws_command_skeleton({ "dataexchange", "create-revision" }, input, callbacks)
end

--- AWS dataexchange delete-asset operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_asset(input, callbacks)
	return common.execute_aws_command_skeleton({ "dataexchange", "delete-asset" }, input, callbacks)
end

--- AWS dataexchange delete-data-grant operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_data_grant(input, callbacks)
	return common.execute_aws_command_skeleton({ "dataexchange", "delete-data-grant" }, input, callbacks)
end

--- AWS dataexchange delete-data-set operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_data_set(input, callbacks)
	return common.execute_aws_command_skeleton({ "dataexchange", "delete-data-set" }, input, callbacks)
end

--- AWS dataexchange delete-event-action operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_event_action(input, callbacks)
	return common.execute_aws_command_skeleton({ "dataexchange", "delete-event-action" }, input, callbacks)
end

--- AWS dataexchange delete-revision operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_revision(input, callbacks)
	return common.execute_aws_command_skeleton({ "dataexchange", "delete-revision" }, input, callbacks)
end

--- AWS dataexchange get-asset operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_asset(input, callbacks)
	return common.execute_aws_command_skeleton({ "dataexchange", "get-asset" }, input, callbacks)
end

--- AWS dataexchange get-data-grant operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_data_grant(input, callbacks)
	return common.execute_aws_command_skeleton({ "dataexchange", "get-data-grant" }, input, callbacks)
end

--- AWS dataexchange get-data-set operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_data_set(input, callbacks)
	return common.execute_aws_command_skeleton({ "dataexchange", "get-data-set" }, input, callbacks)
end

--- AWS dataexchange get-event-action operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_event_action(input, callbacks)
	return common.execute_aws_command_skeleton({ "dataexchange", "get-event-action" }, input, callbacks)
end

--- AWS dataexchange get-job operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_job(input, callbacks)
	return common.execute_aws_command_skeleton({ "dataexchange", "get-job" }, input, callbacks)
end

--- AWS dataexchange get-received-data-grant operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_received_data_grant(input, callbacks)
	return common.execute_aws_command_skeleton({ "dataexchange", "get-received-data-grant" }, input, callbacks)
end

--- AWS dataexchange get-revision operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_revision(input, callbacks)
	return common.execute_aws_command_skeleton({ "dataexchange", "get-revision" }, input, callbacks)
end

--- AWS dataexchange list-data-grants operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_data_grants(input, callbacks)
	return common.execute_aws_command_skeleton({ "dataexchange", "list-data-grants" }, input, callbacks)
end

--- AWS dataexchange list-data-set-revisions operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_data_set_revisions(input, callbacks)
	return common.execute_aws_command_skeleton({ "dataexchange", "list-data-set-revisions" }, input, callbacks)
end

--- AWS dataexchange list-data-sets operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_data_sets(input, callbacks)
	return common.execute_aws_command_skeleton({ "dataexchange", "list-data-sets" }, input, callbacks)
end

--- AWS dataexchange list-event-actions operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_event_actions(input, callbacks)
	return common.execute_aws_command_skeleton({ "dataexchange", "list-event-actions" }, input, callbacks)
end

--- AWS dataexchange list-jobs operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_jobs(input, callbacks)
	return common.execute_aws_command_skeleton({ "dataexchange", "list-jobs" }, input, callbacks)
end

--- AWS dataexchange list-received-data-grants operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_received_data_grants(input, callbacks)
	return common.execute_aws_command_skeleton({ "dataexchange", "list-received-data-grants" }, input, callbacks)
end

--- AWS dataexchange list-revision-assets operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_revision_assets(input, callbacks)
	return common.execute_aws_command_skeleton({ "dataexchange", "list-revision-assets" }, input, callbacks)
end

--- AWS dataexchange list-tags-for-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_tags_for_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "dataexchange", "list-tags-for-resource" }, input, callbacks)
end

--- AWS dataexchange revoke-revision operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.revoke_revision(input, callbacks)
	return common.execute_aws_command_skeleton({ "dataexchange", "revoke-revision" }, input, callbacks)
end

--- AWS dataexchange send-api-asset operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.send_api_asset(input, callbacks)
	return common.execute_aws_command_skeleton({ "dataexchange", "send-api-asset" }, input, callbacks)
end

--- AWS dataexchange send-data-set-notification operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.send_data_set_notification(input, callbacks)
	return common.execute_aws_command_skeleton({ "dataexchange", "send-data-set-notification" }, input, callbacks)
end

--- AWS dataexchange start-job operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.start_job(input, callbacks)
	return common.execute_aws_command_skeleton({ "dataexchange", "start-job" }, input, callbacks)
end

--- AWS dataexchange tag-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.tag_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "dataexchange", "tag-resource" }, input, callbacks)
end

--- AWS dataexchange untag-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.untag_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "dataexchange", "untag-resource" }, input, callbacks)
end

--- AWS dataexchange update-asset operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_asset(input, callbacks)
	return common.execute_aws_command_skeleton({ "dataexchange", "update-asset" }, input, callbacks)
end

--- AWS dataexchange update-data-set operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_data_set(input, callbacks)
	return common.execute_aws_command_skeleton({ "dataexchange", "update-data-set" }, input, callbacks)
end

--- AWS dataexchange update-event-action operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_event_action(input, callbacks)
	return common.execute_aws_command_skeleton({ "dataexchange", "update-event-action" }, input, callbacks)
end

--- AWS dataexchange update-revision operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_revision(input, callbacks)
	return common.execute_aws_command_skeleton({ "dataexchange", "update-revision" }, input, callbacks)
end

return M
