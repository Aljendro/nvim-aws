-- AUTOGENERATED FILE - DO NOT EDIT
-- AWS Service: qldb

local common = require("nvim-aws.common")

--- AWS qldb service functions
local M = {}

--- AWS qldb cancel-journal-kinesis-stream operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.cancel_journal_kinesis_stream(input, callbacks)
	return common.execute_aws_command_skeleton({ "qldb", "cancel-journal-kinesis-stream" }, input, callbacks)
end

--- AWS qldb create-ledger operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_ledger(input, callbacks)
	return common.execute_aws_command_skeleton({ "qldb", "create-ledger" }, input, callbacks)
end

--- AWS qldb delete-ledger operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_ledger(input, callbacks)
	return common.execute_aws_command_skeleton({ "qldb", "delete-ledger" }, input, callbacks)
end

--- AWS qldb describe-journal-kinesis-stream operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_journal_kinesis_stream(input, callbacks)
	return common.execute_aws_command_skeleton({ "qldb", "describe-journal-kinesis-stream" }, input, callbacks)
end

--- AWS qldb describe-journal-s3-export operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_journal_s3_export(input, callbacks)
	return common.execute_aws_command_skeleton({ "qldb", "describe-journal-s3-export" }, input, callbacks)
end

--- AWS qldb describe-ledger operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_ledger(input, callbacks)
	return common.execute_aws_command_skeleton({ "qldb", "describe-ledger" }, input, callbacks)
end

--- AWS qldb export-journal-to-s3 operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.export_journal_to_s3(input, callbacks)
	return common.execute_aws_command_skeleton({ "qldb", "export-journal-to-s3" }, input, callbacks)
end

--- AWS qldb get-block operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_block(input, callbacks)
	return common.execute_aws_command_skeleton({ "qldb", "get-block" }, input, callbacks)
end

--- AWS qldb get-digest operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_digest(input, callbacks)
	return common.execute_aws_command_skeleton({ "qldb", "get-digest" }, input, callbacks)
end

--- AWS qldb get-revision operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_revision(input, callbacks)
	return common.execute_aws_command_skeleton({ "qldb", "get-revision" }, input, callbacks)
end

--- AWS qldb list-journal-kinesis-streams-for-ledger operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_journal_kinesis_streams_for_ledger(input, callbacks)
	return common.execute_aws_command_skeleton({ "qldb", "list-journal-kinesis-streams-for-ledger" }, input, callbacks)
end

--- AWS qldb list-journal-s3-exports operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_journal_s3_exports(input, callbacks)
	return common.execute_aws_command_skeleton({ "qldb", "list-journal-s3-exports" }, input, callbacks)
end

--- AWS qldb list-journal-s3-exports-for-ledger operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_journal_s3_exports_for_ledger(input, callbacks)
	return common.execute_aws_command_skeleton({ "qldb", "list-journal-s3-exports-for-ledger" }, input, callbacks)
end

--- AWS qldb list-ledgers operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_ledgers(input, callbacks)
	return common.execute_aws_command_skeleton({ "qldb", "list-ledgers" }, input, callbacks)
end

--- AWS qldb list-tags-for-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_tags_for_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "qldb", "list-tags-for-resource" }, input, callbacks)
end

--- AWS qldb stream-journal-to-kinesis operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.stream_journal_to_kinesis(input, callbacks)
	return common.execute_aws_command_skeleton({ "qldb", "stream-journal-to-kinesis" }, input, callbacks)
end

--- AWS qldb tag-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.tag_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "qldb", "tag-resource" }, input, callbacks)
end

--- AWS qldb untag-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.untag_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "qldb", "untag-resource" }, input, callbacks)
end

--- AWS qldb update-ledger operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_ledger(input, callbacks)
	return common.execute_aws_command_skeleton({ "qldb", "update-ledger" }, input, callbacks)
end

--- AWS qldb update-ledger-permissions-mode operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_ledger_permissions_mode(input, callbacks)
	return common.execute_aws_command_skeleton({ "qldb", "update-ledger-permissions-mode" }, input, callbacks)
end

return M
