-- AUTOGENERATED FILE - DO NOT EDIT
-- AWS Service: organizations

local common = require("nvim-aws.common")

--- AWS organizations service functions
local M = {}

--- AWS organizations accept-handshake operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.accept_handshake(input, callbacks)
	return common.execute_aws_command_skeleton({ "organizations", "accept-handshake" }, input, callbacks)
end

--- AWS organizations attach-policy operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.attach_policy(input, callbacks)
	return common.execute_aws_command_skeleton({ "organizations", "attach-policy" }, input, callbacks)
end

--- AWS organizations cancel-handshake operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.cancel_handshake(input, callbacks)
	return common.execute_aws_command_skeleton({ "organizations", "cancel-handshake" }, input, callbacks)
end

--- AWS organizations close-account operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.close_account(input, callbacks)
	return common.execute_aws_command_skeleton({ "organizations", "close-account" }, input, callbacks)
end

--- AWS organizations create-account operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_account(input, callbacks)
	return common.execute_aws_command_skeleton({ "organizations", "create-account" }, input, callbacks)
end

--- AWS organizations create-gov-cloud-account operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_gov_cloud_account(input, callbacks)
	return common.execute_aws_command_skeleton({ "organizations", "create-gov-cloud-account" }, input, callbacks)
end

--- AWS organizations create-organization operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_organization(input, callbacks)
	return common.execute_aws_command_skeleton({ "organizations", "create-organization" }, input, callbacks)
end

--- AWS organizations create-organizational-unit operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_organizational_unit(input, callbacks)
	return common.execute_aws_command_skeleton({ "organizations", "create-organizational-unit" }, input, callbacks)
end

--- AWS organizations create-policy operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_policy(input, callbacks)
	return common.execute_aws_command_skeleton({ "organizations", "create-policy" }, input, callbacks)
end

--- AWS organizations decline-handshake operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.decline_handshake(input, callbacks)
	return common.execute_aws_command_skeleton({ "organizations", "decline-handshake" }, input, callbacks)
end

--- AWS organizations delete-organization operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_organization(input, callbacks)
	return common.execute_aws_command_skeleton({ "organizations", "delete-organization" }, input, callbacks)
end

--- AWS organizations delete-organizational-unit operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_organizational_unit(input, callbacks)
	return common.execute_aws_command_skeleton({ "organizations", "delete-organizational-unit" }, input, callbacks)
end

--- AWS organizations delete-policy operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_policy(input, callbacks)
	return common.execute_aws_command_skeleton({ "organizations", "delete-policy" }, input, callbacks)
end

--- AWS organizations delete-resource-policy operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_resource_policy(input, callbacks)
	return common.execute_aws_command_skeleton({ "organizations", "delete-resource-policy" }, input, callbacks)
end

--- AWS organizations deregister-delegated-administrator operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.deregister_delegated_administrator(input, callbacks)
	return common.execute_aws_command_skeleton({ "organizations", "deregister-delegated-administrator" }, input, callbacks)
end

--- AWS organizations describe-account operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_account(input, callbacks)
	return common.execute_aws_command_skeleton({ "organizations", "describe-account" }, input, callbacks)
end

--- AWS organizations describe-create-account-status operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_create_account_status(input, callbacks)
	return common.execute_aws_command_skeleton({ "organizations", "describe-create-account-status" }, input, callbacks)
end

--- AWS organizations describe-effective-policy operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_effective_policy(input, callbacks)
	return common.execute_aws_command_skeleton({ "organizations", "describe-effective-policy" }, input, callbacks)
end

--- AWS organizations describe-handshake operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_handshake(input, callbacks)
	return common.execute_aws_command_skeleton({ "organizations", "describe-handshake" }, input, callbacks)
end

--- AWS organizations describe-organization operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_organization(input, callbacks)
	return common.execute_aws_command_skeleton({ "organizations", "describe-organization" }, input, callbacks)
end

--- AWS organizations describe-organizational-unit operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_organizational_unit(input, callbacks)
	return common.execute_aws_command_skeleton({ "organizations", "describe-organizational-unit" }, input, callbacks)
end

--- AWS organizations describe-policy operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_policy(input, callbacks)
	return common.execute_aws_command_skeleton({ "organizations", "describe-policy" }, input, callbacks)
end

--- AWS organizations describe-resource-policy operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.describe_resource_policy(input, callbacks)
	return common.execute_aws_command_skeleton({ "organizations", "describe-resource-policy" }, input, callbacks)
end

--- AWS organizations detach-policy operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.detach_policy(input, callbacks)
	return common.execute_aws_command_skeleton({ "organizations", "detach-policy" }, input, callbacks)
end

--- AWS organizations disable-aws-service-access operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.disable_aws_service_access(input, callbacks)
	return common.execute_aws_command_skeleton({ "organizations", "disable-aws-service-access" }, input, callbacks)
end

--- AWS organizations disable-policy-type operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.disable_policy_type(input, callbacks)
	return common.execute_aws_command_skeleton({ "organizations", "disable-policy-type" }, input, callbacks)
end

--- AWS organizations enable-all-features operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.enable_all_features(input, callbacks)
	return common.execute_aws_command_skeleton({ "organizations", "enable-all-features" }, input, callbacks)
end

--- AWS organizations enable-aws-service-access operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.enable_aws_service_access(input, callbacks)
	return common.execute_aws_command_skeleton({ "organizations", "enable-aws-service-access" }, input, callbacks)
end

--- AWS organizations enable-policy-type operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.enable_policy_type(input, callbacks)
	return common.execute_aws_command_skeleton({ "organizations", "enable-policy-type" }, input, callbacks)
end

--- AWS organizations invite-account-to-organization operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.invite_account_to_organization(input, callbacks)
	return common.execute_aws_command_skeleton({ "organizations", "invite-account-to-organization" }, input, callbacks)
end

--- AWS organizations leave-organization operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.leave_organization(input, callbacks)
	return common.execute_aws_command_skeleton({ "organizations", "leave-organization" }, input, callbacks)
end

--- AWS organizations list-accounts operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_accounts(input, callbacks)
	return common.execute_aws_command_skeleton({ "organizations", "list-accounts" }, input, callbacks)
end

--- AWS organizations list-accounts-for-parent operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_accounts_for_parent(input, callbacks)
	return common.execute_aws_command_skeleton({ "organizations", "list-accounts-for-parent" }, input, callbacks)
end

--- AWS organizations list-aws-service-access-for-organization operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_aws_service_access_for_organization(input, callbacks)
	return common.execute_aws_command_skeleton({ "organizations", "list-aws-service-access-for-organization" }, input, callbacks)
end

--- AWS organizations list-children operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_children(input, callbacks)
	return common.execute_aws_command_skeleton({ "organizations", "list-children" }, input, callbacks)
end

--- AWS organizations list-create-account-status operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_create_account_status(input, callbacks)
	return common.execute_aws_command_skeleton({ "organizations", "list-create-account-status" }, input, callbacks)
end

--- AWS organizations list-delegated-administrators operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_delegated_administrators(input, callbacks)
	return common.execute_aws_command_skeleton({ "organizations", "list-delegated-administrators" }, input, callbacks)
end

--- AWS organizations list-delegated-services-for-account operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_delegated_services_for_account(input, callbacks)
	return common.execute_aws_command_skeleton({ "organizations", "list-delegated-services-for-account" }, input, callbacks)
end

--- AWS organizations list-handshakes-for-account operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_handshakes_for_account(input, callbacks)
	return common.execute_aws_command_skeleton({ "organizations", "list-handshakes-for-account" }, input, callbacks)
end

--- AWS organizations list-handshakes-for-organization operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_handshakes_for_organization(input, callbacks)
	return common.execute_aws_command_skeleton({ "organizations", "list-handshakes-for-organization" }, input, callbacks)
end

--- AWS organizations list-organizational-units-for-parent operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_organizational_units_for_parent(input, callbacks)
	return common.execute_aws_command_skeleton({ "organizations", "list-organizational-units-for-parent" }, input, callbacks)
end

--- AWS organizations list-parents operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_parents(input, callbacks)
	return common.execute_aws_command_skeleton({ "organizations", "list-parents" }, input, callbacks)
end

--- AWS organizations list-policies operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_policies(input, callbacks)
	return common.execute_aws_command_skeleton({ "organizations", "list-policies" }, input, callbacks)
end

--- AWS organizations list-policies-for-target operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_policies_for_target(input, callbacks)
	return common.execute_aws_command_skeleton({ "organizations", "list-policies-for-target" }, input, callbacks)
end

--- AWS organizations list-roots operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_roots(input, callbacks)
	return common.execute_aws_command_skeleton({ "organizations", "list-roots" }, input, callbacks)
end

--- AWS organizations list-tags-for-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_tags_for_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "organizations", "list-tags-for-resource" }, input, callbacks)
end

--- AWS organizations list-targets-for-policy operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_targets_for_policy(input, callbacks)
	return common.execute_aws_command_skeleton({ "organizations", "list-targets-for-policy" }, input, callbacks)
end

--- AWS organizations move-account operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.move_account(input, callbacks)
	return common.execute_aws_command_skeleton({ "organizations", "move-account" }, input, callbacks)
end

--- AWS organizations put-resource-policy operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.put_resource_policy(input, callbacks)
	return common.execute_aws_command_skeleton({ "organizations", "put-resource-policy" }, input, callbacks)
end

--- AWS organizations register-delegated-administrator operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.register_delegated_administrator(input, callbacks)
	return common.execute_aws_command_skeleton({ "organizations", "register-delegated-administrator" }, input, callbacks)
end

--- AWS organizations remove-account-from-organization operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.remove_account_from_organization(input, callbacks)
	return common.execute_aws_command_skeleton({ "organizations", "remove-account-from-organization" }, input, callbacks)
end

--- AWS organizations tag-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.tag_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "organizations", "tag-resource" }, input, callbacks)
end

--- AWS organizations untag-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.untag_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "organizations", "untag-resource" }, input, callbacks)
end

--- AWS organizations update-organizational-unit operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_organizational_unit(input, callbacks)
	return common.execute_aws_command_skeleton({ "organizations", "update-organizational-unit" }, input, callbacks)
end

--- AWS organizations update-policy operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_policy(input, callbacks)
	return common.execute_aws_command_skeleton({ "organizations", "update-policy" }, input, callbacks)
end

return M
