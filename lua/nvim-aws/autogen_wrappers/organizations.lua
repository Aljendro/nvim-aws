-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-07 21:36:04
-- AWS Service: organizations

local common = require("nvim-aws.wrappers.common")

--- AWS ORGANIZATIONS service functions
local M = {}

--- Sends a response to the originator of a handshake agreeing to the action proposed by the handshake request
--- @param input table The input table for the accept_handshake command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.accept_handshake(input)
	return common.execute_aws_command_with_input({ "organizations", "accept-handshake" }, input)
end

--- Attaches a policy to a root, an organizational unit (OU), or an individual account
--- @param input table The input table for the attach_policy command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.attach_policy(input)
	return common.execute_aws_command_with_input({ "organizations", "attach-policy" }, input)
end

--- Cancels a handshake
--- @param input table The input table for the cancel_handshake command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.cancel_handshake(input)
	return common.execute_aws_command_with_input({ "organizations", "cancel-handshake" }, input)
end

--- Closes an Amazon Web Services member account within an organization
--- @param input table The input table for the close_account command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.close_account(input)
	return common.execute_aws_command_with_input({ "organizations", "close-account" }, input)
end

--- Creates an Amazon Web Services account that is automatically a member of the organization whose credentials made the request
--- @param input table The input table for the create_account command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_account(input)
	return common.execute_aws_command_with_input({ "organizations", "create-account" }, input)
end

--- This action is available if all of the following are true: You're authorized to create accounts in the Amazon Web Services GovCloud (US) Region
--- @param input table The input table for the create_gov_cloud_account command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_gov_cloud_account(input)
	return common.execute_aws_command_with_input({ "organizations", "create-gov-cloud-account" }, input)
end

--- Creates an Amazon Web Services organization
--- @param input table The input table for the create_organization command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_organization(input)
	return common.execute_aws_command_with_input({ "organizations", "create-organization" }, input)
end

--- Creates an organizational unit (OU) within a root or parent OU
--- @param input table The input table for the create_organizational_unit command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_organizational_unit(input)
	return common.execute_aws_command_with_input({ "organizations", "create-organizational-unit" }, input)
end

--- Creates a policy of a specified type that you can attach to a root, an organizational unit (OU), or an individual Amazon Web Services account
--- @param input table The input table for the create_policy command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_policy(input)
	return common.execute_aws_command_with_input({ "organizations", "create-policy" }, input)
end

--- Declines a handshake request
--- @param input table The input table for the decline_handshake command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.decline_handshake(input)
	return common.execute_aws_command_with_input({ "organizations", "decline-handshake" }, input)
end

--- Deletes the organization
--- @param input table Optional input parameters
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_organization(input)
	return common.execute_aws_command_with_input({ "organizations", "delete-organization" }, input)
end

--- Deletes an organizational unit (OU) from a root or another OU
--- @param input table The input table for the delete_organizational_unit command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_organizational_unit(input)
	return common.execute_aws_command_with_input({ "organizations", "delete-organizational-unit" }, input)
end

--- Deletes the specified policy from your organization
--- @param input table The input table for the delete_policy command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_policy(input)
	return common.execute_aws_command_with_input({ "organizations", "delete-policy" }, input)
end

--- Deletes the resource policy from your organization
--- @param input table Optional input parameters
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_resource_policy(input)
	return common.execute_aws_command_with_input({ "organizations", "delete-resource-policy" }, input)
end

--- Removes the specified member Amazon Web Services account as a delegated administrator for the specified Amazon Web Services service
--- @param input table The input table for the deregister_delegated_administrator command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.deregister_delegated_administrator(input)
	return common.execute_aws_command_with_input({ "organizations", "deregister-delegated-administrator" }, input)
end

--- Retrieves Organizations-related information about the specified account
--- @param input table The input table for the describe_account command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_account(input)
	return common.execute_aws_command_with_input({ "organizations", "describe-account" }, input)
end

--- Retrieves the current status of an asynchronous request to create an account
--- @param input table The input table for the describe_create_account_status command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_create_account_status(input)
	return common.execute_aws_command_with_input({ "organizations", "describe-create-account-status" }, input)
end

--- Returns the contents of the effective policy for specified policy type and account
--- @param input table The input table for the describe_effective_policy command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_effective_policy(input)
	return common.execute_aws_command_with_input({ "organizations", "describe-effective-policy" }, input)
end

--- Retrieves information about a previously requested handshake
--- @param input table The input table for the describe_handshake command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_handshake(input)
	return common.execute_aws_command_with_input({ "organizations", "describe-handshake" }, input)
end

--- Retrieves information about the organization that the user's account belongs to
--- @param input table Optional input parameters
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_organization(input)
	return common.execute_aws_command_with_input({ "organizations", "describe-organization" }, input)
end

--- Retrieves information about an organizational unit (OU)
--- @param input table The input table for the describe_organizational_unit command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_organizational_unit(input)
	return common.execute_aws_command_with_input({ "organizations", "describe-organizational-unit" }, input)
end

--- Retrieves information about a policy
--- @param input table The input table for the describe_policy command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_policy(input)
	return common.execute_aws_command_with_input({ "organizations", "describe-policy" }, input)
end

--- Retrieves information about a resource policy
--- @param input table Optional input parameters
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_resource_policy(input)
	return common.execute_aws_command_with_input({ "organizations", "describe-resource-policy" }, input)
end

--- Detaches a policy from a target root, organizational unit (OU), or account
--- @param input table The input table for the detach_policy command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.detach_policy(input)
	return common.execute_aws_command_with_input({ "organizations", "detach-policy" }, input)
end

--- Disables the integration of an Amazon Web Services service (the service that is specified by ServicePrincipal) with Organizations
--- @param input table The input table for the disable_aws_service_access command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.disable_aws_service_access(input)
	return common.execute_aws_command_with_input({ "organizations", "disable-aws-service-access" }, input)
end

--- Disables an organizational policy type in a root
--- @param input table The input table for the disable_policy_type command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.disable_policy_type(input)
	return common.execute_aws_command_with_input({ "organizations", "disable-policy-type" }, input)
end

--- Provides an Amazon Web Services service (the service that is specified by ServicePrincipal) with permissions to view the structure of an organization, create a service-linked role in all the accounts in the organization, and allow the service to perform operations on behalf of the organization and its accounts
--- @param input table The input table for the enable_aws_service_access command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.enable_aws_service_access(input)
	return common.execute_aws_command_with_input({ "organizations", "enable-aws-service-access" }, input)
end

--- Enables all features in an organization
--- @param input table The input table for the enable_all_features command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.enable_all_features(input)
	return common.execute_aws_command_with_input({ "organizations", "enable-all-features" }, input)
end

--- Enables a policy type in a root
--- @param input table The input table for the enable_policy_type command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.enable_policy_type(input)
	return common.execute_aws_command_with_input({ "organizations", "enable-policy-type" }, input)
end

--- Sends an invitation to another account to join your organization as a member account
--- @param input table The input table for the invite_account_to_organization command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.invite_account_to_organization(input)
	return common.execute_aws_command_with_input({ "organizations", "invite-account-to-organization" }, input)
end

--- Removes a member account from its parent organization
--- @param input table Optional input parameters
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.leave_organization(input)
	return common.execute_aws_command_with_input({ "organizations", "leave-organization" }, input)
end

--- Returns a list of the Amazon Web Services services that you enabled to integrate with your organization
--- @param input table The input table for the list_aws_service_access_for_organization command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_aws_service_access_for_organization(input)
	return common.execute_aws_command_with_input({ "organizations", "list-aws-service-access-for-organization" }, input)
end

--- Lists all the accounts in the organization
--- @param input table The input table for the list_accounts command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_accounts(input)
	return common.execute_aws_command_with_input({ "organizations", "list-accounts" }, input)
end

--- Lists the accounts in an organization that are contained by the specified target root or organizational unit (OU)
--- @param input table The input table for the list_accounts_for_parent command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_accounts_for_parent(input)
	return common.execute_aws_command_with_input({ "organizations", "list-accounts-for-parent" }, input)
end

--- Lists all of the organizational units (OUs) or accounts that are contained in the specified parent OU or root
--- @param input table The input table for the list_children command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_children(input)
	return common.execute_aws_command_with_input({ "organizations", "list-children" }, input)
end

--- Lists the account creation requests that match the specified status that is currently being tracked for the organization
--- @param input table The input table for the list_create_account_status command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_create_account_status(input)
	return common.execute_aws_command_with_input({ "organizations", "list-create-account-status" }, input)
end

--- Lists the Amazon Web Services accounts that are designated as delegated administrators in this organization
--- @param input table The input table for the list_delegated_administrators command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_delegated_administrators(input)
	return common.execute_aws_command_with_input({ "organizations", "list-delegated-administrators" }, input)
end

--- List the Amazon Web Services services for which the specified account is a delegated administrator
--- @param input table The input table for the list_delegated_services_for_account command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_delegated_services_for_account(input)
	return common.execute_aws_command_with_input({ "organizations", "list-delegated-services-for-account" }, input)
end

--- Lists the current handshakes that are associated with the account of the requesting user
--- @param input table The input table for the list_handshakes_for_account command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_handshakes_for_account(input)
	return common.execute_aws_command_with_input({ "organizations", "list-handshakes-for-account" }, input)
end

--- Lists the handshakes that are associated with the organization that the requesting user is part of
--- @param input table The input table for the list_handshakes_for_organization command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_handshakes_for_organization(input)
	return common.execute_aws_command_with_input({ "organizations", "list-handshakes-for-organization" }, input)
end

--- Lists the organizational units (OUs) in a parent organizational unit or root
--- @param input table The input table for the list_organizational_units_for_parent command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_organizational_units_for_parent(input)
	return common.execute_aws_command_with_input({ "organizations", "list-organizational-units-for-parent" }, input)
end

--- Lists the root or organizational units (OUs) that serve as the immediate parent of the specified child OU or account
--- @param input table The input table for the list_parents command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_parents(input)
	return common.execute_aws_command_with_input({ "organizations", "list-parents" }, input)
end

--- Retrieves the list of all policies in an organization of a specified type
--- @param input table The input table for the list_policies command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_policies(input)
	return common.execute_aws_command_with_input({ "organizations", "list-policies" }, input)
end

--- Lists the policies that are directly attached to the specified target root, organizational unit (OU), or account
--- @param input table The input table for the list_policies_for_target command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_policies_for_target(input)
	return common.execute_aws_command_with_input({ "organizations", "list-policies-for-target" }, input)
end

--- Lists the roots that are defined in the current organization
--- @param input table The input table for the list_roots command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_roots(input)
	return common.execute_aws_command_with_input({ "organizations", "list-roots" }, input)
end

--- Lists tags that are attached to the specified resource
--- @param input table The input table for the list_tags_for_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_tags_for_resource(input)
	return common.execute_aws_command_with_input({ "organizations", "list-tags-for-resource" }, input)
end

--- Lists all the roots, organizational units (OUs), and accounts that the specified policy is attached to
--- @param input table The input table for the list_targets_for_policy command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_targets_for_policy(input)
	return common.execute_aws_command_with_input({ "organizations", "list-targets-for-policy" }, input)
end

--- Moves an account from its current source parent root or organizational unit (OU) to the specified destination parent root or OU
--- @param input table The input table for the move_account command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.move_account(input)
	return common.execute_aws_command_with_input({ "organizations", "move-account" }, input)
end

--- Creates or updates a resource policy
--- @param input table The input table for the put_resource_policy command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.put_resource_policy(input)
	return common.execute_aws_command_with_input({ "organizations", "put-resource-policy" }, input)
end

--- Enables the specified member account to administer the Organizations features of the specified Amazon Web Services service
--- @param input table The input table for the register_delegated_administrator command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.register_delegated_administrator(input)
	return common.execute_aws_command_with_input({ "organizations", "register-delegated-administrator" }, input)
end

--- Removes the specified account from the organization
--- @param input table The input table for the remove_account_from_organization command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.remove_account_from_organization(input)
	return common.execute_aws_command_with_input({ "organizations", "remove-account-from-organization" }, input)
end

--- Adds one or more tags to the specified resource
--- @param input table The input table for the tag_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.tag_resource(input)
	return common.execute_aws_command_with_input({ "organizations", "tag-resource" }, input)
end

--- Removes any tags with the specified keys from the specified resource
--- @param input table The input table for the untag_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.untag_resource(input)
	return common.execute_aws_command_with_input({ "organizations", "untag-resource" }, input)
end

--- Renames the specified organizational unit (OU)
--- @param input table The input table for the update_organizational_unit command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_organizational_unit(input)
	return common.execute_aws_command_with_input({ "organizations", "update-organizational-unit" }, input)
end

--- Updates an existing policy with a new name, description, or content
--- @param input table The input table for the update_policy command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_policy(input)
	return common.execute_aws_command_with_input({ "organizations", "update-policy" }, input)
end

return M
