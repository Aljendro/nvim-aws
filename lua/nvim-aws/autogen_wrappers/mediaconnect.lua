-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: mediaconnect

local common = require("nvim-aws.wrappers.common")

--- AWS MEDIACONNECT service functions
local M = {}

--- Adds outputs to an existing bridge
--- @param input table|nil The input table for the add_bridge_outputs command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.add_bridge_outputs(input)
	return common.execute_aws_command_with_input({ "mediaconnect", "add-bridge-outputs" }, input)
end

--- Adds sources to an existing bridge
--- @param input table|nil The input table for the add_bridge_sources command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.add_bridge_sources(input)
	return common.execute_aws_command_with_input({ "mediaconnect", "add-bridge-sources" }, input)
end

--- Adds media streams to an existing flow
--- @param input table|nil The input table for the add_flow_media_streams command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.add_flow_media_streams(input)
	return common.execute_aws_command_with_input({ "mediaconnect", "add-flow-media-streams" }, input)
end

--- Adds outputs to an existing flow
--- @param input table|nil The input table for the add_flow_outputs command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.add_flow_outputs(input)
	return common.execute_aws_command_with_input({ "mediaconnect", "add-flow-outputs" }, input)
end

--- Adds sources to a flow
--- @param input table|nil The input table for the add_flow_sources command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.add_flow_sources(input)
	return common.execute_aws_command_with_input({ "mediaconnect", "add-flow-sources" }, input)
end

--- Adds VPC interfaces to a flow
--- @param input table|nil The input table for the add_flow_vpc_interfaces command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.add_flow_vpc_interfaces(input)
	return common.execute_aws_command_with_input({ "mediaconnect", "add-flow-vpc-interfaces" }, input)
end

--- Creates a new bridge
--- @param input table|nil The input table for the create_bridge command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_bridge(input)
	return common.execute_aws_command_with_input({ "mediaconnect", "create-bridge" }, input)
end

--- Creates a new flow
--- @param input table|nil The input table for the create_flow command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_flow(input)
	return common.execute_aws_command_with_input({ "mediaconnect", "create-flow" }, input)
end

--- Creates a new gateway
--- @param input table|nil The input table for the create_gateway command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_gateway(input)
	return common.execute_aws_command_with_input({ "mediaconnect", "create-gateway" }, input)
end

--- Deletes a bridge
--- @param input table|nil The input table for the delete_bridge command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_bridge(input)
	return common.execute_aws_command_with_input({ "mediaconnect", "delete-bridge" }, input)
end

--- Deletes a flow
--- @param input table|nil The input table for the delete_flow command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_flow(input)
	return common.execute_aws_command_with_input({ "mediaconnect", "delete-flow" }, input)
end

--- Deletes a gateway
--- @param input table|nil The input table for the delete_gateway command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_gateway(input)
	return common.execute_aws_command_with_input({ "mediaconnect", "delete-gateway" }, input)
end

--- Deregisters an instance
--- @param input table|nil The input table for the deregister_gateway_instance command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.deregister_gateway_instance(input)
	return common.execute_aws_command_with_input({ "mediaconnect", "deregister-gateway-instance" }, input)
end

--- Displays the details of a bridge
--- @param input table|nil The input table for the describe_bridge command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_bridge(input)
	return common.execute_aws_command_with_input({ "mediaconnect", "describe-bridge" }, input)
end

--- Displays the details of a flow
--- @param input table|nil The input table for the describe_flow command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_flow(input)
	return common.execute_aws_command_with_input({ "mediaconnect", "describe-flow" }, input)
end

--- The DescribeFlowSourceMetadata API is used to view information about the flow's source transport stream and programs
--- @param input table|nil The input table for the describe_flow_source_metadata command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_flow_source_metadata(input)
	return common.execute_aws_command_with_input({ "mediaconnect", "describe-flow-source-metadata" }, input)
end

--- Describes the thumbnail for the flow source
--- @param input table|nil The input table for the describe_flow_source_thumbnail command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_flow_source_thumbnail(input)
	return common.execute_aws_command_with_input({ "mediaconnect", "describe-flow-source-thumbnail" }, input)
end

--- Displays the details of a gateway
--- @param input table|nil The input table for the describe_gateway command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_gateway(input)
	return common.execute_aws_command_with_input({ "mediaconnect", "describe-gateway" }, input)
end

--- Displays the details of an instance
--- @param input table|nil The input table for the describe_gateway_instance command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_gateway_instance(input)
	return common.execute_aws_command_with_input({ "mediaconnect", "describe-gateway-instance" }, input)
end

--- Displays the details of an offering
--- @param input table|nil The input table for the describe_offering command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_offering(input)
	return common.execute_aws_command_with_input({ "mediaconnect", "describe-offering" }, input)
end

--- Displays the details of a reservation
--- @param input table|nil The input table for the describe_reservation command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_reservation(input)
	return common.execute_aws_command_with_input({ "mediaconnect", "describe-reservation" }, input)
end

--- Grants entitlements to an existing flow
--- @param input table|nil The input table for the grant_flow_entitlements command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.grant_flow_entitlements(input)
	return common.execute_aws_command_with_input({ "mediaconnect", "grant-flow-entitlements" }, input)
end

--- Displays a list of bridges that are associated with this account and an optionally specified Amazon Resource Name (ARN)
--- @param input table|nil The input table for the list_bridges command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_bridges(input)
	return common.execute_aws_command_with_input({ "mediaconnect", "list-bridges" }, input)
end

--- Displays a list of all entitlements that have been granted to this account
--- @param input table|nil The input table for the list_entitlements command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_entitlements(input)
	return common.execute_aws_command_with_input({ "mediaconnect", "list-entitlements" }, input)
end

--- Displays a list of flows that are associated with this account
--- @param input table|nil The input table for the list_flows command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_flows(input)
	return common.execute_aws_command_with_input({ "mediaconnect", "list-flows" }, input)
end

--- Displays a list of instances associated with the Amazon Web Services account
--- @param input table|nil The input table for the list_gateway_instances command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_gateway_instances(input)
	return common.execute_aws_command_with_input({ "mediaconnect", "list-gateway-instances" }, input)
end

--- Displays a list of gateways that are associated with this account
--- @param input table|nil The input table for the list_gateways command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_gateways(input)
	return common.execute_aws_command_with_input({ "mediaconnect", "list-gateways" }, input)
end

--- Displays a list of all offerings that are available to this account in the current Amazon Web Services Region
--- @param input table|nil The input table for the list_offerings command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_offerings(input)
	return common.execute_aws_command_with_input({ "mediaconnect", "list-offerings" }, input)
end

--- Displays a list of all reservations that have been purchased by this account in the current Amazon Web Services Region
--- @param input table|nil The input table for the list_reservations command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_reservations(input)
	return common.execute_aws_command_with_input({ "mediaconnect", "list-reservations" }, input)
end

--- List all tags on a MediaConnect resource
--- @param input table|nil The input table for the list_tags_for_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_tags_for_resource(input)
	return common.execute_aws_command_with_input({ "mediaconnect", "list-tags-for-resource" }, input)
end

--- Submits a request to purchase an offering
--- @param input table|nil The input table for the purchase_offering command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.purchase_offering(input)
	return common.execute_aws_command_with_input({ "mediaconnect", "purchase-offering" }, input)
end

--- Removes an output from a bridge
--- @param input table|nil The input table for the remove_bridge_output command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.remove_bridge_output(input)
	return common.execute_aws_command_with_input({ "mediaconnect", "remove-bridge-output" }, input)
end

--- Removes a source from a bridge
--- @param input table|nil The input table for the remove_bridge_source command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.remove_bridge_source(input)
	return common.execute_aws_command_with_input({ "mediaconnect", "remove-bridge-source" }, input)
end

--- Removes a media stream from a flow
--- @param input table|nil The input table for the remove_flow_media_stream command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.remove_flow_media_stream(input)
	return common.execute_aws_command_with_input({ "mediaconnect", "remove-flow-media-stream" }, input)
end

--- Removes an output from an existing flow
--- @param input table|nil The input table for the remove_flow_output command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.remove_flow_output(input)
	return common.execute_aws_command_with_input({ "mediaconnect", "remove-flow-output" }, input)
end

--- Removes a source from an existing flow
--- @param input table|nil The input table for the remove_flow_source command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.remove_flow_source(input)
	return common.execute_aws_command_with_input({ "mediaconnect", "remove-flow-source" }, input)
end

--- Removes a VPC Interface from an existing flow
--- @param input table|nil The input table for the remove_flow_vpc_interface command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.remove_flow_vpc_interface(input)
	return common.execute_aws_command_with_input({ "mediaconnect", "remove-flow-vpc-interface" }, input)
end

--- Revokes an entitlement from a flow
--- @param input table|nil The input table for the revoke_flow_entitlement command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.revoke_flow_entitlement(input)
	return common.execute_aws_command_with_input({ "mediaconnect", "revoke-flow-entitlement" }, input)
end

--- Starts a flow
--- @param input table|nil The input table for the start_flow command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.start_flow(input)
	return common.execute_aws_command_with_input({ "mediaconnect", "start-flow" }, input)
end

--- Stops a flow
--- @param input table|nil The input table for the stop_flow command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.stop_flow(input)
	return common.execute_aws_command_with_input({ "mediaconnect", "stop-flow" }, input)
end

--- Associates the specified tags to a resource with the specified resourceArn
--- @param input table|nil The input table for the tag_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.tag_resource(input)
	return common.execute_aws_command_with_input({ "mediaconnect", "tag-resource" }, input)
end

--- Deletes specified tags from a resource
--- @param input table|nil The input table for the untag_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.untag_resource(input)
	return common.execute_aws_command_with_input({ "mediaconnect", "untag-resource" }, input)
end

--- Updates the bridge
--- @param input table|nil The input table for the update_bridge command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_bridge(input)
	return common.execute_aws_command_with_input({ "mediaconnect", "update-bridge" }, input)
end

--- Updates an existing bridge output
--- @param input table|nil The input table for the update_bridge_output command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_bridge_output(input)
	return common.execute_aws_command_with_input({ "mediaconnect", "update-bridge-output" }, input)
end

--- Updates an existing bridge source
--- @param input table|nil The input table for the update_bridge_source command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_bridge_source(input)
	return common.execute_aws_command_with_input({ "mediaconnect", "update-bridge-source" }, input)
end

--- Updates the bridge state
--- @param input table|nil The input table for the update_bridge_state command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_bridge_state(input)
	return common.execute_aws_command_with_input({ "mediaconnect", "update-bridge-state" }, input)
end

--- Updates an existing flow
--- @param input table|nil The input table for the update_flow command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_flow(input)
	return common.execute_aws_command_with_input({ "mediaconnect", "update-flow" }, input)
end

--- Updates an entitlement
--- @param input table|nil The input table for the update_flow_entitlement command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_flow_entitlement(input)
	return common.execute_aws_command_with_input({ "mediaconnect", "update-flow-entitlement" }, input)
end

--- Updates an existing media stream
--- @param input table|nil The input table for the update_flow_media_stream command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_flow_media_stream(input)
	return common.execute_aws_command_with_input({ "mediaconnect", "update-flow-media-stream" }, input)
end

--- Updates an existing flow output
--- @param input table|nil The input table for the update_flow_output command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_flow_output(input)
	return common.execute_aws_command_with_input({ "mediaconnect", "update-flow-output" }, input)
end

--- Updates the source of a flow
--- @param input table|nil The input table for the update_flow_source command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_flow_source(input)
	return common.execute_aws_command_with_input({ "mediaconnect", "update-flow-source" }, input)
end

--- Updates an existing gateway instance
--- @param input table|nil The input table for the update_gateway_instance command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_gateway_instance(input)
	return common.execute_aws_command_with_input({ "mediaconnect", "update-gateway-instance" }, input)
end

return M
