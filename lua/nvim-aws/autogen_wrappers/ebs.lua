-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: ebs

local common = require("nvim-aws.wrappers.common")

--- AWS EBS service functions
local M = {}

--- Seals and completes the snapshot after all of the required blocks of data have been written to it
--- @param input table The input table for the complete_snapshot command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.complete_snapshot(input)
	return common.execute_aws_command_with_input({ "ebs", "complete-snapshot" }, input)
end

--- Returns the data in a block in an Amazon Elastic Block Store snapshot
--- @param input table The input table for the get_snapshot_block command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_snapshot_block(input)
	return common.execute_aws_command_with_input({ "ebs", "get-snapshot-block" }, input)
end

--- Returns information about the blocks that are different between two Amazon Elastic Block Store snapshots of the same volume/snapshot lineage
--- @param input table The input table for the list_changed_blocks command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_changed_blocks(input)
	return common.execute_aws_command_with_input({ "ebs", "list-changed-blocks" }, input)
end

--- Returns information about the blocks in an Amazon Elastic Block Store snapshot
--- @param input table The input table for the list_snapshot_blocks command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_snapshot_blocks(input)
	return common.execute_aws_command_with_input({ "ebs", "list-snapshot-blocks" }, input)
end

--- Writes a block of data to a snapshot
--- @param input table The input table for the put_snapshot_block command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.put_snapshot_block(input)
	return common.execute_aws_command_with_input({ "ebs", "put-snapshot-block" }, input)
end

--- Creates a new Amazon EBS snapshot
--- @param input table The input table for the start_snapshot command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.start_snapshot(input)
	return common.execute_aws_command_with_input({ "ebs", "start-snapshot" }, input)
end

return M
