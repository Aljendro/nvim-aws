-- AUTOGENERATED FILE - DO NOT EDIT
-- AWS Service: controltower

local common = require("nvim-aws.common")

--- AWS controltower service functions
local M = {}

--- AWS controltower create-landing-zone operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_landing_zone(input, callbacks)
	return common.execute_aws_command_skeleton({ "controltower", "create-landing-zone" }, input, callbacks)
end

--- AWS controltower delete-landing-zone operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_landing_zone(input, callbacks)
	return common.execute_aws_command_skeleton({ "controltower", "delete-landing-zone" }, input, callbacks)
end

--- AWS controltower disable-baseline operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.disable_baseline(input, callbacks)
	return common.execute_aws_command_skeleton({ "controltower", "disable-baseline" }, input, callbacks)
end

--- AWS controltower disable-control operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.disable_control(input, callbacks)
	return common.execute_aws_command_skeleton({ "controltower", "disable-control" }, input, callbacks)
end

--- AWS controltower enable-baseline operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.enable_baseline(input, callbacks)
	return common.execute_aws_command_skeleton({ "controltower", "enable-baseline" }, input, callbacks)
end

--- AWS controltower enable-control operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.enable_control(input, callbacks)
	return common.execute_aws_command_skeleton({ "controltower", "enable-control" }, input, callbacks)
end

--- AWS controltower get-baseline operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_baseline(input, callbacks)
	return common.execute_aws_command_skeleton({ "controltower", "get-baseline" }, input, callbacks)
end

--- AWS controltower get-baseline-operation operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_baseline_operation(input, callbacks)
	return common.execute_aws_command_skeleton({ "controltower", "get-baseline-operation" }, input, callbacks)
end

--- AWS controltower get-control-operation operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_control_operation(input, callbacks)
	return common.execute_aws_command_skeleton({ "controltower", "get-control-operation" }, input, callbacks)
end

--- AWS controltower get-enabled-baseline operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_enabled_baseline(input, callbacks)
	return common.execute_aws_command_skeleton({ "controltower", "get-enabled-baseline" }, input, callbacks)
end

--- AWS controltower get-enabled-control operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_enabled_control(input, callbacks)
	return common.execute_aws_command_skeleton({ "controltower", "get-enabled-control" }, input, callbacks)
end

--- AWS controltower get-landing-zone operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_landing_zone(input, callbacks)
	return common.execute_aws_command_skeleton({ "controltower", "get-landing-zone" }, input, callbacks)
end

--- AWS controltower get-landing-zone-operation operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_landing_zone_operation(input, callbacks)
	return common.execute_aws_command_skeleton({ "controltower", "get-landing-zone-operation" }, input, callbacks)
end

--- AWS controltower list-baselines operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_baselines(input, callbacks)
	return common.execute_aws_command_skeleton({ "controltower", "list-baselines" }, input, callbacks)
end

--- AWS controltower list-control-operations operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_control_operations(input, callbacks)
	return common.execute_aws_command_skeleton({ "controltower", "list-control-operations" }, input, callbacks)
end

--- AWS controltower list-enabled-baselines operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_enabled_baselines(input, callbacks)
	return common.execute_aws_command_skeleton({ "controltower", "list-enabled-baselines" }, input, callbacks)
end

--- AWS controltower list-enabled-controls operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_enabled_controls(input, callbacks)
	return common.execute_aws_command_skeleton({ "controltower", "list-enabled-controls" }, input, callbacks)
end

--- AWS controltower list-landing-zone-operations operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_landing_zone_operations(input, callbacks)
	return common.execute_aws_command_skeleton({ "controltower", "list-landing-zone-operations" }, input, callbacks)
end

--- AWS controltower list-landing-zones operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_landing_zones(input, callbacks)
	return common.execute_aws_command_skeleton({ "controltower", "list-landing-zones" }, input, callbacks)
end

--- AWS controltower list-tags-for-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_tags_for_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "controltower", "list-tags-for-resource" }, input, callbacks)
end

--- AWS controltower reset-enabled-baseline operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.reset_enabled_baseline(input, callbacks)
	return common.execute_aws_command_skeleton({ "controltower", "reset-enabled-baseline" }, input, callbacks)
end

--- AWS controltower reset-enabled-control operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.reset_enabled_control(input, callbacks)
	return common.execute_aws_command_skeleton({ "controltower", "reset-enabled-control" }, input, callbacks)
end

--- AWS controltower reset-landing-zone operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.reset_landing_zone(input, callbacks)
	return common.execute_aws_command_skeleton({ "controltower", "reset-landing-zone" }, input, callbacks)
end

--- AWS controltower tag-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.tag_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "controltower", "tag-resource" }, input, callbacks)
end

--- AWS controltower untag-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.untag_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "controltower", "untag-resource" }, input, callbacks)
end

--- AWS controltower update-enabled-baseline operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_enabled_baseline(input, callbacks)
	return common.execute_aws_command_skeleton({ "controltower", "update-enabled-baseline" }, input, callbacks)
end

--- AWS controltower update-enabled-control operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_enabled_control(input, callbacks)
	return common.execute_aws_command_skeleton({ "controltower", "update-enabled-control" }, input, callbacks)
end

--- AWS controltower update-landing-zone operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_landing_zone(input, callbacks)
	return common.execute_aws_command_skeleton({ "controltower", "update-landing-zone" }, input, callbacks)
end

return M
