-- AUTOGENERATED FILE - DO NOT EDIT
-- AWS Service: iot-wireless

local common = require("nvim-aws.wrappers.common")

--- AWS IOTWIRELESS service functions
local M = {}

--- Associates a partner account with your AWS account
--- @param input table|nil The input table for the associate_aws_account_with_partner_account command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.associate_aws_account_with_partner_account(input)
	return common.execute_aws_command_with_input({ "iotwireless", "associate-aws-account-with-partner-account" }, input)
end

--- Associate a multicast group with a FUOTA task
--- @param input table|nil The input table for the associate_multicast_group_with_fuota_task command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.associate_multicast_group_with_fuota_task(input)
	return common.execute_aws_command_with_input({ "iotwireless", "associate-multicast-group-with-fuota-task" }, input)
end

--- Associate a wireless device with a FUOTA task
--- @param input table|nil The input table for the associate_wireless_device_with_fuota_task command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.associate_wireless_device_with_fuota_task(input)
	return common.execute_aws_command_with_input({ "iotwireless", "associate-wireless-device-with-fuota-task" }, input)
end

--- Associates a wireless device with a multicast group
--- @param input table|nil The input table for the associate_wireless_device_with_multicast_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.associate_wireless_device_with_multicast_group(input)
	return common.execute_aws_command_with_input({ "iotwireless", "associate-wireless-device-with-multicast-group" }, input)
end

--- Associates a wireless device with a thing
--- @param input table|nil The input table for the associate_wireless_device_with_thing command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.associate_wireless_device_with_thing(input)
	return common.execute_aws_command_with_input({ "iotwireless", "associate-wireless-device-with-thing" }, input)
end

--- Associates a wireless gateway with a certificate
--- @param input table|nil The input table for the associate_wireless_gateway_with_certificate command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.associate_wireless_gateway_with_certificate(input)
	return common.execute_aws_command_with_input({ "iotwireless", "associate-wireless-gateway-with-certificate" }, input)
end

--- Associates a wireless gateway with a thing
--- @param input table|nil The input table for the associate_wireless_gateway_with_thing command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.associate_wireless_gateway_with_thing(input)
	return common.execute_aws_command_with_input({ "iotwireless", "associate-wireless-gateway-with-thing" }, input)
end

--- Cancels an existing multicast group session
--- @param input table|nil The input table for the cancel_multicast_group_session command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.cancel_multicast_group_session(input)
	return common.execute_aws_command_with_input({ "iotwireless", "cancel-multicast-group-session" }, input)
end

--- Creates a new destination that maps a device message to an AWS IoT rule
--- @param input table|nil The input table for the create_destination command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_destination(input)
	return common.execute_aws_command_with_input({ "iotwireless", "create-destination" }, input)
end

--- Creates a new device profile
--- @param input table|nil The input table for the create_device_profile command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_device_profile(input)
	return common.execute_aws_command_with_input({ "iotwireless", "create-device-profile" }, input)
end

--- Creates a FUOTA task
--- @param input table|nil The input table for the create_fuota_task command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_fuota_task(input)
	return common.execute_aws_command_with_input({ "iotwireless", "create-fuota-task" }, input)
end

--- Creates a multicast group
--- @param input table|nil The input table for the create_multicast_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_multicast_group(input)
	return common.execute_aws_command_with_input({ "iotwireless", "create-multicast-group" }, input)
end

--- Creates a new network analyzer configuration
--- @param input table|nil The input table for the create_network_analyzer_configuration command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_network_analyzer_configuration(input)
	return common.execute_aws_command_with_input({ "iotwireless", "create-network-analyzer-configuration" }, input)
end

--- Creates a new service profile
--- @param input table|nil The input table for the create_service_profile command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_service_profile(input)
	return common.execute_aws_command_with_input({ "iotwireless", "create-service-profile" }, input)
end

--- Provisions a wireless device
--- @param input table|nil The input table for the create_wireless_device command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_wireless_device(input)
	return common.execute_aws_command_with_input({ "iotwireless", "create-wireless-device" }, input)
end

--- Provisions a wireless gateway
--- @param input table|nil The input table for the create_wireless_gateway command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_wireless_gateway(input)
	return common.execute_aws_command_with_input({ "iotwireless", "create-wireless-gateway" }, input)
end

--- Creates a task for a wireless gateway
--- @param input table|nil The input table for the create_wireless_gateway_task command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_wireless_gateway_task(input)
	return common.execute_aws_command_with_input({ "iotwireless", "create-wireless-gateway-task" }, input)
end

--- Creates a gateway task definition
--- @param input table|nil The input table for the create_wireless_gateway_task_definition command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_wireless_gateway_task_definition(input)
	return common.execute_aws_command_with_input({ "iotwireless", "create-wireless-gateway-task-definition" }, input)
end

--- Deletes a destination
--- @param input table|nil The input table for the delete_destination command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_destination(input)
	return common.execute_aws_command_with_input({ "iotwireless", "delete-destination" }, input)
end

--- Deletes a device profile
--- @param input table|nil The input table for the delete_device_profile command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_device_profile(input)
	return common.execute_aws_command_with_input({ "iotwireless", "delete-device-profile" }, input)
end

--- Deletes a FUOTA task
--- @param input table|nil The input table for the delete_fuota_task command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_fuota_task(input)
	return common.execute_aws_command_with_input({ "iotwireless", "delete-fuota-task" }, input)
end

--- Deletes a multicast group if it is not in use by a FUOTA task
--- @param input table|nil The input table for the delete_multicast_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_multicast_group(input)
	return common.execute_aws_command_with_input({ "iotwireless", "delete-multicast-group" }, input)
end

--- Deletes a network analyzer configuration
--- @param input table|nil The input table for the delete_network_analyzer_configuration command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_network_analyzer_configuration(input)
	return common.execute_aws_command_with_input({ "iotwireless", "delete-network-analyzer-configuration" }, input)
end

--- Remove queued messages from the downlink queue
--- @param input table|nil The input table for the delete_queued_messages command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_queued_messages(input)
	return common.execute_aws_command_with_input({ "iotwireless", "delete-queued-messages" }, input)
end

--- Deletes a service profile
--- @param input table|nil The input table for the delete_service_profile command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_service_profile(input)
	return common.execute_aws_command_with_input({ "iotwireless", "delete-service-profile" }, input)
end

--- Deletes a wireless device
--- @param input table|nil The input table for the delete_wireless_device command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_wireless_device(input)
	return common.execute_aws_command_with_input({ "iotwireless", "delete-wireless-device" }, input)
end

--- Delete an import task
--- @param input table|nil The input table for the delete_wireless_device_import_task command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_wireless_device_import_task(input)
	return common.execute_aws_command_with_input({ "iotwireless", "delete-wireless-device-import-task" }, input)
end

--- Deletes a wireless gateway
--- @param input table|nil The input table for the delete_wireless_gateway command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_wireless_gateway(input)
	return common.execute_aws_command_with_input({ "iotwireless", "delete-wireless-gateway" }, input)
end

--- Deletes a wireless gateway task
--- @param input table|nil The input table for the delete_wireless_gateway_task command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_wireless_gateway_task(input)
	return common.execute_aws_command_with_input({ "iotwireless", "delete-wireless-gateway-task" }, input)
end

--- Deletes a wireless gateway task definition
--- @param input table|nil The input table for the delete_wireless_gateway_task_definition command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_wireless_gateway_task_definition(input)
	return common.execute_aws_command_with_input({ "iotwireless", "delete-wireless-gateway-task-definition" }, input)
end

--- Deregister a wireless device from AWS IoT Wireless
--- @param input table|nil The input table for the deregister_wireless_device command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.deregister_wireless_device(input)
	return common.execute_aws_command_with_input({ "iotwireless", "deregister-wireless-device" }, input)
end

--- Disassociates your AWS account from a partner account
--- @param input table|nil The input table for the disassociate_aws_account_from_partner_account command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.disassociate_aws_account_from_partner_account(input)
	return common.execute_aws_command_with_input({ "iotwireless", "disassociate-aws-account-from-partner-account" }, input)
end

--- Disassociates a multicast group from a FUOTA task
--- @param input table|nil The input table for the disassociate_multicast_group_from_fuota_task command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.disassociate_multicast_group_from_fuota_task(input)
	return common.execute_aws_command_with_input({ "iotwireless", "disassociate-multicast-group-from-fuota-task" }, input)
end

--- Disassociates a wireless device from a FUOTA task
--- @param input table|nil The input table for the disassociate_wireless_device_from_fuota_task command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.disassociate_wireless_device_from_fuota_task(input)
	return common.execute_aws_command_with_input({ "iotwireless", "disassociate-wireless-device-from-fuota-task" }, input)
end

--- Disassociates a wireless device from a multicast group
--- @param input table|nil The input table for the disassociate_wireless_device_from_multicast_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.disassociate_wireless_device_from_multicast_group(input)
	return common.execute_aws_command_with_input({ "iotwireless", "disassociate-wireless-device-from-multicast-group" }, input)
end

--- Disassociates a wireless device from its currently associated thing
--- @param input table|nil The input table for the disassociate_wireless_device_from_thing command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.disassociate_wireless_device_from_thing(input)
	return common.execute_aws_command_with_input({ "iotwireless", "disassociate-wireless-device-from-thing" }, input)
end

--- Disassociates a wireless gateway from its currently associated certificate
--- @param input table|nil The input table for the disassociate_wireless_gateway_from_certificate command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.disassociate_wireless_gateway_from_certificate(input)
	return common.execute_aws_command_with_input({ "iotwireless", "disassociate-wireless-gateway-from-certificate" }, input)
end

--- Disassociates a wireless gateway from its currently associated thing
--- @param input table|nil The input table for the disassociate_wireless_gateway_from_thing command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.disassociate_wireless_gateway_from_thing(input)
	return common.execute_aws_command_with_input({ "iotwireless", "disassociate-wireless-gateway-from-thing" }, input)
end

--- Gets information about a destination
--- @param input table|nil The input table for the get_destination command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_destination(input)
	return common.execute_aws_command_with_input({ "iotwireless", "get-destination" }, input)
end

--- Gets information about a device profile
--- @param input table|nil The input table for the get_device_profile command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_device_profile(input)
	return common.execute_aws_command_with_input({ "iotwireless", "get-device-profile" }, input)
end

--- Get the event configuration based on resource types
--- @param input table|nil The input table for the get_event_configuration_by_resource_types command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_event_configuration_by_resource_types(input)
	return common.execute_aws_command_with_input({ "iotwireless", "get-event-configuration-by-resource-types" }, input)
end

--- Gets information about a FUOTA task
--- @param input table|nil The input table for the get_fuota_task command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_fuota_task(input)
	return common.execute_aws_command_with_input({ "iotwireless", "get-fuota-task" }, input)
end

--- Returns current default log levels or log levels by resource types
--- @param input table|nil The input table for the get_log_levels_by_resource_types command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_log_levels_by_resource_types(input)
	return common.execute_aws_command_with_input({ "iotwireless", "get-log-levels-by-resource-types" }, input)
end

--- Get the metric configuration status for this AWS account
--- @param input table|nil The input table for the get_metric_configuration command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_metric_configuration(input)
	return common.execute_aws_command_with_input({ "iotwireless", "get-metric-configuration" }, input)
end

--- Get the summary metrics for this AWS account
--- @param input table|nil The input table for the get_metrics command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_metrics(input)
	return common.execute_aws_command_with_input({ "iotwireless", "get-metrics" }, input)
end

--- Gets information about a multicast group
--- @param input table|nil The input table for the get_multicast_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_multicast_group(input)
	return common.execute_aws_command_with_input({ "iotwireless", "get-multicast-group" }, input)
end

--- Gets information about a multicast group session
--- @param input table|nil The input table for the get_multicast_group_session command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_multicast_group_session(input)
	return common.execute_aws_command_with_input({ "iotwireless", "get-multicast-group-session" }, input)
end

--- Get network analyzer configuration
--- @param input table|nil The input table for the get_network_analyzer_configuration command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_network_analyzer_configuration(input)
	return common.execute_aws_command_with_input({ "iotwireless", "get-network-analyzer-configuration" }, input)
end

--- Gets information about a partner account
--- @param input table|nil The input table for the get_partner_account command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_partner_account(input)
	return common.execute_aws_command_with_input({ "iotwireless", "get-partner-account" }, input)
end

--- Get the position information for a given resource
--- @param input table|nil The input table for the get_position command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_position(input)
	return common.execute_aws_command_with_input({ "iotwireless", "get-position" }, input)
end

--- Get position configuration for a given resource
--- @param input table|nil The input table for the get_position_configuration command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_position_configuration(input)
	return common.execute_aws_command_with_input({ "iotwireless", "get-position-configuration" }, input)
end

--- Get estimated position information as a payload in GeoJSON format
--- @param input table|nil The input table for the get_position_estimate command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_position_estimate(input)
	return common.execute_aws_command_with_input({ "iotwireless", "get-position-estimate" }, input)
end

--- Get the event configuration for a particular resource identifier
--- @param input table|nil The input table for the get_resource_event_configuration command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_resource_event_configuration(input)
	return common.execute_aws_command_with_input({ "iotwireless", "get-resource-event-configuration" }, input)
end

--- Fetches the log-level override, if any, for a given resource ID and resource type
--- @param input table|nil The input table for the get_resource_log_level command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_resource_log_level(input)
	return common.execute_aws_command_with_input({ "iotwireless", "get-resource-log-level" }, input)
end

--- Get the position information for a given wireless device or a wireless gateway resource
--- @param input table|nil The input table for the get_resource_position command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_resource_position(input)
	return common.execute_aws_command_with_input({ "iotwireless", "get-resource-position" }, input)
end

--- Gets the account-specific endpoint for Configuration and Update Server (CUPS) protocol or LoRaWAN Network Server (LNS) connections
--- @param input table|nil The input table for the get_service_endpoint command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_service_endpoint(input)
	return common.execute_aws_command_with_input({ "iotwireless", "get-service-endpoint" }, input)
end

--- Gets information about a service profile
--- @param input table|nil The input table for the get_service_profile command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_service_profile(input)
	return common.execute_aws_command_with_input({ "iotwireless", "get-service-profile" }, input)
end

--- Gets information about a wireless device
--- @param input table|nil The input table for the get_wireless_device command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_wireless_device(input)
	return common.execute_aws_command_with_input({ "iotwireless", "get-wireless-device" }, input)
end

--- Get information about an import task and count of device onboarding summary information for the import task
--- @param input table|nil The input table for the get_wireless_device_import_task command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_wireless_device_import_task(input)
	return common.execute_aws_command_with_input({ "iotwireless", "get-wireless-device-import-task" }, input)
end

--- Gets operating information about a wireless device
--- @param input table|nil The input table for the get_wireless_device_statistics command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_wireless_device_statistics(input)
	return common.execute_aws_command_with_input({ "iotwireless", "get-wireless-device-statistics" }, input)
end

--- Gets information about a wireless gateway
--- @param input table|nil The input table for the get_wireless_gateway command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_wireless_gateway(input)
	return common.execute_aws_command_with_input({ "iotwireless", "get-wireless-gateway" }, input)
end

--- Gets the ID of the certificate that is currently associated with a wireless gateway
--- @param input table|nil The input table for the get_wireless_gateway_certificate command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_wireless_gateway_certificate(input)
	return common.execute_aws_command_with_input({ "iotwireless", "get-wireless-gateway-certificate" }, input)
end

--- Gets the firmware version and other information about a wireless gateway
--- @param input table|nil The input table for the get_wireless_gateway_firmware_information command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_wireless_gateway_firmware_information(input)
	return common.execute_aws_command_with_input({ "iotwireless", "get-wireless-gateway-firmware-information" }, input)
end

--- Gets operating information about a wireless gateway
--- @param input table|nil The input table for the get_wireless_gateway_statistics command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_wireless_gateway_statistics(input)
	return common.execute_aws_command_with_input({ "iotwireless", "get-wireless-gateway-statistics" }, input)
end

--- Gets information about a wireless gateway task
--- @param input table|nil The input table for the get_wireless_gateway_task command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_wireless_gateway_task(input)
	return common.execute_aws_command_with_input({ "iotwireless", "get-wireless-gateway-task" }, input)
end

--- Gets information about a wireless gateway task definition
--- @param input table|nil The input table for the get_wireless_gateway_task_definition command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_wireless_gateway_task_definition(input)
	return common.execute_aws_command_with_input({ "iotwireless", "get-wireless-gateway-task-definition" }, input)
end

--- Lists the destinations registered to your AWS account
--- @param input table|nil The input table for the list_destinations command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_destinations(input)
	return common.execute_aws_command_with_input({ "iotwireless", "list-destinations" }, input)
end

--- Lists the device profiles registered to your AWS account
--- @param input table|nil The input table for the list_device_profiles command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_device_profiles(input)
	return common.execute_aws_command_with_input({ "iotwireless", "list-device-profiles" }, input)
end

--- List the Sidewalk devices in an import task and their onboarding status
--- @param input table|nil The input table for the list_devices_for_wireless_device_import_task command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_devices_for_wireless_device_import_task(input)
	return common.execute_aws_command_with_input({ "iotwireless", "list-devices-for-wireless-device-import-task" }, input)
end

--- List event configurations where at least one event topic has been enabled
--- @param input table|nil The input table for the list_event_configurations command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_event_configurations(input)
	return common.execute_aws_command_with_input({ "iotwireless", "list-event-configurations" }, input)
end

--- Lists the FUOTA tasks registered to your AWS account
--- @param input table|nil The input table for the list_fuota_tasks command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_fuota_tasks(input)
	return common.execute_aws_command_with_input({ "iotwireless", "list-fuota-tasks" }, input)
end

--- Lists the multicast groups registered to your AWS account
--- @param input table|nil The input table for the list_multicast_groups command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_multicast_groups(input)
	return common.execute_aws_command_with_input({ "iotwireless", "list-multicast-groups" }, input)
end

--- List all multicast groups associated with a FUOTA task
--- @param input table|nil The input table for the list_multicast_groups_by_fuota_task command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_multicast_groups_by_fuota_task(input)
	return common.execute_aws_command_with_input({ "iotwireless", "list-multicast-groups-by-fuota-task" }, input)
end

--- Lists the network analyzer configurations
--- @param input table|nil The input table for the list_network_analyzer_configurations command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_network_analyzer_configurations(input)
	return common.execute_aws_command_with_input({ "iotwireless", "list-network-analyzer-configurations" }, input)
end

--- Lists the partner accounts associated with your AWS account
--- @param input table|nil The input table for the list_partner_accounts command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_partner_accounts(input)
	return common.execute_aws_command_with_input({ "iotwireless", "list-partner-accounts" }, input)
end

--- List position configurations for a given resource, such as positioning solvers
--- @param input table|nil The input table for the list_position_configurations command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_position_configurations(input)
	return common.execute_aws_command_with_input({ "iotwireless", "list-position-configurations" }, input)
end

--- List queued messages in the downlink queue
--- @param input table|nil The input table for the list_queued_messages command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_queued_messages(input)
	return common.execute_aws_command_with_input({ "iotwireless", "list-queued-messages" }, input)
end

--- Lists the service profiles registered to your AWS account
--- @param input table|nil The input table for the list_service_profiles command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_service_profiles(input)
	return common.execute_aws_command_with_input({ "iotwireless", "list-service-profiles" }, input)
end

--- Lists the tags (metadata) you have assigned to the resource
--- @param input table|nil The input table for the list_tags_for_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_tags_for_resource(input)
	return common.execute_aws_command_with_input({ "iotwireless", "list-tags-for-resource" }, input)
end

--- List wireless devices that have been added to an import task
--- @param input table|nil The input table for the list_wireless_device_import_tasks command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_wireless_device_import_tasks(input)
	return common.execute_aws_command_with_input({ "iotwireless", "list-wireless-device-import-tasks" }, input)
end

--- Lists the wireless devices registered to your AWS account
--- @param input table|nil The input table for the list_wireless_devices command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_wireless_devices(input)
	return common.execute_aws_command_with_input({ "iotwireless", "list-wireless-devices" }, input)
end

--- List the wireless gateway tasks definitions registered to your AWS account
--- @param input table|nil The input table for the list_wireless_gateway_task_definitions command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_wireless_gateway_task_definitions(input)
	return common.execute_aws_command_with_input({ "iotwireless", "list-wireless-gateway-task-definitions" }, input)
end

--- Lists the wireless gateways registered to your AWS account
--- @param input table|nil The input table for the list_wireless_gateways command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_wireless_gateways(input)
	return common.execute_aws_command_with_input({ "iotwireless", "list-wireless-gateways" }, input)
end

--- Put position configuration for a given resource
--- @param input table|nil The input table for the put_position_configuration command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.put_position_configuration(input)
	return common.execute_aws_command_with_input({ "iotwireless", "put-position-configuration" }, input)
end

--- Sets the log-level override for a resource ID and resource type
--- @param input table|nil The input table for the put_resource_log_level command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.put_resource_log_level(input)
	return common.execute_aws_command_with_input({ "iotwireless", "put-resource-log-level" }, input)
end

--- Removes the log-level overrides for all resources; wireless devices, wireless gateways, and FUOTA tasks
--- @param input table|nil The input table for the reset_all_resource_log_levels command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.reset_all_resource_log_levels(input)
	return common.execute_aws_command_with_input({ "iotwireless", "reset-all-resource-log-levels" }, input)
end

--- Removes the log-level override, if any, for a specific resource ID and resource type
--- @param input table|nil The input table for the reset_resource_log_level command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.reset_resource_log_level(input)
	return common.execute_aws_command_with_input({ "iotwireless", "reset-resource-log-level" }, input)
end

--- Sends the specified data to a multicast group
--- @param input table|nil The input table for the send_data_to_multicast_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.send_data_to_multicast_group(input)
	return common.execute_aws_command_with_input({ "iotwireless", "send-data-to-multicast-group" }, input)
end

--- Sends a decrypted application data frame to a device
--- @param input table|nil The input table for the send_data_to_wireless_device command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.send_data_to_wireless_device(input)
	return common.execute_aws_command_with_input({ "iotwireless", "send-data-to-wireless-device" }, input)
end

--- Starts a bulk association of all qualifying wireless devices with a multicast group
--- @param input table|nil The input table for the start_bulk_associate_wireless_device_with_multicast_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.start_bulk_associate_wireless_device_with_multicast_group(input)
	return common.execute_aws_command_with_input({ "iotwireless", "start-bulk-associate-wireless-device-with-multicast-group" }, input)
end

--- Starts a bulk disassociatin of all qualifying wireless devices from a multicast group
--- @param input table|nil The input table for the start_bulk_disassociate_wireless_device_from_multicast_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.start_bulk_disassociate_wireless_device_from_multicast_group(input)
	return common.execute_aws_command_with_input({ "iotwireless", "start-bulk-disassociate-wireless-device-from-multicast-group" }, input)
end

--- Starts a FUOTA task
--- @param input table|nil The input table for the start_fuota_task command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.start_fuota_task(input)
	return common.execute_aws_command_with_input({ "iotwireless", "start-fuota-task" }, input)
end

--- Starts a multicast group session
--- @param input table|nil The input table for the start_multicast_group_session command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.start_multicast_group_session(input)
	return common.execute_aws_command_with_input({ "iotwireless", "start-multicast-group-session" }, input)
end

--- Start import task for a single wireless device
--- @param input table|nil The input table for the start_single_wireless_device_import_task command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.start_single_wireless_device_import_task(input)
	return common.execute_aws_command_with_input({ "iotwireless", "start-single-wireless-device-import-task" }, input)
end

--- Start import task for provisioning Sidewalk devices in bulk using an S3 CSV file
--- @param input table|nil The input table for the start_wireless_device_import_task command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.start_wireless_device_import_task(input)
	return common.execute_aws_command_with_input({ "iotwireless", "start-wireless-device-import-task" }, input)
end

--- Adds a tag to a resource
--- @param input table|nil The input table for the tag_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.tag_resource(input)
	return common.execute_aws_command_with_input({ "iotwireless", "tag-resource" }, input)
end

--- Simulates a provisioned device by sending an uplink data payload of Hello
--- @param input table|nil The input table for the test_wireless_device command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.test_wireless_device(input)
	return common.execute_aws_command_with_input({ "iotwireless", "test-wireless-device" }, input)
end

--- Removes one or more tags from a resource
--- @param input table|nil The input table for the untag_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.untag_resource(input)
	return common.execute_aws_command_with_input({ "iotwireless", "untag-resource" }, input)
end

--- Updates properties of a destination
--- @param input table|nil The input table for the update_destination command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_destination(input)
	return common.execute_aws_command_with_input({ "iotwireless", "update-destination" }, input)
end

--- Update the event configuration based on resource types
--- @param input table|nil The input table for the update_event_configuration_by_resource_types command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_event_configuration_by_resource_types(input)
	return common.execute_aws_command_with_input({ "iotwireless", "update-event-configuration-by-resource-types" }, input)
end

--- Updates properties of a FUOTA task
--- @param input table|nil The input table for the update_fuota_task command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_fuota_task(input)
	return common.execute_aws_command_with_input({ "iotwireless", "update-fuota-task" }, input)
end

--- Set default log level, or log levels by resource types
--- @param input table|nil The input table for the update_log_levels_by_resource_types command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_log_levels_by_resource_types(input)
	return common.execute_aws_command_with_input({ "iotwireless", "update-log-levels-by-resource-types" }, input)
end

--- Update the summary metric configuration
--- @param input table|nil The input table for the update_metric_configuration command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_metric_configuration(input)
	return common.execute_aws_command_with_input({ "iotwireless", "update-metric-configuration" }, input)
end

--- Updates properties of a multicast group session
--- @param input table|nil The input table for the update_multicast_group command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_multicast_group(input)
	return common.execute_aws_command_with_input({ "iotwireless", "update-multicast-group" }, input)
end

--- Update network analyzer configuration
--- @param input table|nil The input table for the update_network_analyzer_configuration command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_network_analyzer_configuration(input)
	return common.execute_aws_command_with_input({ "iotwireless", "update-network-analyzer-configuration" }, input)
end

--- Updates properties of a partner account
--- @param input table|nil The input table for the update_partner_account command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_partner_account(input)
	return common.execute_aws_command_with_input({ "iotwireless", "update-partner-account" }, input)
end

--- Update the position information of a resource
--- @param input table|nil The input table for the update_position command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_position(input)
	return common.execute_aws_command_with_input({ "iotwireless", "update-position" }, input)
end

--- Update the event configuration for a particular resource identifier
--- @param input table|nil The input table for the update_resource_event_configuration command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_resource_event_configuration(input)
	return common.execute_aws_command_with_input({ "iotwireless", "update-resource-event-configuration" }, input)
end

--- Update the position information of a given wireless device or a wireless gateway resource
--- @param input table|nil The input table for the update_resource_position command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_resource_position(input)
	return common.execute_aws_command_with_input({ "iotwireless", "update-resource-position" }, input)
end

--- Updates properties of a wireless device
--- @param input table|nil The input table for the update_wireless_device command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_wireless_device(input)
	return common.execute_aws_command_with_input({ "iotwireless", "update-wireless-device" }, input)
end

--- Update an import task to add more devices to the task
--- @param input table|nil The input table for the update_wireless_device_import_task command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_wireless_device_import_task(input)
	return common.execute_aws_command_with_input({ "iotwireless", "update-wireless-device-import-task" }, input)
end

--- Updates properties of a wireless gateway
--- @param input table|nil The input table for the update_wireless_gateway command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_wireless_gateway(input)
	return common.execute_aws_command_with_input({ "iotwireless", "update-wireless-gateway" }, input)
end

return M
