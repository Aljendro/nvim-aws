-- AUTOGENERATED FILE - DO NOT EDIT
-- AWS Service: cognito-sync

local common = require("nvim-aws.wrappers.common")

--- AWS COGNITO-SYNC service functions
local M = {}

--- Initiates a bulk publish of all existing datasets for an Identity Pool to the configured stream
--- @param input table|nil The input table for the bulk_publish command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.bulk_publish(input)
	return common.execute_aws_command_with_input({ "cognito-sync", "bulk-publish" }, input)
end

--- Deletes the specific dataset
--- @param input table|nil The input table for the delete_dataset command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_dataset(input)
	return common.execute_aws_command_with_input({ "cognito-sync", "delete-dataset" }, input)
end

--- Gets meta data about a dataset by identity and dataset name
--- @param input table|nil The input table for the describe_dataset command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_dataset(input)
	return common.execute_aws_command_with_input({ "cognito-sync", "describe-dataset" }, input)
end

--- Gets usage details (for example, data storage) about a particular identity pool
--- @param input table|nil The input table for the describe_identity_pool_usage command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_identity_pool_usage(input)
	return common.execute_aws_command_with_input({ "cognito-sync", "describe-identity-pool-usage" }, input)
end

--- Gets usage information for an identity, including number of datasets and data usage
--- @param input table|nil The input table for the describe_identity_usage command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_identity_usage(input)
	return common.execute_aws_command_with_input({ "cognito-sync", "describe-identity-usage" }, input)
end

--- Get the status of the last BulkPublish operation for an identity pool
--- @param input table|nil The input table for the get_bulk_publish_details command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_bulk_publish_details(input)
	return common.execute_aws_command_with_input({ "cognito-sync", "get-bulk-publish-details" }, input)
end

--- Gets the events and the corresponding Lambda functions associated with an identity pool
--- @param input table|nil The input table for the get_cognito_events command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_cognito_events(input)
	return common.execute_aws_command_with_input({ "cognito-sync", "get-cognito-events" }, input)
end

--- Gets the configuration settings of an identity pool
--- @param input table|nil The input table for the get_identity_pool_configuration command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_identity_pool_configuration(input)
	return common.execute_aws_command_with_input({ "cognito-sync", "get-identity-pool-configuration" }, input)
end

--- Lists datasets for an identity
--- @param input table|nil The input table for the list_datasets command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_datasets(input)
	return common.execute_aws_command_with_input({ "cognito-sync", "list-datasets" }, input)
end

--- Gets a list of identity pools registered with Cognito
--- @param input table|nil The input table for the list_identity_pool_usage command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_identity_pool_usage(input)
	return common.execute_aws_command_with_input({ "cognito-sync", "list-identity-pool-usage" }, input)
end

--- Gets paginated records, optionally changed after a particular sync count for a dataset and identity
--- @param input table|nil The input table for the list_records command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_records(input)
	return common.execute_aws_command_with_input({ "cognito-sync", "list-records" }, input)
end

--- Registers a device to receive push sync notifications
--- @param input table|nil The input table for the register_device command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.register_device(input)
	return common.execute_aws_command_with_input({ "cognito-sync", "register-device" }, input)
end

--- Sets the AWS Lambda function for a given event type for an identity pool
--- @param input table|nil The input table for the set_cognito_events command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.set_cognito_events(input)
	return common.execute_aws_command_with_input({ "cognito-sync", "set-cognito-events" }, input)
end

--- Sets the necessary configuration for push sync
--- @param input table|nil The input table for the set_identity_pool_configuration command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.set_identity_pool_configuration(input)
	return common.execute_aws_command_with_input({ "cognito-sync", "set-identity-pool-configuration" }, input)
end

--- Subscribes to receive notifications when a dataset is modified by another device
--- @param input table|nil The input table for the subscribe_to_dataset command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.subscribe_to_dataset(input)
	return common.execute_aws_command_with_input({ "cognito-sync", "subscribe-to-dataset" }, input)
end

--- Unsubscribes from receiving notifications when a dataset is modified by another device
--- @param input table|nil The input table for the unsubscribe_from_dataset command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.unsubscribe_from_dataset(input)
	return common.execute_aws_command_with_input({ "cognito-sync", "unsubscribe-from-dataset" }, input)
end

--- Posts updates to records and adds and deletes records for a dataset and user
--- @param input table|nil The input table for the update_records command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_records(input)
	return common.execute_aws_command_with_input({ "cognito-sync", "update-records" }, input)
end

return M
