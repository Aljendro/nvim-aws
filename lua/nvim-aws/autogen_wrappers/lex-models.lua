-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: lex-model-building-service

local common = require("nvim-aws.wrappers.common")

--- AWS LEX-MODELS service functions
local M = {}

--- Creates a new version of the bot based on the $LATEST version
--- @param input table The input table for the create_bot_version command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_bot_version(input)
	return common.execute_aws_command_with_input({ "lex-models", "create-bot-version" }, input)
end

--- Creates a new version of an intent based on the $LATEST version of the intent
--- @param input table The input table for the create_intent_version command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_intent_version(input)
	return common.execute_aws_command_with_input({ "lex-models", "create-intent-version" }, input)
end

--- Creates a new version of a slot type based on the $LATEST version of the specified slot type
--- @param input table The input table for the create_slot_type_version command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_slot_type_version(input)
	return common.execute_aws_command_with_input({ "lex-models", "create-slot-type-version" }, input)
end

--- Deletes all versions of the bot, including the $LATEST version
--- @param input table The input table for the delete_bot command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_bot(input)
	return common.execute_aws_command_with_input({ "lex-models", "delete-bot" }, input)
end

--- Deletes an alias for the specified bot
--- @param input table The input table for the delete_bot_alias command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_bot_alias(input)
	return common.execute_aws_command_with_input({ "lex-models", "delete-bot-alias" }, input)
end

--- Deletes the association between an Amazon Lex bot and a messaging platform
--- @param input table The input table for the delete_bot_channel_association command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_bot_channel_association(input)
	return common.execute_aws_command_with_input({ "lex-models", "delete-bot-channel-association" }, input)
end

--- Deletes a specific version of a bot
--- @param input table The input table for the delete_bot_version command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_bot_version(input)
	return common.execute_aws_command_with_input({ "lex-models", "delete-bot-version" }, input)
end

--- Deletes all versions of the intent, including the $LATEST version
--- @param input table The input table for the delete_intent command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_intent(input)
	return common.execute_aws_command_with_input({ "lex-models", "delete-intent" }, input)
end

--- Deletes a specific version of an intent
--- @param input table The input table for the delete_intent_version command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_intent_version(input)
	return common.execute_aws_command_with_input({ "lex-models", "delete-intent-version" }, input)
end

--- Deletes all versions of the slot type, including the $LATEST version
--- @param input table The input table for the delete_slot_type command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_slot_type(input)
	return common.execute_aws_command_with_input({ "lex-models", "delete-slot-type" }, input)
end

--- Deletes a specific version of a slot type
--- @param input table The input table for the delete_slot_type_version command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_slot_type_version(input)
	return common.execute_aws_command_with_input({ "lex-models", "delete-slot-type-version" }, input)
end

--- Deletes stored utterances
--- @param input table The input table for the delete_utterances command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_utterances(input)
	return common.execute_aws_command_with_input({ "lex-models", "delete-utterances" }, input)
end

--- Returns metadata information for a specific bot
--- @param input table The input table for the get_bot command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_bot(input)
	return common.execute_aws_command_with_input({ "lex-models", "get-bot" }, input)
end

--- Returns information about an Amazon Lex bot alias
--- @param input table The input table for the get_bot_alias command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_bot_alias(input)
	return common.execute_aws_command_with_input({ "lex-models", "get-bot-alias" }, input)
end

--- Returns a list of aliases for a specified Amazon Lex bot
--- @param input table The input table for the get_bot_aliases command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_bot_aliases(input)
	return common.execute_aws_command_with_input({ "lex-models", "get-bot-aliases" }, input)
end

--- Returns information about the association between an Amazon Lex bot and a messaging platform
--- @param input table The input table for the get_bot_channel_association command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_bot_channel_association(input)
	return common.execute_aws_command_with_input({ "lex-models", "get-bot-channel-association" }, input)
end

--- Returns a list of all of the channels associated with the specified bot
--- @param input table The input table for the get_bot_channel_associations command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_bot_channel_associations(input)
	return common.execute_aws_command_with_input({ "lex-models", "get-bot-channel-associations" }, input)
end

--- Gets information about all of the versions of a bot
--- @param input table The input table for the get_bot_versions command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_bot_versions(input)
	return common.execute_aws_command_with_input({ "lex-models", "get-bot-versions" }, input)
end

--- Returns bot information as follows: If you provide the nameContains field, the response includes information for the $LATEST version of all bots whose name contains the specified string
--- @param input table The input table for the get_bots command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_bots(input)
	return common.execute_aws_command_with_input({ "lex-models", "get-bots" }, input)
end

--- Returns information about a built-in intent
--- @param input table The input table for the get_builtin_intent command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_builtin_intent(input)
	return common.execute_aws_command_with_input({ "lex-models", "get-builtin-intent" }, input)
end

--- Gets a list of built-in intents that meet the specified criteria
--- @param input table The input table for the get_builtin_intents command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_builtin_intents(input)
	return common.execute_aws_command_with_input({ "lex-models", "get-builtin-intents" }, input)
end

--- Gets a list of built-in slot types that meet the specified criteria
--- @param input table The input table for the get_builtin_slot_types command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_builtin_slot_types(input)
	return common.execute_aws_command_with_input({ "lex-models", "get-builtin-slot-types" }, input)
end

--- Exports the contents of a Amazon Lex resource in a specified format
--- @param input table The input table for the get_export command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_export(input)
	return common.execute_aws_command_with_input({ "lex-models", "get-export" }, input)
end

--- Gets information about an import job started with the StartImport operation
--- @param input table The input table for the get_import command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_import(input)
	return common.execute_aws_command_with_input({ "lex-models", "get-import" }, input)
end

--- Returns information about an intent
--- @param input table The input table for the get_intent command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_intent(input)
	return common.execute_aws_command_with_input({ "lex-models", "get-intent" }, input)
end

--- Gets information about all of the versions of an intent
--- @param input table The input table for the get_intent_versions command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_intent_versions(input)
	return common.execute_aws_command_with_input({ "lex-models", "get-intent-versions" }, input)
end

--- Returns intent information as follows: If you specify the nameContains field, returns the $LATEST version of all intents that contain the specified string
--- @param input table The input table for the get_intents command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_intents(input)
	return common.execute_aws_command_with_input({ "lex-models", "get-intents" }, input)
end

--- Provides details about an ongoing or complete migration from an Amazon Lex V1 bot to an Amazon Lex V2 bot
--- @param input table The input table for the get_migration command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_migration(input)
	return common.execute_aws_command_with_input({ "lex-models", "get-migration" }, input)
end

--- Gets a list of migrations between Amazon Lex V1 and Amazon Lex V2
--- @param input table The input table for the get_migrations command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_migrations(input)
	return common.execute_aws_command_with_input({ "lex-models", "get-migrations" }, input)
end

--- Returns information about a specific version of a slot type
--- @param input table The input table for the get_slot_type command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_slot_type(input)
	return common.execute_aws_command_with_input({ "lex-models", "get-slot-type" }, input)
end

--- Gets information about all versions of a slot type
--- @param input table The input table for the get_slot_type_versions command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_slot_type_versions(input)
	return common.execute_aws_command_with_input({ "lex-models", "get-slot-type-versions" }, input)
end

--- Returns slot type information as follows: If you specify the nameContains field, returns the $LATEST version of all slot types that contain the specified string
--- @param input table The input table for the get_slot_types command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_slot_types(input)
	return common.execute_aws_command_with_input({ "lex-models", "get-slot-types" }, input)
end

--- Use the GetUtterancesView operation to get information about the utterances that your users have made to your bot
--- @param input table The input table for the get_utterances_view command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_utterances_view(input)
	return common.execute_aws_command_with_input({ "lex-models", "get-utterances-view" }, input)
end

--- Gets a list of tags associated with the specified resource
--- @param input table The input table for the list_tags_for_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_tags_for_resource(input)
	return common.execute_aws_command_with_input({ "lex-models", "list-tags-for-resource" }, input)
end

--- Creates an Amazon Lex conversational bot or replaces an existing bot
--- @param input table The input table for the put_bot command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.put_bot(input)
	return common.execute_aws_command_with_input({ "lex-models", "put-bot" }, input)
end

--- Creates an alias for the specified version of the bot or replaces an alias for the specified bot
--- @param input table The input table for the put_bot_alias command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.put_bot_alias(input)
	return common.execute_aws_command_with_input({ "lex-models", "put-bot-alias" }, input)
end

--- Creates an intent or replaces an existing intent
--- @param input table The input table for the put_intent command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.put_intent(input)
	return common.execute_aws_command_with_input({ "lex-models", "put-intent" }, input)
end

--- Creates a custom slot type or replaces an existing custom slot type
--- @param input table The input table for the put_slot_type command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.put_slot_type(input)
	return common.execute_aws_command_with_input({ "lex-models", "put-slot-type" }, input)
end

--- Starts a job to import a resource to Amazon Lex
--- @param input table The input table for the start_import command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.start_import(input)
	return common.execute_aws_command_with_input({ "lex-models", "start-import" }, input)
end

--- Starts migrating a bot from Amazon Lex V1 to Amazon Lex V2
--- @param input table The input table for the start_migration command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.start_migration(input)
	return common.execute_aws_command_with_input({ "lex-models", "start-migration" }, input)
end

--- Adds the specified tags to the specified resource
--- @param input table The input table for the tag_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.tag_resource(input)
	return common.execute_aws_command_with_input({ "lex-models", "tag-resource" }, input)
end

--- Removes tags from a bot, bot alias or bot channel
--- @param input table The input table for the untag_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.untag_resource(input)
	return common.execute_aws_command_with_input({ "lex-models", "untag-resource" }, input)
end

return M
