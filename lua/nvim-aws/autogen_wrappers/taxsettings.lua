-- AUTOGENERATED FILE - DO NOT EDIT
-- AWS Service: taxsettings

local common = require("nvim-aws.common")

--- AWS taxsettings service functions
local M = {}

--- AWS taxsettings batch-delete-tax-registration operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.batch_delete_tax_registration(input, callbacks)
	return common.execute_aws_command_skeleton({ "taxsettings", "batch-delete-tax-registration" }, input, callbacks)
end

--- AWS taxsettings batch-get-tax-exemptions operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.batch_get_tax_exemptions(input, callbacks)
	return common.execute_aws_command_skeleton({ "taxsettings", "batch-get-tax-exemptions" }, input, callbacks)
end

--- AWS taxsettings batch-put-tax-registration operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.batch_put_tax_registration(input, callbacks)
	return common.execute_aws_command_skeleton({ "taxsettings", "batch-put-tax-registration" }, input, callbacks)
end

--- AWS taxsettings delete-supplemental-tax-registration operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_supplemental_tax_registration(input, callbacks)
	return common.execute_aws_command_skeleton({ "taxsettings", "delete-supplemental-tax-registration" }, input, callbacks)
end

--- AWS taxsettings delete-tax-registration operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_tax_registration(input, callbacks)
	return common.execute_aws_command_skeleton({ "taxsettings", "delete-tax-registration" }, input, callbacks)
end

--- AWS taxsettings get-tax-exemption-types operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_tax_exemption_types(input, callbacks)
	return common.execute_aws_command_skeleton({ "taxsettings", "get-tax-exemption-types" }, input, callbacks)
end

--- AWS taxsettings get-tax-inheritance operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_tax_inheritance(input, callbacks)
	return common.execute_aws_command_skeleton({ "taxsettings", "get-tax-inheritance" }, input, callbacks)
end

--- AWS taxsettings get-tax-registration operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_tax_registration(input, callbacks)
	return common.execute_aws_command_skeleton({ "taxsettings", "get-tax-registration" }, input, callbacks)
end

--- AWS taxsettings get-tax-registration-document operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_tax_registration_document(input, callbacks)
	return common.execute_aws_command_skeleton({ "taxsettings", "get-tax-registration-document" }, input, callbacks)
end

--- AWS taxsettings list-supplemental-tax-registrations operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_supplemental_tax_registrations(input, callbacks)
	return common.execute_aws_command_skeleton({ "taxsettings", "list-supplemental-tax-registrations" }, input, callbacks)
end

--- AWS taxsettings list-tax-exemptions operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_tax_exemptions(input, callbacks)
	return common.execute_aws_command_skeleton({ "taxsettings", "list-tax-exemptions" }, input, callbacks)
end

--- AWS taxsettings list-tax-registrations operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_tax_registrations(input, callbacks)
	return common.execute_aws_command_skeleton({ "taxsettings", "list-tax-registrations" }, input, callbacks)
end

--- AWS taxsettings put-supplemental-tax-registration operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.put_supplemental_tax_registration(input, callbacks)
	return common.execute_aws_command_skeleton({ "taxsettings", "put-supplemental-tax-registration" }, input, callbacks)
end

--- AWS taxsettings put-tax-exemption operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.put_tax_exemption(input, callbacks)
	return common.execute_aws_command_skeleton({ "taxsettings", "put-tax-exemption" }, input, callbacks)
end

--- AWS taxsettings put-tax-inheritance operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.put_tax_inheritance(input, callbacks)
	return common.execute_aws_command_skeleton({ "taxsettings", "put-tax-inheritance" }, input, callbacks)
end

--- AWS taxsettings put-tax-registration operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.put_tax_registration(input, callbacks)
	return common.execute_aws_command_skeleton({ "taxsettings", "put-tax-registration" }, input, callbacks)
end

return M
