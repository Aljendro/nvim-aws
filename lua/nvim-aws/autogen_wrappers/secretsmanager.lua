-- AUTOGENERATED FILE - DO NOT EDIT
-- AWS Service: secrets-manager

local common = require("nvim-aws.wrappers.common")

--- AWS SECRETSMANAGER service functions
local M = {}

--- Retrieves the contents of the encrypted fields SecretString or SecretBinary for up to 20 secrets
--- @param input table|nil The input table for the batch_get_secret_value command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.batch_get_secret_value(input)
	return common.execute_aws_command_with_input({ "secretsmanager", "batch-get-secret-value" }, input)
end

--- Turns off automatic rotation, and if a rotation is currently in progress, cancels the rotation
--- @param input table|nil The input table for the cancel_rotate_secret command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.cancel_rotate_secret(input)
	return common.execute_aws_command_with_input({ "secretsmanager", "cancel-rotate-secret" }, input)
end

--- Creates a new secret
--- @param input table|nil The input table for the create_secret command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_secret(input)
	return common.execute_aws_command_with_input({ "secretsmanager", "create-secret" }, input)
end

--- Deletes the resource-based permission policy attached to the secret
--- @param input table|nil The input table for the delete_resource_policy command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_resource_policy(input)
	return common.execute_aws_command_with_input({ "secretsmanager", "delete-resource-policy" }, input)
end

--- Deletes a secret and all of its versions
--- @param input table|nil The input table for the delete_secret command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_secret(input)
	return common.execute_aws_command_with_input({ "secretsmanager", "delete-secret" }, input)
end

--- Retrieves the details of a secret
--- @param input table|nil The input table for the describe_secret command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_secret(input)
	return common.execute_aws_command_with_input({ "secretsmanager", "describe-secret" }, input)
end

--- Generates a random password
--- @param input table|nil The input table for the get_random_password command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_random_password(input)
	return common.execute_aws_command_with_input({ "secretsmanager", "get-random-password" }, input)
end

--- Retrieves the JSON text of the resource-based policy document attached to the secret
--- @param input table|nil The input table for the get_resource_policy command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_resource_policy(input)
	return common.execute_aws_command_with_input({ "secretsmanager", "get-resource-policy" }, input)
end

--- Retrieves the contents of the encrypted fields SecretString or SecretBinary from the specified version of a secret, whichever contains content
--- @param input table|nil The input table for the get_secret_value command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_secret_value(input)
	return common.execute_aws_command_with_input({ "secretsmanager", "get-secret-value" }, input)
end

--- Lists the versions of a secret
--- @param input table|nil The input table for the list_secret_version_ids command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_secret_version_ids(input)
	return common.execute_aws_command_with_input({ "secretsmanager", "list-secret-version-ids" }, input)
end

--- Lists the secrets that are stored by Secrets Manager in the Amazon Web Services account, not including secrets that are marked for deletion
--- @param input table|nil The input table for the list_secrets command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_secrets(input)
	return common.execute_aws_command_with_input({ "secretsmanager", "list-secrets" }, input)
end

--- Attaches a resource-based permission policy to a secret
--- @param input table|nil The input table for the put_resource_policy command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.put_resource_policy(input)
	return common.execute_aws_command_with_input({ "secretsmanager", "put-resource-policy" }, input)
end

--- Creates a new version with a new encrypted secret value and attaches it to the secret
--- @param input table|nil The input table for the put_secret_value command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.put_secret_value(input)
	return common.execute_aws_command_with_input({ "secretsmanager", "put-secret-value" }, input)
end

--- For a secret that is replicated to other Regions, deletes the secret replicas from the Regions you specify
--- @param input table|nil The input table for the remove_regions_from_replication command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.remove_regions_from_replication(input)
	return common.execute_aws_command_with_input({ "secretsmanager", "remove-regions-from-replication" }, input)
end

--- Replicates the secret to a new Regions
--- @param input table|nil The input table for the replicate_secret_to_regions command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.replicate_secret_to_regions(input)
	return common.execute_aws_command_with_input({ "secretsmanager", "replicate-secret-to-regions" }, input)
end

--- Cancels the scheduled deletion of a secret by removing the DeletedDate time stamp
--- @param input table|nil The input table for the restore_secret command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.restore_secret(input)
	return common.execute_aws_command_with_input({ "secretsmanager", "restore-secret" }, input)
end

--- Configures and starts the asynchronous process of rotating the secret
--- @param input table|nil The input table for the rotate_secret command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.rotate_secret(input)
	return common.execute_aws_command_with_input({ "secretsmanager", "rotate-secret" }, input)
end

--- Removes the link between the replica secret and the primary secret and promotes the replica to a primary secret in the replica Region
--- @param input table|nil The input table for the stop_replication_to_replica command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.stop_replication_to_replica(input)
	return common.execute_aws_command_with_input({ "secretsmanager", "stop-replication-to-replica" }, input)
end

--- Attaches tags to a secret
--- @param input table|nil The input table for the tag_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.tag_resource(input)
	return common.execute_aws_command_with_input({ "secretsmanager", "tag-resource" }, input)
end

--- Removes specific tags from a secret
--- @param input table|nil The input table for the untag_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.untag_resource(input)
	return common.execute_aws_command_with_input({ "secretsmanager", "untag-resource" }, input)
end

--- Modifies the details of a secret, including metadata and the secret value
--- @param input table|nil The input table for the update_secret command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_secret(input)
	return common.execute_aws_command_with_input({ "secretsmanager", "update-secret" }, input)
end

--- Modifies the staging labels attached to a version of a secret
--- @param input table|nil The input table for the update_secret_version_stage command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_secret_version_stage(input)
	return common.execute_aws_command_with_input({ "secretsmanager", "update-secret-version-stage" }, input)
end

--- Validates that a resource policy does not grant a wide range of principals access to your secret
--- @param input table|nil The input table for the validate_resource_policy command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.validate_resource_policy(input)
	return common.execute_aws_command_with_input({ "secretsmanager", "validate-resource-policy" }, input)
end

return M
