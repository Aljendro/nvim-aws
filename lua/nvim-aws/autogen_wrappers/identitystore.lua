-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-07 21:36:04
-- AWS Service: identitystore

local common = require("nvim-aws.wrappers.common")

--- AWS IDENTITYSTORE service functions
local M = {}

--- Retrieves GroupId in an identity store
--- @param input table The input table for the get_group_id command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_group_id(input)
	return common.execute_aws_command_with_input({ "identitystore", "get-group-id" }, input)
end

--- Retrieves the MembershipId in an identity store
--- @param input table The input table for the get_group_membership_id command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_group_membership_id(input)
	return common.execute_aws_command_with_input({ "identitystore", "get-group-membership-id" }, input)
end

--- Retrieves the UserId in an identity store
--- @param input table The input table for the get_user_id command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_user_id(input)
	return common.execute_aws_command_with_input({ "identitystore", "get-user-id" }, input)
end

--- Checks the user's membership in all requested groups and returns if the member exists in all queried groups
--- @param input table The input table for the is_member_in_groups command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.is_member_in_groups(input)
	return common.execute_aws_command_with_input({ "identitystore", "is-member-in-groups" }, input)
end

--- For the specified member in the specified identity store, returns the list of all GroupMembership objects and returns results in paginated form
--- @param input table The input table for the list_group_memberships_for_member command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_group_memberships_for_member(input)
	return common.execute_aws_command_with_input({ "identitystore", "list-group-memberships-for-member" }, input)
end

return M
