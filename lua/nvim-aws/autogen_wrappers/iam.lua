-- AUTOGENERATED FILE - DO NOT EDIT
-- AWS Service: iam

local common = require("nvim-aws.common")

--- AWS iam service functions
local M = {}

--- AWS iam add-client-id-to-open-id-connect-provider operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.add_client_id_to_open_id_connect_provider(input)
	return common.execute_aws_command_skeleton({ "iam", "add-client-id-to-open-id-connect-provider" }, input)
end

--- AWS iam add-role-to-instance-profile operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.add_role_to_instance_profile(input)
	return common.execute_aws_command_skeleton({ "iam", "add-role-to-instance-profile" }, input)
end

--- AWS iam add-user-to-group operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.add_user_to_group(input)
	return common.execute_aws_command_skeleton({ "iam", "add-user-to-group" }, input)
end

--- AWS iam attach-group-policy operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.attach_group_policy(input)
	return common.execute_aws_command_skeleton({ "iam", "attach-group-policy" }, input)
end

--- AWS iam attach-role-policy operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.attach_role_policy(input)
	return common.execute_aws_command_skeleton({ "iam", "attach-role-policy" }, input)
end

--- AWS iam attach-user-policy operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.attach_user_policy(input)
	return common.execute_aws_command_skeleton({ "iam", "attach-user-policy" }, input)
end

--- AWS iam change-password operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.change_password(input)
	return common.execute_aws_command_skeleton({ "iam", "change-password" }, input)
end

--- AWS iam create-access-key operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.create_access_key(input)
	return common.execute_aws_command_skeleton({ "iam", "create-access-key" }, input)
end

--- AWS iam create-account-alias operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.create_account_alias(input)
	return common.execute_aws_command_skeleton({ "iam", "create-account-alias" }, input)
end

--- AWS iam create-group operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.create_group(input)
	return common.execute_aws_command_skeleton({ "iam", "create-group" }, input)
end

--- AWS iam create-instance-profile operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.create_instance_profile(input)
	return common.execute_aws_command_skeleton({ "iam", "create-instance-profile" }, input)
end

--- AWS iam create-login-profile operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.create_login_profile(input)
	return common.execute_aws_command_skeleton({ "iam", "create-login-profile" }, input)
end

--- AWS iam create-open-id-connect-provider operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.create_open_id_connect_provider(input)
	return common.execute_aws_command_skeleton({ "iam", "create-open-id-connect-provider" }, input)
end

--- AWS iam create-policy operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.create_policy(input)
	return common.execute_aws_command_skeleton({ "iam", "create-policy" }, input)
end

--- AWS iam create-policy-version operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.create_policy_version(input)
	return common.execute_aws_command_skeleton({ "iam", "create-policy-version" }, input)
end

--- AWS iam create-role operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.create_role(input)
	return common.execute_aws_command_skeleton({ "iam", "create-role" }, input)
end

--- AWS iam create-saml-provider operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.create_saml_provider(input)
	return common.execute_aws_command_skeleton({ "iam", "create-saml-provider" }, input)
end

--- AWS iam create-service-linked-role operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.create_service_linked_role(input)
	return common.execute_aws_command_skeleton({ "iam", "create-service-linked-role" }, input)
end

--- AWS iam create-service-specific-credential operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.create_service_specific_credential(input)
	return common.execute_aws_command_skeleton({ "iam", "create-service-specific-credential" }, input)
end

--- AWS iam create-user operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.create_user(input)
	return common.execute_aws_command_skeleton({ "iam", "create-user" }, input)
end

--- AWS iam create-virtual-mfa-device operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.create_virtual_mfa_device(input)
	return common.execute_aws_command({ "iam", "create-virtual-mfa-device" }, input)
end

--- AWS iam deactivate-mfa-device operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.deactivate_mfa_device(input)
	return common.execute_aws_command_skeleton({ "iam", "deactivate-mfa-device" }, input)
end

--- AWS iam delete-access-key operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.delete_access_key(input)
	return common.execute_aws_command_skeleton({ "iam", "delete-access-key" }, input)
end

--- AWS iam delete-account-alias operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.delete_account_alias(input)
	return common.execute_aws_command_skeleton({ "iam", "delete-account-alias" }, input)
end

--- AWS iam delete-account-password-policy operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.delete_account_password_policy(input)
	return common.execute_aws_command_skeleton({ "iam", "delete-account-password-policy" }, input)
end

--- AWS iam delete-group operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.delete_group(input)
	return common.execute_aws_command_skeleton({ "iam", "delete-group" }, input)
end

--- AWS iam delete-group-policy operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.delete_group_policy(input)
	return common.execute_aws_command_skeleton({ "iam", "delete-group-policy" }, input)
end

--- AWS iam delete-instance-profile operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.delete_instance_profile(input)
	return common.execute_aws_command_skeleton({ "iam", "delete-instance-profile" }, input)
end

--- AWS iam delete-login-profile operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.delete_login_profile(input)
	return common.execute_aws_command_skeleton({ "iam", "delete-login-profile" }, input)
end

--- AWS iam delete-open-id-connect-provider operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.delete_open_id_connect_provider(input)
	return common.execute_aws_command_skeleton({ "iam", "delete-open-id-connect-provider" }, input)
end

--- AWS iam delete-policy operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.delete_policy(input)
	return common.execute_aws_command_skeleton({ "iam", "delete-policy" }, input)
end

--- AWS iam delete-policy-version operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.delete_policy_version(input)
	return common.execute_aws_command_skeleton({ "iam", "delete-policy-version" }, input)
end

--- AWS iam delete-role operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.delete_role(input)
	return common.execute_aws_command_skeleton({ "iam", "delete-role" }, input)
end

--- AWS iam delete-role-permissions-boundary operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.delete_role_permissions_boundary(input)
	return common.execute_aws_command_skeleton({ "iam", "delete-role-permissions-boundary" }, input)
end

--- AWS iam delete-role-policy operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.delete_role_policy(input)
	return common.execute_aws_command_skeleton({ "iam", "delete-role-policy" }, input)
end

--- AWS iam delete-saml-provider operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.delete_saml_provider(input)
	return common.execute_aws_command_skeleton({ "iam", "delete-saml-provider" }, input)
end

--- AWS iam delete-server-certificate operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.delete_server_certificate(input)
	return common.execute_aws_command_skeleton({ "iam", "delete-server-certificate" }, input)
end

--- AWS iam delete-service-linked-role operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.delete_service_linked_role(input)
	return common.execute_aws_command_skeleton({ "iam", "delete-service-linked-role" }, input)
end

--- AWS iam delete-service-specific-credential operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.delete_service_specific_credential(input)
	return common.execute_aws_command_skeleton({ "iam", "delete-service-specific-credential" }, input)
end

--- AWS iam delete-signing-certificate operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.delete_signing_certificate(input)
	return common.execute_aws_command_skeleton({ "iam", "delete-signing-certificate" }, input)
end

--- AWS iam delete-ssh-public-key operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.delete_ssh_public_key(input)
	return common.execute_aws_command_skeleton({ "iam", "delete-ssh-public-key" }, input)
end

--- AWS iam delete-user operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.delete_user(input)
	return common.execute_aws_command_skeleton({ "iam", "delete-user" }, input)
end

--- AWS iam delete-user-permissions-boundary operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.delete_user_permissions_boundary(input)
	return common.execute_aws_command_skeleton({ "iam", "delete-user-permissions-boundary" }, input)
end

--- AWS iam delete-user-policy operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.delete_user_policy(input)
	return common.execute_aws_command_skeleton({ "iam", "delete-user-policy" }, input)
end

--- AWS iam delete-virtual-mfa-device operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.delete_virtual_mfa_device(input)
	return common.execute_aws_command_skeleton({ "iam", "delete-virtual-mfa-device" }, input)
end

--- AWS iam detach-group-policy operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.detach_group_policy(input)
	return common.execute_aws_command_skeleton({ "iam", "detach-group-policy" }, input)
end

--- AWS iam detach-role-policy operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.detach_role_policy(input)
	return common.execute_aws_command_skeleton({ "iam", "detach-role-policy" }, input)
end

--- AWS iam detach-user-policy operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.detach_user_policy(input)
	return common.execute_aws_command_skeleton({ "iam", "detach-user-policy" }, input)
end

--- AWS iam disable-organizations-root-credentials-management operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.disable_organizations_root_credentials_management(input)
	return common.execute_aws_command_skeleton({ "iam", "disable-organizations-root-credentials-management" }, input)
end

--- AWS iam disable-organizations-root-sessions operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.disable_organizations_root_sessions(input)
	return common.execute_aws_command_skeleton({ "iam", "disable-organizations-root-sessions" }, input)
end

--- AWS iam enable-mfa-device operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.enable_mfa_device(input)
	return common.execute_aws_command_skeleton({ "iam", "enable-mfa-device" }, input)
end

--- AWS iam enable-organizations-root-credentials-management operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.enable_organizations_root_credentials_management(input)
	return common.execute_aws_command_skeleton({ "iam", "enable-organizations-root-credentials-management" }, input)
end

--- AWS iam enable-organizations-root-sessions operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.enable_organizations_root_sessions(input)
	return common.execute_aws_command_skeleton({ "iam", "enable-organizations-root-sessions" }, input)
end

--- AWS iam generate-credential-report operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.generate_credential_report(input)
	return common.execute_aws_command_skeleton({ "iam", "generate-credential-report" }, input)
end

--- AWS iam generate-organizations-access-report operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.generate_organizations_access_report(input)
	return common.execute_aws_command_skeleton({ "iam", "generate-organizations-access-report" }, input)
end

--- AWS iam generate-service-last-accessed-details operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.generate_service_last_accessed_details(input)
	return common.execute_aws_command_skeleton({ "iam", "generate-service-last-accessed-details" }, input)
end

--- AWS iam get-access-key-last-used operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.get_access_key_last_used(input)
	return common.execute_aws_command_skeleton({ "iam", "get-access-key-last-used" }, input)
end

--- AWS iam get-account-authorization-details operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.get_account_authorization_details(input)
	return common.execute_aws_command_skeleton({ "iam", "get-account-authorization-details" }, input)
end

--- AWS iam get-account-password-policy operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.get_account_password_policy(input)
	return common.execute_aws_command_skeleton({ "iam", "get-account-password-policy" }, input)
end

--- AWS iam get-account-summary operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.get_account_summary(input)
	return common.execute_aws_command_skeleton({ "iam", "get-account-summary" }, input)
end

--- AWS iam get-context-keys-for-custom-policy operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.get_context_keys_for_custom_policy(input)
	return common.execute_aws_command_skeleton({ "iam", "get-context-keys-for-custom-policy" }, input)
end

--- AWS iam get-context-keys-for-principal-policy operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.get_context_keys_for_principal_policy(input)
	return common.execute_aws_command_skeleton({ "iam", "get-context-keys-for-principal-policy" }, input)
end

--- AWS iam get-credential-report operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.get_credential_report(input)
	return common.execute_aws_command_skeleton({ "iam", "get-credential-report" }, input)
end

--- AWS iam get-group operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.get_group(input)
	return common.execute_aws_command_skeleton({ "iam", "get-group" }, input)
end

--- AWS iam get-group-policy operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.get_group_policy(input)
	return common.execute_aws_command_skeleton({ "iam", "get-group-policy" }, input)
end

--- AWS iam get-instance-profile operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.get_instance_profile(input)
	return common.execute_aws_command_skeleton({ "iam", "get-instance-profile" }, input)
end

--- AWS iam get-login-profile operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.get_login_profile(input)
	return common.execute_aws_command_skeleton({ "iam", "get-login-profile" }, input)
end

--- AWS iam get-mfa-device operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.get_mfa_device(input)
	return common.execute_aws_command_skeleton({ "iam", "get-mfa-device" }, input)
end

--- AWS iam get-open-id-connect-provider operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.get_open_id_connect_provider(input)
	return common.execute_aws_command_skeleton({ "iam", "get-open-id-connect-provider" }, input)
end

--- AWS iam get-organizations-access-report operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.get_organizations_access_report(input)
	return common.execute_aws_command_skeleton({ "iam", "get-organizations-access-report" }, input)
end

--- AWS iam get-policy operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.get_policy(input)
	return common.execute_aws_command_skeleton({ "iam", "get-policy" }, input)
end

--- AWS iam get-policy-version operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.get_policy_version(input)
	return common.execute_aws_command_skeleton({ "iam", "get-policy-version" }, input)
end

--- AWS iam get-role operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.get_role(input)
	return common.execute_aws_command_skeleton({ "iam", "get-role" }, input)
end

--- AWS iam get-role-policy operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.get_role_policy(input)
	return common.execute_aws_command_skeleton({ "iam", "get-role-policy" }, input)
end

--- AWS iam get-saml-provider operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.get_saml_provider(input)
	return common.execute_aws_command_skeleton({ "iam", "get-saml-provider" }, input)
end

--- AWS iam get-server-certificate operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.get_server_certificate(input)
	return common.execute_aws_command_skeleton({ "iam", "get-server-certificate" }, input)
end

--- AWS iam get-service-last-accessed-details operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.get_service_last_accessed_details(input)
	return common.execute_aws_command_skeleton({ "iam", "get-service-last-accessed-details" }, input)
end

--- AWS iam get-service-last-accessed-details-with-entities operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.get_service_last_accessed_details_with_entities(input)
	return common.execute_aws_command_skeleton({ "iam", "get-service-last-accessed-details-with-entities" }, input)
end

--- AWS iam get-service-linked-role-deletion-status operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.get_service_linked_role_deletion_status(input)
	return common.execute_aws_command_skeleton({ "iam", "get-service-linked-role-deletion-status" }, input)
end

--- AWS iam get-ssh-public-key operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.get_ssh_public_key(input)
	return common.execute_aws_command_skeleton({ "iam", "get-ssh-public-key" }, input)
end

--- AWS iam get-user operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.get_user(input)
	return common.execute_aws_command_skeleton({ "iam", "get-user" }, input)
end

--- AWS iam get-user-policy operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.get_user_policy(input)
	return common.execute_aws_command_skeleton({ "iam", "get-user-policy" }, input)
end

--- AWS iam list-access-keys operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.list_access_keys(input)
	return common.execute_aws_command_skeleton({ "iam", "list-access-keys" }, input)
end

--- AWS iam list-account-aliases operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.list_account_aliases(input)
	return common.execute_aws_command_skeleton({ "iam", "list-account-aliases" }, input)
end

--- AWS iam list-attached-group-policies operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.list_attached_group_policies(input)
	return common.execute_aws_command_skeleton({ "iam", "list-attached-group-policies" }, input)
end

--- AWS iam list-attached-role-policies operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.list_attached_role_policies(input)
	return common.execute_aws_command_skeleton({ "iam", "list-attached-role-policies" }, input)
end

--- AWS iam list-attached-user-policies operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.list_attached_user_policies(input)
	return common.execute_aws_command_skeleton({ "iam", "list-attached-user-policies" }, input)
end

--- AWS iam list-entities-for-policy operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.list_entities_for_policy(input)
	return common.execute_aws_command_skeleton({ "iam", "list-entities-for-policy" }, input)
end

--- AWS iam list-group-policies operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.list_group_policies(input)
	return common.execute_aws_command_skeleton({ "iam", "list-group-policies" }, input)
end

--- AWS iam list-groups operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.list_groups(input)
	return common.execute_aws_command_skeleton({ "iam", "list-groups" }, input)
end

--- AWS iam list-groups-for-user operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.list_groups_for_user(input)
	return common.execute_aws_command_skeleton({ "iam", "list-groups-for-user" }, input)
end

--- AWS iam list-instance-profile-tags operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.list_instance_profile_tags(input)
	return common.execute_aws_command_skeleton({ "iam", "list-instance-profile-tags" }, input)
end

--- AWS iam list-instance-profiles operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.list_instance_profiles(input)
	return common.execute_aws_command_skeleton({ "iam", "list-instance-profiles" }, input)
end

--- AWS iam list-instance-profiles-for-role operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.list_instance_profiles_for_role(input)
	return common.execute_aws_command_skeleton({ "iam", "list-instance-profiles-for-role" }, input)
end

--- AWS iam list-mfa-device-tags operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.list_mfa_device_tags(input)
	return common.execute_aws_command_skeleton({ "iam", "list-mfa-device-tags" }, input)
end

--- AWS iam list-mfa-devices operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.list_mfa_devices(input)
	return common.execute_aws_command_skeleton({ "iam", "list-mfa-devices" }, input)
end

--- AWS iam list-open-id-connect-provider-tags operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.list_open_id_connect_provider_tags(input)
	return common.execute_aws_command_skeleton({ "iam", "list-open-id-connect-provider-tags" }, input)
end

--- AWS iam list-open-id-connect-providers operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.list_open_id_connect_providers(input)
	return common.execute_aws_command_skeleton({ "iam", "list-open-id-connect-providers" }, input)
end

--- AWS iam list-organizations-features operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.list_organizations_features(input)
	return common.execute_aws_command_skeleton({ "iam", "list-organizations-features" }, input)
end

--- AWS iam list-policies operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.list_policies(input)
	return common.execute_aws_command_skeleton({ "iam", "list-policies" }, input)
end

--- AWS iam list-policies-granting-service-access operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.list_policies_granting_service_access(input)
	return common.execute_aws_command_skeleton({ "iam", "list-policies-granting-service-access" }, input)
end

--- AWS iam list-policy-tags operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.list_policy_tags(input)
	return common.execute_aws_command_skeleton({ "iam", "list-policy-tags" }, input)
end

--- AWS iam list-policy-versions operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.list_policy_versions(input)
	return common.execute_aws_command_skeleton({ "iam", "list-policy-versions" }, input)
end

--- AWS iam list-role-policies operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.list_role_policies(input)
	return common.execute_aws_command_skeleton({ "iam", "list-role-policies" }, input)
end

--- AWS iam list-role-tags operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.list_role_tags(input)
	return common.execute_aws_command_skeleton({ "iam", "list-role-tags" }, input)
end

--- AWS iam list-roles operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.list_roles(input)
	return common.execute_aws_command_skeleton({ "iam", "list-roles" }, input)
end

--- AWS iam list-saml-provider-tags operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.list_saml_provider_tags(input)
	return common.execute_aws_command_skeleton({ "iam", "list-saml-provider-tags" }, input)
end

--- AWS iam list-saml-providers operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.list_saml_providers(input)
	return common.execute_aws_command_skeleton({ "iam", "list-saml-providers" }, input)
end

--- AWS iam list-server-certificate-tags operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.list_server_certificate_tags(input)
	return common.execute_aws_command_skeleton({ "iam", "list-server-certificate-tags" }, input)
end

--- AWS iam list-server-certificates operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.list_server_certificates(input)
	return common.execute_aws_command_skeleton({ "iam", "list-server-certificates" }, input)
end

--- AWS iam list-service-specific-credentials operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.list_service_specific_credentials(input)
	return common.execute_aws_command_skeleton({ "iam", "list-service-specific-credentials" }, input)
end

--- AWS iam list-signing-certificates operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.list_signing_certificates(input)
	return common.execute_aws_command_skeleton({ "iam", "list-signing-certificates" }, input)
end

--- AWS iam list-ssh-public-keys operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.list_ssh_public_keys(input)
	return common.execute_aws_command_skeleton({ "iam", "list-ssh-public-keys" }, input)
end

--- AWS iam list-user-policies operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.list_user_policies(input)
	return common.execute_aws_command_skeleton({ "iam", "list-user-policies" }, input)
end

--- AWS iam list-user-tags operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.list_user_tags(input)
	return common.execute_aws_command_skeleton({ "iam", "list-user-tags" }, input)
end

--- AWS iam list-users operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.list_users(input)
	return common.execute_aws_command_skeleton({ "iam", "list-users" }, input)
end

--- AWS iam list-virtual-mfa-devices operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.list_virtual_mfa_devices(input)
	return common.execute_aws_command_skeleton({ "iam", "list-virtual-mfa-devices" }, input)
end

--- AWS iam put-group-policy operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.put_group_policy(input)
	return common.execute_aws_command_skeleton({ "iam", "put-group-policy" }, input)
end

--- AWS iam put-role-permissions-boundary operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.put_role_permissions_boundary(input)
	return common.execute_aws_command_skeleton({ "iam", "put-role-permissions-boundary" }, input)
end

--- AWS iam put-role-policy operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.put_role_policy(input)
	return common.execute_aws_command_skeleton({ "iam", "put-role-policy" }, input)
end

--- AWS iam put-user-permissions-boundary operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.put_user_permissions_boundary(input)
	return common.execute_aws_command_skeleton({ "iam", "put-user-permissions-boundary" }, input)
end

--- AWS iam put-user-policy operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.put_user_policy(input)
	return common.execute_aws_command_skeleton({ "iam", "put-user-policy" }, input)
end

--- AWS iam remove-client-id-from-open-id-connect-provider operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.remove_client_id_from_open_id_connect_provider(input)
	return common.execute_aws_command_skeleton({ "iam", "remove-client-id-from-open-id-connect-provider" }, input)
end

--- AWS iam remove-role-from-instance-profile operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.remove_role_from_instance_profile(input)
	return common.execute_aws_command_skeleton({ "iam", "remove-role-from-instance-profile" }, input)
end

--- AWS iam remove-user-from-group operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.remove_user_from_group(input)
	return common.execute_aws_command_skeleton({ "iam", "remove-user-from-group" }, input)
end

--- AWS iam reset-service-specific-credential operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.reset_service_specific_credential(input)
	return common.execute_aws_command_skeleton({ "iam", "reset-service-specific-credential" }, input)
end

--- AWS iam resync-mfa-device operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.resync_mfa_device(input)
	return common.execute_aws_command_skeleton({ "iam", "resync-mfa-device" }, input)
end

--- AWS iam set-default-policy-version operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.set_default_policy_version(input)
	return common.execute_aws_command_skeleton({ "iam", "set-default-policy-version" }, input)
end

--- AWS iam set-security-token-service-preferences operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.set_security_token_service_preferences(input)
	return common.execute_aws_command_skeleton({ "iam", "set-security-token-service-preferences" }, input)
end

--- AWS iam simulate-custom-policy operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.simulate_custom_policy(input)
	return common.execute_aws_command_skeleton({ "iam", "simulate-custom-policy" }, input)
end

--- AWS iam simulate-principal-policy operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.simulate_principal_policy(input)
	return common.execute_aws_command_skeleton({ "iam", "simulate-principal-policy" }, input)
end

--- AWS iam tag-instance-profile operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.tag_instance_profile(input)
	return common.execute_aws_command_skeleton({ "iam", "tag-instance-profile" }, input)
end

--- AWS iam tag-mfa-device operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.tag_mfa_device(input)
	return common.execute_aws_command_skeleton({ "iam", "tag-mfa-device" }, input)
end

--- AWS iam tag-open-id-connect-provider operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.tag_open_id_connect_provider(input)
	return common.execute_aws_command_skeleton({ "iam", "tag-open-id-connect-provider" }, input)
end

--- AWS iam tag-policy operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.tag_policy(input)
	return common.execute_aws_command_skeleton({ "iam", "tag-policy" }, input)
end

--- AWS iam tag-role operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.tag_role(input)
	return common.execute_aws_command_skeleton({ "iam", "tag-role" }, input)
end

--- AWS iam tag-saml-provider operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.tag_saml_provider(input)
	return common.execute_aws_command_skeleton({ "iam", "tag-saml-provider" }, input)
end

--- AWS iam tag-server-certificate operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.tag_server_certificate(input)
	return common.execute_aws_command_skeleton({ "iam", "tag-server-certificate" }, input)
end

--- AWS iam tag-user operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.tag_user(input)
	return common.execute_aws_command_skeleton({ "iam", "tag-user" }, input)
end

--- AWS iam untag-instance-profile operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.untag_instance_profile(input)
	return common.execute_aws_command_skeleton({ "iam", "untag-instance-profile" }, input)
end

--- AWS iam untag-mfa-device operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.untag_mfa_device(input)
	return common.execute_aws_command_skeleton({ "iam", "untag-mfa-device" }, input)
end

--- AWS iam untag-open-id-connect-provider operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.untag_open_id_connect_provider(input)
	return common.execute_aws_command_skeleton({ "iam", "untag-open-id-connect-provider" }, input)
end

--- AWS iam untag-policy operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.untag_policy(input)
	return common.execute_aws_command_skeleton({ "iam", "untag-policy" }, input)
end

--- AWS iam untag-role operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.untag_role(input)
	return common.execute_aws_command_skeleton({ "iam", "untag-role" }, input)
end

--- AWS iam untag-saml-provider operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.untag_saml_provider(input)
	return common.execute_aws_command_skeleton({ "iam", "untag-saml-provider" }, input)
end

--- AWS iam untag-server-certificate operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.untag_server_certificate(input)
	return common.execute_aws_command_skeleton({ "iam", "untag-server-certificate" }, input)
end

--- AWS iam untag-user operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.untag_user(input)
	return common.execute_aws_command_skeleton({ "iam", "untag-user" }, input)
end

--- AWS iam update-access-key operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.update_access_key(input)
	return common.execute_aws_command_skeleton({ "iam", "update-access-key" }, input)
end

--- AWS iam update-account-password-policy operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.update_account_password_policy(input)
	return common.execute_aws_command_skeleton({ "iam", "update-account-password-policy" }, input)
end

--- AWS iam update-assume-role-policy operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.update_assume_role_policy(input)
	return common.execute_aws_command_skeleton({ "iam", "update-assume-role-policy" }, input)
end

--- AWS iam update-group operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.update_group(input)
	return common.execute_aws_command_skeleton({ "iam", "update-group" }, input)
end

--- AWS iam update-login-profile operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.update_login_profile(input)
	return common.execute_aws_command_skeleton({ "iam", "update-login-profile" }, input)
end

--- AWS iam update-open-id-connect-provider-thumbprint operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.update_open_id_connect_provider_thumbprint(input)
	return common.execute_aws_command_skeleton({ "iam", "update-open-id-connect-provider-thumbprint" }, input)
end

--- AWS iam update-role operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.update_role(input)
	return common.execute_aws_command_skeleton({ "iam", "update-role" }, input)
end

--- AWS iam update-role-description operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.update_role_description(input)
	return common.execute_aws_command_skeleton({ "iam", "update-role-description" }, input)
end

--- AWS iam update-saml-provider operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.update_saml_provider(input)
	return common.execute_aws_command_skeleton({ "iam", "update-saml-provider" }, input)
end

--- AWS iam update-server-certificate operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.update_server_certificate(input)
	return common.execute_aws_command_skeleton({ "iam", "update-server-certificate" }, input)
end

--- AWS iam update-service-specific-credential operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.update_service_specific_credential(input)
	return common.execute_aws_command_skeleton({ "iam", "update-service-specific-credential" }, input)
end

--- AWS iam update-signing-certificate operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.update_signing_certificate(input)
	return common.execute_aws_command_skeleton({ "iam", "update-signing-certificate" }, input)
end

--- AWS iam update-ssh-public-key operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.update_ssh_public_key(input)
	return common.execute_aws_command_skeleton({ "iam", "update-ssh-public-key" }, input)
end

--- AWS iam update-user operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.update_user(input)
	return common.execute_aws_command_skeleton({ "iam", "update-user" }, input)
end

--- AWS iam upload-server-certificate operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.upload_server_certificate(input)
	return common.execute_aws_command_skeleton({ "iam", "upload-server-certificate" }, input)
end

--- AWS iam upload-signing-certificate operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.upload_signing_certificate(input)
	return common.execute_aws_command_skeleton({ "iam", "upload-signing-certificate" }, input)
end

--- AWS iam upload-ssh-public-key operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.upload_ssh_public_key(input)
	return common.execute_aws_command_skeleton({ "iam", "upload-ssh-public-key" }, input)
end

--- AWS iam wait operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.wait(input)
	return common.execute_aws_command({ "iam", "wait" }, input)
end

--- AWS iam wizard operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.wizard(input)
	return common.execute_aws_command({ "iam", "wizard" }, input)
end

return M
