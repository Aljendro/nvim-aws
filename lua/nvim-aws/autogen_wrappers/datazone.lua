-- AUTOGENERATED FILE - DO NOT EDIT
-- AWS Service: datazone

local common = require("nvim-aws.common")

--- AWS datazone service functions
local M = {}

--- AWS datazone accept-predictions operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.accept_predictions(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "accept-predictions" }, input, callbacks)
end

--- AWS datazone accept-subscription-request operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.accept_subscription_request(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "accept-subscription-request" }, input, callbacks)
end

--- AWS datazone add-entity-owner operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.add_entity_owner(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "add-entity-owner" }, input, callbacks)
end

--- AWS datazone add-policy-grant operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.add_policy_grant(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "add-policy-grant" }, input, callbacks)
end

--- AWS datazone associate-environment-role operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.associate_environment_role(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "associate-environment-role" }, input, callbacks)
end

--- AWS datazone cancel-metadata-generation-run operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.cancel_metadata_generation_run(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "cancel-metadata-generation-run" }, input, callbacks)
end

--- AWS datazone cancel-subscription operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.cancel_subscription(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "cancel-subscription" }, input, callbacks)
end

--- AWS datazone create-asset operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_asset(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "create-asset" }, input, callbacks)
end

--- AWS datazone create-asset-filter operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_asset_filter(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "create-asset-filter" }, input, callbacks)
end

--- AWS datazone create-asset-revision operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_asset_revision(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "create-asset-revision" }, input, callbacks)
end

--- AWS datazone create-asset-type operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_asset_type(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "create-asset-type" }, input, callbacks)
end

--- AWS datazone create-connection operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_connection(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "create-connection" }, input, callbacks)
end

--- AWS datazone create-data-product operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_data_product(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "create-data-product" }, input, callbacks)
end

--- AWS datazone create-data-product-revision operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_data_product_revision(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "create-data-product-revision" }, input, callbacks)
end

--- AWS datazone create-data-source operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_data_source(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "create-data-source" }, input, callbacks)
end

--- AWS datazone create-domain operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_domain(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "create-domain" }, input, callbacks)
end

--- AWS datazone create-domain-unit operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_domain_unit(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "create-domain-unit" }, input, callbacks)
end

--- AWS datazone create-environment operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_environment(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "create-environment" }, input, callbacks)
end

--- AWS datazone create-environment-action operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_environment_action(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "create-environment-action" }, input, callbacks)
end

--- AWS datazone create-environment-profile operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_environment_profile(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "create-environment-profile" }, input, callbacks)
end

--- AWS datazone create-form-type operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_form_type(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "create-form-type" }, input, callbacks)
end

--- AWS datazone create-glossary operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_glossary(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "create-glossary" }, input, callbacks)
end

--- AWS datazone create-glossary-term operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_glossary_term(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "create-glossary-term" }, input, callbacks)
end

--- AWS datazone create-group-profile operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_group_profile(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "create-group-profile" }, input, callbacks)
end

--- AWS datazone create-listing-change-set operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_listing_change_set(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "create-listing-change-set" }, input, callbacks)
end

--- AWS datazone create-project operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_project(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "create-project" }, input, callbacks)
end

--- AWS datazone create-project-membership operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_project_membership(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "create-project-membership" }, input, callbacks)
end

--- AWS datazone create-project-profile operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_project_profile(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "create-project-profile" }, input, callbacks)
end

--- AWS datazone create-rule operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_rule(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "create-rule" }, input, callbacks)
end

--- AWS datazone create-subscription-grant operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_subscription_grant(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "create-subscription-grant" }, input, callbacks)
end

--- AWS datazone create-subscription-request operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_subscription_request(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "create-subscription-request" }, input, callbacks)
end

--- AWS datazone create-subscription-target operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_subscription_target(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "create-subscription-target" }, input, callbacks)
end

--- AWS datazone create-user-profile operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_user_profile(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "create-user-profile" }, input, callbacks)
end

--- AWS datazone delete-asset operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_asset(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "delete-asset" }, input, callbacks)
end

--- AWS datazone delete-asset-filter operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_asset_filter(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "delete-asset-filter" }, input, callbacks)
end

--- AWS datazone delete-asset-type operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_asset_type(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "delete-asset-type" }, input, callbacks)
end

--- AWS datazone delete-connection operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_connection(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "delete-connection" }, input, callbacks)
end

--- AWS datazone delete-data-product operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_data_product(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "delete-data-product" }, input, callbacks)
end

--- AWS datazone delete-data-source operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_data_source(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "delete-data-source" }, input, callbacks)
end

--- AWS datazone delete-domain operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_domain(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "delete-domain" }, input, callbacks)
end

--- AWS datazone delete-domain-unit operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_domain_unit(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "delete-domain-unit" }, input, callbacks)
end

--- AWS datazone delete-environment operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_environment(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "delete-environment" }, input, callbacks)
end

--- AWS datazone delete-environment-action operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_environment_action(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "delete-environment-action" }, input, callbacks)
end

--- AWS datazone delete-environment-blueprint-configuration operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_environment_blueprint_configuration(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "delete-environment-blueprint-configuration" }, input, callbacks)
end

--- AWS datazone delete-environment-profile operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_environment_profile(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "delete-environment-profile" }, input, callbacks)
end

--- AWS datazone delete-form-type operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_form_type(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "delete-form-type" }, input, callbacks)
end

--- AWS datazone delete-glossary operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_glossary(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "delete-glossary" }, input, callbacks)
end

--- AWS datazone delete-glossary-term operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_glossary_term(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "delete-glossary-term" }, input, callbacks)
end

--- AWS datazone delete-listing operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_listing(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "delete-listing" }, input, callbacks)
end

--- AWS datazone delete-project operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_project(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "delete-project" }, input, callbacks)
end

--- AWS datazone delete-project-membership operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_project_membership(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "delete-project-membership" }, input, callbacks)
end

--- AWS datazone delete-project-profile operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_project_profile(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "delete-project-profile" }, input, callbacks)
end

--- AWS datazone delete-rule operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_rule(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "delete-rule" }, input, callbacks)
end

--- AWS datazone delete-subscription-grant operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_subscription_grant(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "delete-subscription-grant" }, input, callbacks)
end

--- AWS datazone delete-subscription-request operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_subscription_request(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "delete-subscription-request" }, input, callbacks)
end

--- AWS datazone delete-subscription-target operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_subscription_target(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "delete-subscription-target" }, input, callbacks)
end

--- AWS datazone delete-time-series-data-points operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_time_series_data_points(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "delete-time-series-data-points" }, input, callbacks)
end

--- AWS datazone disassociate-environment-role operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.disassociate_environment_role(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "disassociate-environment-role" }, input, callbacks)
end

--- AWS datazone get-asset operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_asset(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "get-asset" }, input, callbacks)
end

--- AWS datazone get-asset-filter operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_asset_filter(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "get-asset-filter" }, input, callbacks)
end

--- AWS datazone get-asset-type operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_asset_type(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "get-asset-type" }, input, callbacks)
end

--- AWS datazone get-connection operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_connection(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "get-connection" }, input, callbacks)
end

--- AWS datazone get-data-product operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_data_product(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "get-data-product" }, input, callbacks)
end

--- AWS datazone get-data-source operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_data_source(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "get-data-source" }, input, callbacks)
end

--- AWS datazone get-data-source-run operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_data_source_run(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "get-data-source-run" }, input, callbacks)
end

--- AWS datazone get-domain operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_domain(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "get-domain" }, input, callbacks)
end

--- AWS datazone get-domain-unit operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_domain_unit(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "get-domain-unit" }, input, callbacks)
end

--- AWS datazone get-environment operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_environment(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "get-environment" }, input, callbacks)
end

--- AWS datazone get-environment-action operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_environment_action(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "get-environment-action" }, input, callbacks)
end

--- AWS datazone get-environment-blueprint operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_environment_blueprint(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "get-environment-blueprint" }, input, callbacks)
end

--- AWS datazone get-environment-blueprint-configuration operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_environment_blueprint_configuration(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "get-environment-blueprint-configuration" }, input, callbacks)
end

--- AWS datazone get-environment-credentials operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_environment_credentials(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "get-environment-credentials" }, input, callbacks)
end

--- AWS datazone get-environment-profile operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_environment_profile(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "get-environment-profile" }, input, callbacks)
end

--- AWS datazone get-form-type operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_form_type(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "get-form-type" }, input, callbacks)
end

--- AWS datazone get-glossary operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_glossary(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "get-glossary" }, input, callbacks)
end

--- AWS datazone get-glossary-term operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_glossary_term(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "get-glossary-term" }, input, callbacks)
end

--- AWS datazone get-group-profile operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_group_profile(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "get-group-profile" }, input, callbacks)
end

--- AWS datazone get-iam-portal-login-url operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_iam_portal_login_url(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "get-iam-portal-login-url" }, input, callbacks)
end

--- AWS datazone get-job-run operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_job_run(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "get-job-run" }, input, callbacks)
end

--- AWS datazone get-lineage-event operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_lineage_event(input, callbacks)
	return common.execute_aws_command({ "datazone", "get-lineage-event" }, input, callbacks)
end

--- AWS datazone get-lineage-node operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_lineage_node(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "get-lineage-node" }, input, callbacks)
end

--- AWS datazone get-listing operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_listing(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "get-listing" }, input, callbacks)
end

--- AWS datazone get-metadata-generation-run operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_metadata_generation_run(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "get-metadata-generation-run" }, input, callbacks)
end

--- AWS datazone get-project operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_project(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "get-project" }, input, callbacks)
end

--- AWS datazone get-project-profile operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_project_profile(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "get-project-profile" }, input, callbacks)
end

--- AWS datazone get-rule operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_rule(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "get-rule" }, input, callbacks)
end

--- AWS datazone get-subscription operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_subscription(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "get-subscription" }, input, callbacks)
end

--- AWS datazone get-subscription-grant operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_subscription_grant(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "get-subscription-grant" }, input, callbacks)
end

--- AWS datazone get-subscription-request-details operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_subscription_request_details(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "get-subscription-request-details" }, input, callbacks)
end

--- AWS datazone get-subscription-target operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_subscription_target(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "get-subscription-target" }, input, callbacks)
end

--- AWS datazone get-time-series-data-point operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_time_series_data_point(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "get-time-series-data-point" }, input, callbacks)
end

--- AWS datazone get-user-profile operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_user_profile(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "get-user-profile" }, input, callbacks)
end

--- AWS datazone list-asset-filters operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_asset_filters(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "list-asset-filters" }, input, callbacks)
end

--- AWS datazone list-asset-revisions operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_asset_revisions(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "list-asset-revisions" }, input, callbacks)
end

--- AWS datazone list-connections operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_connections(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "list-connections" }, input, callbacks)
end

--- AWS datazone list-data-product-revisions operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_data_product_revisions(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "list-data-product-revisions" }, input, callbacks)
end

--- AWS datazone list-data-source-run-activities operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_data_source_run_activities(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "list-data-source-run-activities" }, input, callbacks)
end

--- AWS datazone list-data-source-runs operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_data_source_runs(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "list-data-source-runs" }, input, callbacks)
end

--- AWS datazone list-data-sources operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_data_sources(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "list-data-sources" }, input, callbacks)
end

--- AWS datazone list-domain-units-for-parent operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_domain_units_for_parent(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "list-domain-units-for-parent" }, input, callbacks)
end

--- AWS datazone list-domains operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_domains(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "list-domains" }, input, callbacks)
end

--- AWS datazone list-entity-owners operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_entity_owners(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "list-entity-owners" }, input, callbacks)
end

--- AWS datazone list-environment-actions operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_environment_actions(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "list-environment-actions" }, input, callbacks)
end

--- AWS datazone list-environment-blueprint-configurations operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_environment_blueprint_configurations(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "list-environment-blueprint-configurations" }, input, callbacks)
end

--- AWS datazone list-environment-blueprints operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_environment_blueprints(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "list-environment-blueprints" }, input, callbacks)
end

--- AWS datazone list-environment-profiles operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_environment_profiles(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "list-environment-profiles" }, input, callbacks)
end

--- AWS datazone list-environments operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_environments(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "list-environments" }, input, callbacks)
end

--- AWS datazone list-job-runs operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_job_runs(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "list-job-runs" }, input, callbacks)
end

--- AWS datazone list-lineage-events operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_lineage_events(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "list-lineage-events" }, input, callbacks)
end

--- AWS datazone list-lineage-node-history operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_lineage_node_history(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "list-lineage-node-history" }, input, callbacks)
end

--- AWS datazone list-metadata-generation-runs operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_metadata_generation_runs(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "list-metadata-generation-runs" }, input, callbacks)
end

--- AWS datazone list-notifications operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_notifications(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "list-notifications" }, input, callbacks)
end

--- AWS datazone list-policy-grants operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_policy_grants(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "list-policy-grants" }, input, callbacks)
end

--- AWS datazone list-project-memberships operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_project_memberships(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "list-project-memberships" }, input, callbacks)
end

--- AWS datazone list-project-profiles operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_project_profiles(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "list-project-profiles" }, input, callbacks)
end

--- AWS datazone list-projects operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_projects(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "list-projects" }, input, callbacks)
end

--- AWS datazone list-rules operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_rules(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "list-rules" }, input, callbacks)
end

--- AWS datazone list-subscription-grants operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_subscription_grants(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "list-subscription-grants" }, input, callbacks)
end

--- AWS datazone list-subscription-requests operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_subscription_requests(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "list-subscription-requests" }, input, callbacks)
end

--- AWS datazone list-subscription-targets operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_subscription_targets(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "list-subscription-targets" }, input, callbacks)
end

--- AWS datazone list-subscriptions operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_subscriptions(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "list-subscriptions" }, input, callbacks)
end

--- AWS datazone list-tags-for-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_tags_for_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "list-tags-for-resource" }, input, callbacks)
end

--- AWS datazone list-time-series-data-points operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_time_series_data_points(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "list-time-series-data-points" }, input, callbacks)
end

--- AWS datazone post-lineage-event operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.post_lineage_event(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "post-lineage-event" }, input, callbacks)
end

--- AWS datazone post-time-series-data-points operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.post_time_series_data_points(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "post-time-series-data-points" }, input, callbacks)
end

--- AWS datazone put-environment-blueprint-configuration operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.put_environment_blueprint_configuration(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "put-environment-blueprint-configuration" }, input, callbacks)
end

--- AWS datazone reject-predictions operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.reject_predictions(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "reject-predictions" }, input, callbacks)
end

--- AWS datazone reject-subscription-request operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.reject_subscription_request(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "reject-subscription-request" }, input, callbacks)
end

--- AWS datazone remove-entity-owner operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.remove_entity_owner(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "remove-entity-owner" }, input, callbacks)
end

--- AWS datazone remove-policy-grant operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.remove_policy_grant(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "remove-policy-grant" }, input, callbacks)
end

--- AWS datazone revoke-subscription operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.revoke_subscription(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "revoke-subscription" }, input, callbacks)
end

--- AWS datazone search operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.search(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "search" }, input, callbacks)
end

--- AWS datazone search-group-profiles operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.search_group_profiles(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "search-group-profiles" }, input, callbacks)
end

--- AWS datazone search-listings operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.search_listings(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "search-listings" }, input, callbacks)
end

--- AWS datazone search-types operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.search_types(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "search-types" }, input, callbacks)
end

--- AWS datazone search-user-profiles operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.search_user_profiles(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "search-user-profiles" }, input, callbacks)
end

--- AWS datazone start-data-source-run operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.start_data_source_run(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "start-data-source-run" }, input, callbacks)
end

--- AWS datazone start-metadata-generation-run operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.start_metadata_generation_run(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "start-metadata-generation-run" }, input, callbacks)
end

--- AWS datazone tag-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.tag_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "tag-resource" }, input, callbacks)
end

--- AWS datazone untag-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.untag_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "untag-resource" }, input, callbacks)
end

--- AWS datazone update-asset-filter operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_asset_filter(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "update-asset-filter" }, input, callbacks)
end

--- AWS datazone update-connection operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_connection(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "update-connection" }, input, callbacks)
end

--- AWS datazone update-data-source operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_data_source(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "update-data-source" }, input, callbacks)
end

--- AWS datazone update-domain operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_domain(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "update-domain" }, input, callbacks)
end

--- AWS datazone update-domain-unit operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_domain_unit(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "update-domain-unit" }, input, callbacks)
end

--- AWS datazone update-environment operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_environment(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "update-environment" }, input, callbacks)
end

--- AWS datazone update-environment-action operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_environment_action(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "update-environment-action" }, input, callbacks)
end

--- AWS datazone update-environment-profile operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_environment_profile(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "update-environment-profile" }, input, callbacks)
end

--- AWS datazone update-glossary operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_glossary(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "update-glossary" }, input, callbacks)
end

--- AWS datazone update-glossary-term operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_glossary_term(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "update-glossary-term" }, input, callbacks)
end

--- AWS datazone update-group-profile operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_group_profile(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "update-group-profile" }, input, callbacks)
end

--- AWS datazone update-project operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_project(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "update-project" }, input, callbacks)
end

--- AWS datazone update-project-profile operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_project_profile(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "update-project-profile" }, input, callbacks)
end

--- AWS datazone update-rule operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_rule(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "update-rule" }, input, callbacks)
end

--- AWS datazone update-subscription-grant-status operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_subscription_grant_status(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "update-subscription-grant-status" }, input, callbacks)
end

--- AWS datazone update-subscription-request operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_subscription_request(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "update-subscription-request" }, input, callbacks)
end

--- AWS datazone update-subscription-target operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_subscription_target(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "update-subscription-target" }, input, callbacks)
end

--- AWS datazone update-user-profile operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_user_profile(input, callbacks)
	return common.execute_aws_command_skeleton({ "datazone", "update-user-profile" }, input, callbacks)
end

return M
