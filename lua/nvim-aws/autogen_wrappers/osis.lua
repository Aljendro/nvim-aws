-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: osis

local common = require("nvim-aws.wrappers.common")

--- AWS OSIS service functions
local M = {}

--- Creates an OpenSearch Ingestion pipeline
--- @param input table The input table for the create_pipeline command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.create_pipeline(input)
	return common.execute_aws_command_with_input({ "osis", "create-pipeline" }, input)
end

--- Deletes an OpenSearch Ingestion pipeline
--- @param input table The input table for the delete_pipeline command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.delete_pipeline(input)
	return common.execute_aws_command_with_input({ "osis", "delete-pipeline" }, input)
end

--- Retrieves information about an OpenSearch Ingestion pipeline
--- @param input table The input table for the get_pipeline command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_pipeline(input)
	return common.execute_aws_command_with_input({ "osis", "get-pipeline" }, input)
end

--- Retrieves information about a specific blueprint for OpenSearch Ingestion
--- @param input table The input table for the get_pipeline_blueprint command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_pipeline_blueprint(input)
	return common.execute_aws_command_with_input({ "osis", "get-pipeline-blueprint" }, input)
end

--- Returns progress information for the current change happening on an OpenSearch Ingestion pipeline
--- @param input table The input table for the get_pipeline_change_progress command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_pipeline_change_progress(input)
	return common.execute_aws_command_with_input({ "osis", "get-pipeline-change-progress" }, input)
end

--- Retrieves a list of all available blueprints for Data Prepper
--- @param input table The input table for the list_pipeline_blueprints command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_pipeline_blueprints(input)
	return common.execute_aws_command_with_input({ "osis", "list-pipeline-blueprints" }, input)
end

--- Lists all OpenSearch Ingestion pipelines in the current Amazon Web Services account and Region
--- @param input table The input table for the list_pipelines command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_pipelines(input)
	return common.execute_aws_command_with_input({ "osis", "list-pipelines" }, input)
end

--- Lists all resource tags associated with an OpenSearch Ingestion pipeline
--- @param input table The input table for the list_tags_for_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_tags_for_resource(input)
	return common.execute_aws_command_with_input({ "osis", "list-tags-for-resource" }, input)
end

--- Starts an OpenSearch Ingestion pipeline
--- @param input table The input table for the start_pipeline command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.start_pipeline(input)
	return common.execute_aws_command_with_input({ "osis", "start-pipeline" }, input)
end

--- Stops an OpenSearch Ingestion pipeline
--- @param input table The input table for the stop_pipeline command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.stop_pipeline(input)
	return common.execute_aws_command_with_input({ "osis", "stop-pipeline" }, input)
end

--- Tags an OpenSearch Ingestion pipeline
--- @param input table The input table for the tag_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.tag_resource(input)
	return common.execute_aws_command_with_input({ "osis", "tag-resource" }, input)
end

--- Removes one or more tags from an OpenSearch Ingestion pipeline
--- @param input table The input table for the untag_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.untag_resource(input)
	return common.execute_aws_command_with_input({ "osis", "untag-resource" }, input)
end

--- Updates an OpenSearch Ingestion pipeline
--- @param input table The input table for the update_pipeline command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.update_pipeline(input)
	return common.execute_aws_command_with_input({ "osis", "update-pipeline" }, input)
end

--- Checks whether an OpenSearch Ingestion pipeline configuration is valid prior to creation
--- @param input table The input table for the validate_pipeline command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.validate_pipeline(input)
	return common.execute_aws_command_with_input({ "osis", "validate-pipeline" }, input)
end

return M
