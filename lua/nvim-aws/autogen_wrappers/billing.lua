-- AUTOGENERATED FILE - DO NOT EDIT
-- AWS Service: billing

local common = require("nvim-aws.common")

--- AWS billing service functions
local M = {}

--- AWS billing create-billing-view operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_billing_view(input, callbacks)
	return common.execute_aws_command_skeleton({ "billing", "create-billing-view" }, input, callbacks)
end

--- AWS billing delete-billing-view operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_billing_view(input, callbacks)
	return common.execute_aws_command_skeleton({ "billing", "delete-billing-view" }, input, callbacks)
end

--- AWS billing get-billing-view operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_billing_view(input, callbacks)
	return common.execute_aws_command_skeleton({ "billing", "get-billing-view" }, input, callbacks)
end

--- AWS billing get-resource-policy operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_resource_policy(input, callbacks)
	return common.execute_aws_command_skeleton({ "billing", "get-resource-policy" }, input, callbacks)
end

--- AWS billing list-billing-views operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_billing_views(input, callbacks)
	return common.execute_aws_command_skeleton({ "billing", "list-billing-views" }, input, callbacks)
end

--- AWS billing list-source-views-for-billing-view operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_source_views_for_billing_view(input, callbacks)
	return common.execute_aws_command_skeleton({ "billing", "list-source-views-for-billing-view" }, input, callbacks)
end

--- AWS billing list-tags-for-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_tags_for_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "billing", "list-tags-for-resource" }, input, callbacks)
end

--- AWS billing tag-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.tag_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "billing", "tag-resource" }, input, callbacks)
end

--- AWS billing untag-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.untag_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "billing", "untag-resource" }, input, callbacks)
end

--- AWS billing update-billing-view operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_billing_view(input, callbacks)
	return common.execute_aws_command_skeleton({ "billing", "update-billing-view" }, input, callbacks)
end

return M
