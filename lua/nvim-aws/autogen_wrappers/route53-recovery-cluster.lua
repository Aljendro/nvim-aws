-- AUTOGENERATED FILE - DO NOT EDIT
-- AWS Service: route53-recovery-cluster

local common = require("nvim-aws.common")

--- AWS route53-recovery-cluster service functions
local M = {}

--- AWS route53-recovery-cluster get-routing-control-state operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.get_routing_control_state(input)
	return common.execute_aws_command_skeleton({ "route53-recovery-cluster", "get-routing-control-state" }, input)
end

--- AWS route53-recovery-cluster list-routing-controls operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.list_routing_controls(input)
	return common.execute_aws_command_skeleton({ "route53-recovery-cluster", "list-routing-controls" }, input)
end

--- AWS route53-recovery-cluster update-routing-control-state operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.update_routing_control_state(input)
	return common.execute_aws_command_skeleton({ "route53-recovery-cluster", "update-routing-control-state" }, input)
end

--- AWS route53-recovery-cluster update-routing-control-states operation
--- @param input table|nil input parameters
--- @return {success: boolean, data: table|nil, error: string|nil}
function M.update_routing_control_states(input)
	return common.execute_aws_command_skeleton({ "route53-recovery-cluster", "update-routing-control-states" }, input)
end

return M
