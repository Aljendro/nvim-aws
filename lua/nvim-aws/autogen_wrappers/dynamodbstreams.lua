-- AUTOGENERATED FILE - DO NOT EDIT
-- AWS Service: dynamodbstreams

local common = require("nvim-aws.wrappers.common")

--- AWS DYNAMODBSTREAMS service functions
local M = {}

--- AWS dynamodbstreams describe-stream operation
--- @param input table|nil Optional input parameters
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.describe_stream(input)
	return common.execute_aws_command_with_input({ "dynamodbstreams", "describe-stream" }, input)
end

--- AWS dynamodbstreams get-records operation
--- @param input table|nil Optional input parameters
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_records(input)
	return common.execute_aws_command_with_input({ "dynamodbstreams", "get-records" }, input)
end

--- AWS dynamodbstreams get-shard-iterator operation
--- @param input table|nil Optional input parameters
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.get_shard_iterator(input)
	return common.execute_aws_command_with_input({ "dynamodbstreams", "get-shard-iterator" }, input)
end

--- AWS dynamodbstreams help operation
--- @param input table|nil Optional input parameters
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.help(input)
	return common.execute_aws_command_with_input({ "dynamodbstreams", "help" }, input)
end

--- AWS dynamodbstreams list-streams operation
--- @param input table|nil Optional input parameters
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_streams(input)
	return common.execute_aws_command_with_input({ "dynamodbstreams", "list-streams" }, input)
end

return M
