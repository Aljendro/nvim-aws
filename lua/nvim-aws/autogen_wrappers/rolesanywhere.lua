-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-07 21:36:10
-- AWS Service: rolesanywhere

local common = require("nvim-aws.wrappers.common")

--- AWS ROLESANYWHERE service functions
local M = {}

--- Lists the tags attached to the resource
--- @param input table The input table for the list_tags_for_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.list_tags_for_resource(input)
	return common.execute_aws_command_with_input({ "rolesanywhere", "list-tags-for-resource" }, input)
end

--- Attaches a list of notification settings to a trust anchor
--- @param input table The input table for the put_notification_settings command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.put_notification_settings(input)
	return common.execute_aws_command_with_input({ "rolesanywhere", "put-notification-settings" }, input)
end

--- Resets the custom notification setting to IAM Roles Anywhere default setting
--- @param input table The input table for the reset_notification_settings command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.reset_notification_settings(input)
	return common.execute_aws_command_with_input({ "rolesanywhere", "reset-notification-settings" }, input)
end

--- Attaches tags to a resource
--- @param input table The input table for the tag_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.tag_resource(input)
	return common.execute_aws_command_with_input({ "rolesanywhere", "tag-resource" }, input)
end

--- Removes tags from the resource
--- @param input table The input table for the untag_resource command
--- @return {success: boolean, data: table|nil, error: string|nil} Result table
function M.untag_resource(input)
	return common.execute_aws_command_with_input({ "rolesanywhere", "untag-resource" }, input)
end

return M
