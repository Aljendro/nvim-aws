-- AUTOGENERATED FILE - DO NOT EDIT
-- AWS Service: emr-serverless

local common = require("nvim-aws.common")

--- AWS emr-serverless service functions
local M = {}

--- AWS emr-serverless cancel-job-run operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.cancel_job_run(input, callbacks)
	return common.execute_aws_command_skeleton({ "emr-serverless", "cancel-job-run" }, input, callbacks)
end

--- AWS emr-serverless create-application operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_application(input, callbacks)
	return common.execute_aws_command_skeleton({ "emr-serverless", "create-application" }, input, callbacks)
end

--- AWS emr-serverless delete-application operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_application(input, callbacks)
	return common.execute_aws_command_skeleton({ "emr-serverless", "delete-application" }, input, callbacks)
end

--- AWS emr-serverless get-application operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_application(input, callbacks)
	return common.execute_aws_command_skeleton({ "emr-serverless", "get-application" }, input, callbacks)
end

--- AWS emr-serverless get-dashboard-for-job-run operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_dashboard_for_job_run(input, callbacks)
	return common.execute_aws_command_skeleton({ "emr-serverless", "get-dashboard-for-job-run" }, input, callbacks)
end

--- AWS emr-serverless get-job-run operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_job_run(input, callbacks)
	return common.execute_aws_command_skeleton({ "emr-serverless", "get-job-run" }, input, callbacks)
end

--- AWS emr-serverless list-applications operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_applications(input, callbacks)
	return common.execute_aws_command_skeleton({ "emr-serverless", "list-applications" }, input, callbacks)
end

--- AWS emr-serverless list-job-run-attempts operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_job_run_attempts(input, callbacks)
	return common.execute_aws_command_skeleton({ "emr-serverless", "list-job-run-attempts" }, input, callbacks)
end

--- AWS emr-serverless list-job-runs operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_job_runs(input, callbacks)
	return common.execute_aws_command_skeleton({ "emr-serverless", "list-job-runs" }, input, callbacks)
end

--- AWS emr-serverless list-tags-for-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_tags_for_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "emr-serverless", "list-tags-for-resource" }, input, callbacks)
end

--- AWS emr-serverless start-application operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.start_application(input, callbacks)
	return common.execute_aws_command_skeleton({ "emr-serverless", "start-application" }, input, callbacks)
end

--- AWS emr-serverless start-job-run operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.start_job_run(input, callbacks)
	return common.execute_aws_command_skeleton({ "emr-serverless", "start-job-run" }, input, callbacks)
end

--- AWS emr-serverless stop-application operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.stop_application(input, callbacks)
	return common.execute_aws_command_skeleton({ "emr-serverless", "stop-application" }, input, callbacks)
end

--- AWS emr-serverless tag-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.tag_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "emr-serverless", "tag-resource" }, input, callbacks)
end

--- AWS emr-serverless untag-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.untag_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "emr-serverless", "untag-resource" }, input, callbacks)
end

--- AWS emr-serverless update-application operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_application(input, callbacks)
	return common.execute_aws_command_skeleton({ "emr-serverless", "update-application" }, input, callbacks)
end

return M
