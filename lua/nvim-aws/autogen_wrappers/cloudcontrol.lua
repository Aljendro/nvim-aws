-- AUTOGENERATED FILE - DO NOT EDIT
-- AWS Service: cloudcontrol

local common = require("nvim-aws.common")

--- AWS cloudcontrol service functions
local M = {}

--- AWS cloudcontrol cancel-resource-request operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.cancel_resource_request(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudcontrol", "cancel-resource-request" }, input, callbacks)
end

--- AWS cloudcontrol create-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.create_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudcontrol", "create-resource" }, input, callbacks)
end

--- AWS cloudcontrol delete-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.delete_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudcontrol", "delete-resource" }, input, callbacks)
end

--- AWS cloudcontrol get-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudcontrol", "get-resource" }, input, callbacks)
end

--- AWS cloudcontrol get-resource-request-status operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.get_resource_request_status(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudcontrol", "get-resource-request-status" }, input, callbacks)
end

--- AWS cloudcontrol list-resource-requests operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_resource_requests(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudcontrol", "list-resource-requests" }, input, callbacks)
end

--- AWS cloudcontrol list-resources operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.list_resources(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudcontrol", "list-resources" }, input, callbacks)
end

--- AWS cloudcontrol update-resource operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.update_resource(input, callbacks)
	return common.execute_aws_command_skeleton({ "cloudcontrol", "update-resource" }, input, callbacks)
end

--- AWS cloudcontrol wait operation
--- @param input table|nil input parameters
--- @param callbacks table|nil {on_start = function(), on_stdout = function(line), on_stderr = function(err), on_exit = function(code)}
--- @return {success: boolean, data: table|nil, error: string|nil }|{success: boolean, job: Job }
function M.wait(input, callbacks)
	return common.execute_aws_command({ "cloudcontrol", "wait" }, input, callbacks)
end

return M
