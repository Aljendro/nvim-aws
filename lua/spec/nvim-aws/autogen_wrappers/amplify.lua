-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: amplify

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS amplify service testing", function()
	it("should generate a cli skeleton for create-app", function()
		local result = common.execute_aws_command_with_input({ "amplify", "create-app" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-backend-environment", function()
		local result = common.execute_aws_command_with_input({ "amplify", "create-backend-environment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-branch", function()
		local result = common.execute_aws_command_with_input({ "amplify", "create-branch" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-deployment", function()
		local result = common.execute_aws_command_with_input({ "amplify", "create-deployment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-domain-association", function()
		local result = common.execute_aws_command_with_input({ "amplify", "create-domain-association" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-webhook", function()
		local result = common.execute_aws_command_with_input({ "amplify", "create-webhook" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-app", function()
		local result = common.execute_aws_command_with_input({ "amplify", "delete-app" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-backend-environment", function()
		local result = common.execute_aws_command_with_input({ "amplify", "delete-backend-environment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-branch", function()
		local result = common.execute_aws_command_with_input({ "amplify", "delete-branch" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-domain-association", function()
		local result = common.execute_aws_command_with_input({ "amplify", "delete-domain-association" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-job", function()
		local result = common.execute_aws_command_with_input({ "amplify", "delete-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-webhook", function()
		local result = common.execute_aws_command_with_input({ "amplify", "delete-webhook" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for generate-access-logs", function()
		local result = common.execute_aws_command_with_input({ "amplify", "generate-access-logs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-app", function()
		local result = common.execute_aws_command_with_input({ "amplify", "get-app" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-artifact-url", function()
		local result = common.execute_aws_command_with_input({ "amplify", "get-artifact-url" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-backend-environment", function()
		local result = common.execute_aws_command_with_input({ "amplify", "get-backend-environment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-branch", function()
		local result = common.execute_aws_command_with_input({ "amplify", "get-branch" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-domain-association", function()
		local result = common.execute_aws_command_with_input({ "amplify", "get-domain-association" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-job", function()
		local result = common.execute_aws_command_with_input({ "amplify", "get-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-webhook", function()
		local result = common.execute_aws_command_with_input({ "amplify", "get-webhook" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-apps", function()
		local result = common.execute_aws_command_with_input({ "amplify", "list-apps" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-artifacts", function()
		local result = common.execute_aws_command_with_input({ "amplify", "list-artifacts" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-backend-environments", function()
		local result = common.execute_aws_command_with_input({ "amplify", "list-backend-environments" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-branches", function()
		local result = common.execute_aws_command_with_input({ "amplify", "list-branches" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-domain-associations", function()
		local result = common.execute_aws_command_with_input({ "amplify", "list-domain-associations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-jobs", function()
		local result = common.execute_aws_command_with_input({ "amplify", "list-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "amplify", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-webhooks", function()
		local result = common.execute_aws_command_with_input({ "amplify", "list-webhooks" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-deployment", function()
		local result = common.execute_aws_command_with_input({ "amplify", "start-deployment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-job", function()
		local result = common.execute_aws_command_with_input({ "amplify", "start-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-job", function()
		local result = common.execute_aws_command_with_input({ "amplify", "stop-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "amplify", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "amplify", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-app", function()
		local result = common.execute_aws_command_with_input({ "amplify", "update-app" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-branch", function()
		local result = common.execute_aws_command_with_input({ "amplify", "update-branch" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-domain-association", function()
		local result = common.execute_aws_command_with_input({ "amplify", "update-domain-association" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-webhook", function()
		local result = common.execute_aws_command_with_input({ "amplify", "update-webhook" })
		assert.is_true(result.success)
	end)

end)