-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: deadline

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS deadline service testing", function()
	it("should generate a cli skeleton for associate-member-to-farm", function()
		local result = common.execute_aws_command_with_input({ "deadline", "associate-member-to-farm" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-farm", function()
		local result = common.execute_aws_command_with_input({ "deadline", "create-farm" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-license-endpoint", function()
		local result = common.execute_aws_command_with_input({ "deadline", "create-license-endpoint" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-limit", function()
		local result = common.execute_aws_command_with_input({ "deadline", "create-limit" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-monitor", function()
		local result = common.execute_aws_command_with_input({ "deadline", "create-monitor" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-queue-fleet-association", function()
		local result = common.execute_aws_command_with_input({ "deadline", "create-queue-fleet-association" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-queue-limit-association", function()
		local result = common.execute_aws_command_with_input({ "deadline", "create-queue-limit-association" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-storage-profile", function()
		local result = common.execute_aws_command_with_input({ "deadline", "create-storage-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-farm", function()
		local result = common.execute_aws_command_with_input({ "deadline", "delete-farm" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-license-endpoint", function()
		local result = common.execute_aws_command_with_input({ "deadline", "delete-license-endpoint" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-limit", function()
		local result = common.execute_aws_command_with_input({ "deadline", "delete-limit" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-monitor", function()
		local result = common.execute_aws_command_with_input({ "deadline", "delete-monitor" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-queue-fleet-association", function()
		local result = common.execute_aws_command_with_input({ "deadline", "delete-queue-fleet-association" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-queue-limit-association", function()
		local result = common.execute_aws_command_with_input({ "deadline", "delete-queue-limit-association" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-storage-profile", function()
		local result = common.execute_aws_command_with_input({ "deadline", "delete-storage-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-member-from-farm", function()
		local result = common.execute_aws_command_with_input({ "deadline", "disassociate-member-from-farm" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-farm", function()
		local result = common.execute_aws_command_with_input({ "deadline", "get-farm" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-license-endpoint", function()
		local result = common.execute_aws_command_with_input({ "deadline", "get-license-endpoint" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-limit", function()
		local result = common.execute_aws_command_with_input({ "deadline", "get-limit" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-monitor", function()
		local result = common.execute_aws_command_with_input({ "deadline", "get-monitor" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-queue-fleet-association", function()
		local result = common.execute_aws_command_with_input({ "deadline", "get-queue-fleet-association" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-queue-limit-association", function()
		local result = common.execute_aws_command_with_input({ "deadline", "get-queue-limit-association" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-sessions-statistics-aggregation", function()
		local result = common.execute_aws_command_with_input({ "deadline", "get-sessions-statistics-aggregation" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-storage-profile", function()
		local result = common.execute_aws_command_with_input({ "deadline", "get-storage-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-available-metered-products", function()
		local result = common.execute_aws_command_with_input({ "deadline", "list-available-metered-products" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-farm-members", function()
		local result = common.execute_aws_command_with_input({ "deadline", "list-farm-members" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-farms", function()
		local result = common.execute_aws_command_with_input({ "deadline", "list-farms" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-license-endpoints", function()
		local result = common.execute_aws_command_with_input({ "deadline", "list-license-endpoints" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-limits", function()
		local result = common.execute_aws_command_with_input({ "deadline", "list-limits" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-monitors", function()
		local result = common.execute_aws_command_with_input({ "deadline", "list-monitors" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-queue-fleet-associations", function()
		local result = common.execute_aws_command_with_input({ "deadline", "list-queue-fleet-associations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-queue-limit-associations", function()
		local result = common.execute_aws_command_with_input({ "deadline", "list-queue-limit-associations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-storage-profiles", function()
		local result = common.execute_aws_command_with_input({ "deadline", "list-storage-profiles" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "deadline", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for search-jobs", function()
		local result = common.execute_aws_command_with_input({ "deadline", "search-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for search-steps", function()
		local result = common.execute_aws_command_with_input({ "deadline", "search-steps" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for search-tasks", function()
		local result = common.execute_aws_command_with_input({ "deadline", "search-tasks" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for search-workers", function()
		local result = common.execute_aws_command_with_input({ "deadline", "search-workers" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-sessions-statistics-aggregation", function()
		local result = common.execute_aws_command_with_input({ "deadline", "start-sessions-statistics-aggregation" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "deadline", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "deadline", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-farm", function()
		local result = common.execute_aws_command_with_input({ "deadline", "update-farm" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-limit", function()
		local result = common.execute_aws_command_with_input({ "deadline", "update-limit" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-monitor", function()
		local result = common.execute_aws_command_with_input({ "deadline", "update-monitor" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-queue-fleet-association", function()
		local result = common.execute_aws_command_with_input({ "deadline", "update-queue-fleet-association" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-queue-limit-association", function()
		local result = common.execute_aws_command_with_input({ "deadline", "update-queue-limit-association" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-storage-profile", function()
		local result = common.execute_aws_command_with_input({ "deadline", "update-storage-profile" })
		assert.is_true(result.success)
	end)

end)