-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: appflow

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS appflow service testing", function()
	it("should generate a cli skeleton for cancel-flow-executions", function()
		local result = common.execute_aws_command_with_input({ "appflow", "cancel-flow-executions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-connector-profile", function()
		local result = common.execute_aws_command_with_input({ "appflow", "create-connector-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-flow", function()
		local result = common.execute_aws_command_with_input({ "appflow", "create-flow" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-connector-profile", function()
		local result = common.execute_aws_command_with_input({ "appflow", "delete-connector-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-flow", function()
		local result = common.execute_aws_command_with_input({ "appflow", "delete-flow" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-connector", function()
		local result = common.execute_aws_command_with_input({ "appflow", "describe-connector" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-connector-entity", function()
		local result = common.execute_aws_command_with_input({ "appflow", "describe-connector-entity" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-connector-profiles", function()
		local result = common.execute_aws_command_with_input({ "appflow", "describe-connector-profiles" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-connectors", function()
		local result = common.execute_aws_command_with_input({ "appflow", "describe-connectors" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-flow", function()
		local result = common.execute_aws_command_with_input({ "appflow", "describe-flow" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-flow-execution-records", function()
		local result = common.execute_aws_command_with_input({ "appflow", "describe-flow-execution-records" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-connector-entities", function()
		local result = common.execute_aws_command_with_input({ "appflow", "list-connector-entities" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-connectors", function()
		local result = common.execute_aws_command_with_input({ "appflow", "list-connectors" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-flows", function()
		local result = common.execute_aws_command_with_input({ "appflow", "list-flows" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "appflow", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for register-connector", function()
		local result = common.execute_aws_command_with_input({ "appflow", "register-connector" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for reset-connector-metadata-cache", function()
		local result = common.execute_aws_command_with_input({ "appflow", "reset-connector-metadata-cache" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-flow", function()
		local result = common.execute_aws_command_with_input({ "appflow", "start-flow" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-flow", function()
		local result = common.execute_aws_command_with_input({ "appflow", "stop-flow" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "appflow", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for unregister-connector", function()
		local result = common.execute_aws_command_with_input({ "appflow", "unregister-connector" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "appflow", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-connector-profile", function()
		local result = common.execute_aws_command_with_input({ "appflow", "update-connector-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-connector-registration", function()
		local result = common.execute_aws_command_with_input({ "appflow", "update-connector-registration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-flow", function()
		local result = common.execute_aws_command_with_input({ "appflow", "update-flow" })
		assert.is_true(result.success)
	end)

end)