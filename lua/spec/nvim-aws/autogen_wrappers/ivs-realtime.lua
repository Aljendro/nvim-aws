-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: ivs-realtime

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS ivs-realtime service testing", function()
	it("should generate a cli skeleton for create-encoder-configuration", function()
		local result = common.execute_aws_command_with_input({ "ivs-realtime", "create-encoder-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-ingest-configuration", function()
		local result = common.execute_aws_command_with_input({ "ivs-realtime", "create-ingest-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-participant-token", function()
		local result = common.execute_aws_command_with_input({ "ivs-realtime", "create-participant-token" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-stage", function()
		local result = common.execute_aws_command_with_input({ "ivs-realtime", "create-stage" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-storage-configuration", function()
		local result = common.execute_aws_command_with_input({ "ivs-realtime", "create-storage-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-encoder-configuration", function()
		local result = common.execute_aws_command_with_input({ "ivs-realtime", "delete-encoder-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-ingest-configuration", function()
		local result = common.execute_aws_command_with_input({ "ivs-realtime", "delete-ingest-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-public-key", function()
		local result = common.execute_aws_command_with_input({ "ivs-realtime", "delete-public-key" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-stage", function()
		local result = common.execute_aws_command_with_input({ "ivs-realtime", "delete-stage" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-storage-configuration", function()
		local result = common.execute_aws_command_with_input({ "ivs-realtime", "delete-storage-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disconnect-participant", function()
		local result = common.execute_aws_command_with_input({ "ivs-realtime", "disconnect-participant" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-composition", function()
		local result = common.execute_aws_command_with_input({ "ivs-realtime", "get-composition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-encoder-configuration", function()
		local result = common.execute_aws_command_with_input({ "ivs-realtime", "get-encoder-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-ingest-configuration", function()
		local result = common.execute_aws_command_with_input({ "ivs-realtime", "get-ingest-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-participant", function()
		local result = common.execute_aws_command_with_input({ "ivs-realtime", "get-participant" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-public-key", function()
		local result = common.execute_aws_command_with_input({ "ivs-realtime", "get-public-key" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-stage", function()
		local result = common.execute_aws_command_with_input({ "ivs-realtime", "get-stage" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-stage-session", function()
		local result = common.execute_aws_command_with_input({ "ivs-realtime", "get-stage-session" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-storage-configuration", function()
		local result = common.execute_aws_command_with_input({ "ivs-realtime", "get-storage-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for import-public-key", function()
		local result = common.execute_aws_command_with_input({ "ivs-realtime", "import-public-key" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-compositions", function()
		local result = common.execute_aws_command_with_input({ "ivs-realtime", "list-compositions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-encoder-configurations", function()
		local result = common.execute_aws_command_with_input({ "ivs-realtime", "list-encoder-configurations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-ingest-configurations", function()
		local result = common.execute_aws_command_with_input({ "ivs-realtime", "list-ingest-configurations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-participant-events", function()
		local result = common.execute_aws_command_with_input({ "ivs-realtime", "list-participant-events" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-participants", function()
		local result = common.execute_aws_command_with_input({ "ivs-realtime", "list-participants" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-public-keys", function()
		local result = common.execute_aws_command_with_input({ "ivs-realtime", "list-public-keys" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-stage-sessions", function()
		local result = common.execute_aws_command_with_input({ "ivs-realtime", "list-stage-sessions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-stages", function()
		local result = common.execute_aws_command_with_input({ "ivs-realtime", "list-stages" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-storage-configurations", function()
		local result = common.execute_aws_command_with_input({ "ivs-realtime", "list-storage-configurations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "ivs-realtime", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-composition", function()
		local result = common.execute_aws_command_with_input({ "ivs-realtime", "start-composition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-composition", function()
		local result = common.execute_aws_command_with_input({ "ivs-realtime", "stop-composition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "ivs-realtime", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "ivs-realtime", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-ingest-configuration", function()
		local result = common.execute_aws_command_with_input({ "ivs-realtime", "update-ingest-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-stage", function()
		local result = common.execute_aws_command_with_input({ "ivs-realtime", "update-stage" })
		assert.is_true(result.success)
	end)

end)