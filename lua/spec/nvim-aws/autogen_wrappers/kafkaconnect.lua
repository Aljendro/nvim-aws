-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: kafkaconnect

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS kafkaconnect service testing", function()
	it("should generate a cli skeleton for create-connector", function()
		local result = common.execute_aws_command_with_input({ "kafkaconnect", "create-connector" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-custom-plugin", function()
		local result = common.execute_aws_command_with_input({ "kafkaconnect", "create-custom-plugin" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-worker-configuration", function()
		local result = common.execute_aws_command_with_input({ "kafkaconnect", "create-worker-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-connector", function()
		local result = common.execute_aws_command_with_input({ "kafkaconnect", "delete-connector" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-custom-plugin", function()
		local result = common.execute_aws_command_with_input({ "kafkaconnect", "delete-custom-plugin" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-worker-configuration", function()
		local result = common.execute_aws_command_with_input({ "kafkaconnect", "delete-worker-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-connector", function()
		local result = common.execute_aws_command_with_input({ "kafkaconnect", "describe-connector" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-connector-operation", function()
		local result = common.execute_aws_command_with_input({ "kafkaconnect", "describe-connector-operation" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-custom-plugin", function()
		local result = common.execute_aws_command_with_input({ "kafkaconnect", "describe-custom-plugin" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-worker-configuration", function()
		local result = common.execute_aws_command_with_input({ "kafkaconnect", "describe-worker-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-connector-operations", function()
		local result = common.execute_aws_command_with_input({ "kafkaconnect", "list-connector-operations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-connectors", function()
		local result = common.execute_aws_command_with_input({ "kafkaconnect", "list-connectors" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-custom-plugins", function()
		local result = common.execute_aws_command_with_input({ "kafkaconnect", "list-custom-plugins" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "kafkaconnect", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-worker-configurations", function()
		local result = common.execute_aws_command_with_input({ "kafkaconnect", "list-worker-configurations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "kafkaconnect", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "kafkaconnect", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-connector", function()
		local result = common.execute_aws_command_with_input({ "kafkaconnect", "update-connector" })
		assert.is_true(result.success)
	end)

end)