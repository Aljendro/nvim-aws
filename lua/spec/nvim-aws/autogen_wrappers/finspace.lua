-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: finspace

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS finspace service testing", function()
	it("should generate a cli skeleton for create-environment", function()
		local result = common.execute_aws_command_with_input({ "finspace", "create-environment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-kx-changeset", function()
		local result = common.execute_aws_command_with_input({ "finspace", "create-kx-changeset" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-kx-cluster", function()
		local result = common.execute_aws_command_with_input({ "finspace", "create-kx-cluster" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-kx-database", function()
		local result = common.execute_aws_command_with_input({ "finspace", "create-kx-database" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-kx-dataview", function()
		local result = common.execute_aws_command_with_input({ "finspace", "create-kx-dataview" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-kx-environment", function()
		local result = common.execute_aws_command_with_input({ "finspace", "create-kx-environment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-kx-scaling-group", function()
		local result = common.execute_aws_command_with_input({ "finspace", "create-kx-scaling-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-kx-user", function()
		local result = common.execute_aws_command_with_input({ "finspace", "create-kx-user" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-kx-volume", function()
		local result = common.execute_aws_command_with_input({ "finspace", "create-kx-volume" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-environment", function()
		local result = common.execute_aws_command_with_input({ "finspace", "delete-environment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-kx-cluster", function()
		local result = common.execute_aws_command_with_input({ "finspace", "delete-kx-cluster" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-kx-cluster-node", function()
		local result = common.execute_aws_command_with_input({ "finspace", "delete-kx-cluster-node" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-kx-database", function()
		local result = common.execute_aws_command_with_input({ "finspace", "delete-kx-database" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-kx-dataview", function()
		local result = common.execute_aws_command_with_input({ "finspace", "delete-kx-dataview" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-kx-environment", function()
		local result = common.execute_aws_command_with_input({ "finspace", "delete-kx-environment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-kx-scaling-group", function()
		local result = common.execute_aws_command_with_input({ "finspace", "delete-kx-scaling-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-kx-user", function()
		local result = common.execute_aws_command_with_input({ "finspace", "delete-kx-user" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-kx-volume", function()
		local result = common.execute_aws_command_with_input({ "finspace", "delete-kx-volume" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-environment", function()
		local result = common.execute_aws_command_with_input({ "finspace", "get-environment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-kx-changeset", function()
		local result = common.execute_aws_command_with_input({ "finspace", "get-kx-changeset" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-kx-cluster", function()
		local result = common.execute_aws_command_with_input({ "finspace", "get-kx-cluster" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-kx-connection-string", function()
		local result = common.execute_aws_command_with_input({ "finspace", "get-kx-connection-string" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-kx-database", function()
		local result = common.execute_aws_command_with_input({ "finspace", "get-kx-database" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-kx-dataview", function()
		local result = common.execute_aws_command_with_input({ "finspace", "get-kx-dataview" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-kx-environment", function()
		local result = common.execute_aws_command_with_input({ "finspace", "get-kx-environment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-kx-scaling-group", function()
		local result = common.execute_aws_command_with_input({ "finspace", "get-kx-scaling-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-kx-user", function()
		local result = common.execute_aws_command_with_input({ "finspace", "get-kx-user" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-kx-volume", function()
		local result = common.execute_aws_command_with_input({ "finspace", "get-kx-volume" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-environments", function()
		local result = common.execute_aws_command_with_input({ "finspace", "list-environments" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-kx-changesets", function()
		local result = common.execute_aws_command_with_input({ "finspace", "list-kx-changesets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-kx-cluster-nodes", function()
		local result = common.execute_aws_command_with_input({ "finspace", "list-kx-cluster-nodes" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-kx-clusters", function()
		local result = common.execute_aws_command_with_input({ "finspace", "list-kx-clusters" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-kx-databases", function()
		local result = common.execute_aws_command_with_input({ "finspace", "list-kx-databases" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-kx-dataviews", function()
		local result = common.execute_aws_command_with_input({ "finspace", "list-kx-dataviews" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-kx-environments", function()
		local result = common.execute_aws_command_with_input({ "finspace", "list-kx-environments" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-kx-scaling-groups", function()
		local result = common.execute_aws_command_with_input({ "finspace", "list-kx-scaling-groups" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-kx-users", function()
		local result = common.execute_aws_command_with_input({ "finspace", "list-kx-users" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-kx-volumes", function()
		local result = common.execute_aws_command_with_input({ "finspace", "list-kx-volumes" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "finspace", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "finspace", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "finspace", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-environment", function()
		local result = common.execute_aws_command_with_input({ "finspace", "update-environment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-kx-cluster-code-configuration", function()
		local result = common.execute_aws_command_with_input({ "finspace", "update-kx-cluster-code-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-kx-cluster-databases", function()
		local result = common.execute_aws_command_with_input({ "finspace", "update-kx-cluster-databases" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-kx-database", function()
		local result = common.execute_aws_command_with_input({ "finspace", "update-kx-database" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-kx-dataview", function()
		local result = common.execute_aws_command_with_input({ "finspace", "update-kx-dataview" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-kx-environment", function()
		local result = common.execute_aws_command_with_input({ "finspace", "update-kx-environment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-kx-environment-network", function()
		local result = common.execute_aws_command_with_input({ "finspace", "update-kx-environment-network" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-kx-user", function()
		local result = common.execute_aws_command_with_input({ "finspace", "update-kx-user" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-kx-volume", function()
		local result = common.execute_aws_command_with_input({ "finspace", "update-kx-volume" })
		assert.is_true(result.success)
	end)

end)