-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: iotthingsgraph

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS iotthingsgraph service testing", function()
	it("should generate a cli skeleton for associate-entity-to-thing", function()
		local result = common.execute_aws_command_with_input({ "iotthingsgraph", "associate-entity-to-thing" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-flow-template", function()
		local result = common.execute_aws_command_with_input({ "iotthingsgraph", "create-flow-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-system-instance", function()
		local result = common.execute_aws_command_with_input({ "iotthingsgraph", "create-system-instance" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-system-template", function()
		local result = common.execute_aws_command_with_input({ "iotthingsgraph", "create-system-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-flow-template", function()
		local result = common.execute_aws_command_with_input({ "iotthingsgraph", "delete-flow-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-namespace", function()
		local result = common.execute_aws_command_with_input({ "iotthingsgraph", "delete-namespace" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-system-instance", function()
		local result = common.execute_aws_command_with_input({ "iotthingsgraph", "delete-system-instance" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-system-template", function()
		local result = common.execute_aws_command_with_input({ "iotthingsgraph", "delete-system-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for deploy-system-instance", function()
		local result = common.execute_aws_command_with_input({ "iotthingsgraph", "deploy-system-instance" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for deprecate-flow-template", function()
		local result = common.execute_aws_command_with_input({ "iotthingsgraph", "deprecate-flow-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for deprecate-system-template", function()
		local result = common.execute_aws_command_with_input({ "iotthingsgraph", "deprecate-system-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-namespace", function()
		local result = common.execute_aws_command_with_input({ "iotthingsgraph", "describe-namespace" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for dissociate-entity-from-thing", function()
		local result = common.execute_aws_command_with_input({ "iotthingsgraph", "dissociate-entity-from-thing" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-entities", function()
		local result = common.execute_aws_command_with_input({ "iotthingsgraph", "get-entities" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-flow-template", function()
		local result = common.execute_aws_command_with_input({ "iotthingsgraph", "get-flow-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-flow-template-revisions", function()
		local result = common.execute_aws_command_with_input({ "iotthingsgraph", "get-flow-template-revisions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-namespace-deletion-status", function()
		local result = common.execute_aws_command_with_input({ "iotthingsgraph", "get-namespace-deletion-status" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-system-instance", function()
		local result = common.execute_aws_command_with_input({ "iotthingsgraph", "get-system-instance" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-system-template", function()
		local result = common.execute_aws_command_with_input({ "iotthingsgraph", "get-system-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-system-template-revisions", function()
		local result = common.execute_aws_command_with_input({ "iotthingsgraph", "get-system-template-revisions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-upload-status", function()
		local result = common.execute_aws_command_with_input({ "iotthingsgraph", "get-upload-status" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-flow-execution-messages", function()
		local result = common.execute_aws_command_with_input({ "iotthingsgraph", "list-flow-execution-messages" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "iotthingsgraph", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for search-entities", function()
		local result = common.execute_aws_command_with_input({ "iotthingsgraph", "search-entities" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for search-flow-executions", function()
		local result = common.execute_aws_command_with_input({ "iotthingsgraph", "search-flow-executions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for search-flow-templates", function()
		local result = common.execute_aws_command_with_input({ "iotthingsgraph", "search-flow-templates" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for search-system-instances", function()
		local result = common.execute_aws_command_with_input({ "iotthingsgraph", "search-system-instances" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for search-system-templates", function()
		local result = common.execute_aws_command_with_input({ "iotthingsgraph", "search-system-templates" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for search-things", function()
		local result = common.execute_aws_command_with_input({ "iotthingsgraph", "search-things" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "iotthingsgraph", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for undeploy-system-instance", function()
		local result = common.execute_aws_command_with_input({ "iotthingsgraph", "undeploy-system-instance" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "iotthingsgraph", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-flow-template", function()
		local result = common.execute_aws_command_with_input({ "iotthingsgraph", "update-flow-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-system-template", function()
		local result = common.execute_aws_command_with_input({ "iotthingsgraph", "update-system-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for upload-entity-definitions", function()
		local result = common.execute_aws_command_with_input({ "iotthingsgraph", "upload-entity-definitions" })
		assert.is_true(result.success)
	end)

end)