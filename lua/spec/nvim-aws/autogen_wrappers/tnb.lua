-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: tnb

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS tnb service testing", function()
	it("should generate a cli skeleton for cancel-sol-network-operation", function()
		local result = common.execute_aws_command_with_input({ "tnb", "cancel-sol-network-operation" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-sol-function-package", function()
		local result = common.execute_aws_command_with_input({ "tnb", "create-sol-function-package" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-sol-network-instance", function()
		local result = common.execute_aws_command_with_input({ "tnb", "create-sol-network-instance" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-sol-network-package", function()
		local result = common.execute_aws_command_with_input({ "tnb", "create-sol-network-package" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-sol-function-package", function()
		local result = common.execute_aws_command_with_input({ "tnb", "delete-sol-function-package" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-sol-network-instance", function()
		local result = common.execute_aws_command_with_input({ "tnb", "delete-sol-network-instance" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-sol-network-package", function()
		local result = common.execute_aws_command_with_input({ "tnb", "delete-sol-network-package" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-sol-function-instance", function()
		local result = common.execute_aws_command_with_input({ "tnb", "get-sol-function-instance" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-sol-function-package", function()
		local result = common.execute_aws_command_with_input({ "tnb", "get-sol-function-package" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-sol-function-package-content", function()
		local result = common.execute_aws_command_with_input({ "tnb", "get-sol-function-package-content" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-sol-function-package-descriptor", function()
		local result = common.execute_aws_command_with_input({ "tnb", "get-sol-function-package-descriptor" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-sol-network-instance", function()
		local result = common.execute_aws_command_with_input({ "tnb", "get-sol-network-instance" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-sol-network-operation", function()
		local result = common.execute_aws_command_with_input({ "tnb", "get-sol-network-operation" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-sol-network-package", function()
		local result = common.execute_aws_command_with_input({ "tnb", "get-sol-network-package" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-sol-network-package-content", function()
		local result = common.execute_aws_command_with_input({ "tnb", "get-sol-network-package-content" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-sol-network-package-descriptor", function()
		local result = common.execute_aws_command_with_input({ "tnb", "get-sol-network-package-descriptor" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for instantiate-sol-network-instance", function()
		local result = common.execute_aws_command_with_input({ "tnb", "instantiate-sol-network-instance" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-sol-function-instances", function()
		local result = common.execute_aws_command_with_input({ "tnb", "list-sol-function-instances" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-sol-function-packages", function()
		local result = common.execute_aws_command_with_input({ "tnb", "list-sol-function-packages" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-sol-network-instances", function()
		local result = common.execute_aws_command_with_input({ "tnb", "list-sol-network-instances" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-sol-network-operations", function()
		local result = common.execute_aws_command_with_input({ "tnb", "list-sol-network-operations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-sol-network-packages", function()
		local result = common.execute_aws_command_with_input({ "tnb", "list-sol-network-packages" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "tnb", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-sol-function-package-content", function()
		local result = common.execute_aws_command_with_input({ "tnb", "put-sol-function-package-content" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-sol-network-package-content", function()
		local result = common.execute_aws_command_with_input({ "tnb", "put-sol-network-package-content" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "tnb", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for terminate-sol-network-instance", function()
		local result = common.execute_aws_command_with_input({ "tnb", "terminate-sol-network-instance" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "tnb", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-sol-function-package", function()
		local result = common.execute_aws_command_with_input({ "tnb", "update-sol-function-package" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-sol-network-instance", function()
		local result = common.execute_aws_command_with_input({ "tnb", "update-sol-network-instance" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-sol-network-package", function()
		local result = common.execute_aws_command_with_input({ "tnb", "update-sol-network-package" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for validate-sol-function-package-content", function()
		local result = common.execute_aws_command_with_input({ "tnb", "validate-sol-function-package-content" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for validate-sol-network-package-content", function()
		local result = common.execute_aws_command_with_input({ "tnb", "validate-sol-network-package-content" })
		assert.is_true(result.success)
	end)

end)