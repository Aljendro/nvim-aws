-- AUTOGENERATED FILE - DO NOT EDIT
-- AWS Service: partnercentral-selling

require("nvim-aws").setup()
local service = require("nvim-aws.autogen_wrappers.partnercentral-selling")

describe("AWS partnercentral-selling service testing", function()
	it("should generate a cli skeleton with accept_engagement_invitation", function()
		local result = service.accept_engagement_invitation()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with assign_opportunity", function()
		local result = service.assign_opportunity()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with associate_opportunity", function()
		local result = service.associate_opportunity()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with create_engagement", function()
		local result = service.create_engagement()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with create_engagement_invitation", function()
		local result = service.create_engagement_invitation()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with create_opportunity", function()
		local result = service.create_opportunity()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with create_resource_snapshot", function()
		local result = service.create_resource_snapshot()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with create_resource_snapshot_job", function()
		local result = service.create_resource_snapshot_job()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with delete_resource_snapshot_job", function()
		local result = service.delete_resource_snapshot_job()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with disassociate_opportunity", function()
		local result = service.disassociate_opportunity()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_aws_opportunity_summary", function()
		local result = service.get_aws_opportunity_summary()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_engagement", function()
		local result = service.get_engagement()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_engagement_invitation", function()
		local result = service.get_engagement_invitation()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_opportunity", function()
		local result = service.get_opportunity()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_resource_snapshot", function()
		local result = service.get_resource_snapshot()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_resource_snapshot_job", function()
		local result = service.get_resource_snapshot_job()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_selling_system_settings", function()
		local result = service.get_selling_system_settings()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_engagement_by_accepting_invitation_tasks", function()
		local result = service.list_engagement_by_accepting_invitation_tasks()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_engagement_from_opportunity_tasks", function()
		local result = service.list_engagement_from_opportunity_tasks()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_engagement_invitations", function()
		local result = service.list_engagement_invitations()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_engagement_members", function()
		local result = service.list_engagement_members()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_engagement_resource_associations", function()
		local result = service.list_engagement_resource_associations()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_engagements", function()
		local result = service.list_engagements()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_opportunities", function()
		local result = service.list_opportunities()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_resource_snapshot_jobs", function()
		local result = service.list_resource_snapshot_jobs()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_resource_snapshots", function()
		local result = service.list_resource_snapshots()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_solutions", function()
		local result = service.list_solutions()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_tags_for_resource", function()
		local result = service.list_tags_for_resource()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with put_selling_system_settings", function()
		local result = service.put_selling_system_settings()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with reject_engagement_invitation", function()
		local result = service.reject_engagement_invitation()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with start_engagement_by_accepting_invitation_task", function()
		local result = service.start_engagement_by_accepting_invitation_task()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with start_engagement_from_opportunity_task", function()
		local result = service.start_engagement_from_opportunity_task()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with start_resource_snapshot_job", function()
		local result = service.start_resource_snapshot_job()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with stop_resource_snapshot_job", function()
		local result = service.stop_resource_snapshot_job()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with submit_opportunity", function()
		local result = service.submit_opportunity()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with tag_resource", function()
		local result = service.tag_resource()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with untag_resource", function()
		local result = service.untag_resource()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with update_opportunity", function()
		local result = service.update_opportunity()
		assert.is_true(result.success)
	end)

end)