-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: mediaconvert

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS mediaconvert service testing", function()
	it("should generate a cli skeleton for associate-certificate", function()
		local result = common.execute_aws_command_with_input({ "mediaconvert", "associate-certificate" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for cancel-job", function()
		local result = common.execute_aws_command_with_input({ "mediaconvert", "cancel-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-job", function()
		local result = common.execute_aws_command_with_input({ "mediaconvert", "create-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-job-template", function()
		local result = common.execute_aws_command_with_input({ "mediaconvert", "create-job-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-preset", function()
		local result = common.execute_aws_command_with_input({ "mediaconvert", "create-preset" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-queue", function()
		local result = common.execute_aws_command_with_input({ "mediaconvert", "create-queue" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-job-template", function()
		local result = common.execute_aws_command_with_input({ "mediaconvert", "delete-job-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-policy", function()
		local result = common.execute_aws_command_with_input({ "mediaconvert", "delete-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-preset", function()
		local result = common.execute_aws_command_with_input({ "mediaconvert", "delete-preset" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-queue", function()
		local result = common.execute_aws_command_with_input({ "mediaconvert", "delete-queue" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-endpoints", function()
		local result = common.execute_aws_command_with_input({ "mediaconvert", "describe-endpoints" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-certificate", function()
		local result = common.execute_aws_command_with_input({ "mediaconvert", "disassociate-certificate" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-job", function()
		local result = common.execute_aws_command_with_input({ "mediaconvert", "get-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-job-template", function()
		local result = common.execute_aws_command_with_input({ "mediaconvert", "get-job-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-policy", function()
		local result = common.execute_aws_command_with_input({ "mediaconvert", "get-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-preset", function()
		local result = common.execute_aws_command_with_input({ "mediaconvert", "get-preset" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-queue", function()
		local result = common.execute_aws_command_with_input({ "mediaconvert", "get-queue" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-job-templates", function()
		local result = common.execute_aws_command_with_input({ "mediaconvert", "list-job-templates" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-jobs", function()
		local result = common.execute_aws_command_with_input({ "mediaconvert", "list-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-presets", function()
		local result = common.execute_aws_command_with_input({ "mediaconvert", "list-presets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-queues", function()
		local result = common.execute_aws_command_with_input({ "mediaconvert", "list-queues" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "mediaconvert", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-versions", function()
		local result = common.execute_aws_command_with_input({ "mediaconvert", "list-versions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for probe", function()
		local result = common.execute_aws_command_with_input({ "mediaconvert", "probe" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-policy", function()
		local result = common.execute_aws_command_with_input({ "mediaconvert", "put-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for search-jobs", function()
		local result = common.execute_aws_command_with_input({ "mediaconvert", "search-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "mediaconvert", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "mediaconvert", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-job-template", function()
		local result = common.execute_aws_command_with_input({ "mediaconvert", "update-job-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-preset", function()
		local result = common.execute_aws_command_with_input({ "mediaconvert", "update-preset" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-queue", function()
		local result = common.execute_aws_command_with_input({ "mediaconvert", "update-queue" })
		assert.is_true(result.success)
	end)

end)