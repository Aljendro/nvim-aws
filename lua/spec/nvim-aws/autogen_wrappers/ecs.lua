-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: ecs

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS ecs service testing", function()
	it("should generate a cli skeleton for create-capacity-provider", function()
		local result = common.execute_aws_command_with_input({ "ecs", "create-capacity-provider" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-cluster", function()
		local result = common.execute_aws_command_with_input({ "ecs", "create-cluster" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-service", function()
		local result = common.execute_aws_command_with_input({ "ecs", "create-service" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-task-set", function()
		local result = common.execute_aws_command_with_input({ "ecs", "create-task-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-account-setting", function()
		local result = common.execute_aws_command_with_input({ "ecs", "delete-account-setting" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-attributes", function()
		local result = common.execute_aws_command_with_input({ "ecs", "delete-attributes" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-capacity-provider", function()
		local result = common.execute_aws_command_with_input({ "ecs", "delete-capacity-provider" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-cluster", function()
		local result = common.execute_aws_command_with_input({ "ecs", "delete-cluster" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-service", function()
		local result = common.execute_aws_command_with_input({ "ecs", "delete-service" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-task-definitions", function()
		local result = common.execute_aws_command_with_input({ "ecs", "delete-task-definitions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-task-set", function()
		local result = common.execute_aws_command_with_input({ "ecs", "delete-task-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for deregister-container-instance", function()
		local result = common.execute_aws_command_with_input({ "ecs", "deregister-container-instance" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for deregister-task-definition", function()
		local result = common.execute_aws_command_with_input({ "ecs", "deregister-task-definition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-capacity-providers", function()
		local result = common.execute_aws_command_with_input({ "ecs", "describe-capacity-providers" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-clusters", function()
		local result = common.execute_aws_command_with_input({ "ecs", "describe-clusters" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-container-instances", function()
		local result = common.execute_aws_command_with_input({ "ecs", "describe-container-instances" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-service-deployments", function()
		local result = common.execute_aws_command_with_input({ "ecs", "describe-service-deployments" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-service-revisions", function()
		local result = common.execute_aws_command_with_input({ "ecs", "describe-service-revisions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-services", function()
		local result = common.execute_aws_command_with_input({ "ecs", "describe-services" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-task-definition", function()
		local result = common.execute_aws_command_with_input({ "ecs", "describe-task-definition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-task-sets", function()
		local result = common.execute_aws_command_with_input({ "ecs", "describe-task-sets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-tasks", function()
		local result = common.execute_aws_command_with_input({ "ecs", "describe-tasks" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for discover-poll-endpoint", function()
		local result = common.execute_aws_command_with_input({ "ecs", "discover-poll-endpoint" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for execute-command", function()
		local result = common.execute_aws_command_with_input({ "ecs", "execute-command" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-task-protection", function()
		local result = common.execute_aws_command_with_input({ "ecs", "get-task-protection" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-account-settings", function()
		local result = common.execute_aws_command_with_input({ "ecs", "list-account-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-attributes", function()
		local result = common.execute_aws_command_with_input({ "ecs", "list-attributes" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-clusters", function()
		local result = common.execute_aws_command_with_input({ "ecs", "list-clusters" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-container-instances", function()
		local result = common.execute_aws_command_with_input({ "ecs", "list-container-instances" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-service-deployments", function()
		local result = common.execute_aws_command_with_input({ "ecs", "list-service-deployments" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-services", function()
		local result = common.execute_aws_command_with_input({ "ecs", "list-services" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-services-by-namespace", function()
		local result = common.execute_aws_command_with_input({ "ecs", "list-services-by-namespace" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "ecs", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-task-definition-families", function()
		local result = common.execute_aws_command_with_input({ "ecs", "list-task-definition-families" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-task-definitions", function()
		local result = common.execute_aws_command_with_input({ "ecs", "list-task-definitions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tasks", function()
		local result = common.execute_aws_command_with_input({ "ecs", "list-tasks" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-account-setting", function()
		local result = common.execute_aws_command_with_input({ "ecs", "put-account-setting" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-account-setting-default", function()
		local result = common.execute_aws_command_with_input({ "ecs", "put-account-setting-default" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-attributes", function()
		local result = common.execute_aws_command_with_input({ "ecs", "put-attributes" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-cluster-capacity-providers", function()
		local result = common.execute_aws_command_with_input({ "ecs", "put-cluster-capacity-providers" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for register-container-instance", function()
		local result = common.execute_aws_command_with_input({ "ecs", "register-container-instance" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for register-task-definition", function()
		local result = common.execute_aws_command_with_input({ "ecs", "register-task-definition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for run-task", function()
		local result = common.execute_aws_command_with_input({ "ecs", "run-task" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-task", function()
		local result = common.execute_aws_command_with_input({ "ecs", "start-task" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-task", function()
		local result = common.execute_aws_command_with_input({ "ecs", "stop-task" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for submit-attachment-state-changes", function()
		local result = common.execute_aws_command_with_input({ "ecs", "submit-attachment-state-changes" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for submit-container-state-change", function()
		local result = common.execute_aws_command_with_input({ "ecs", "submit-container-state-change" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for submit-task-state-change", function()
		local result = common.execute_aws_command_with_input({ "ecs", "submit-task-state-change" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "ecs", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "ecs", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-capacity-provider", function()
		local result = common.execute_aws_command_with_input({ "ecs", "update-capacity-provider" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-cluster", function()
		local result = common.execute_aws_command_with_input({ "ecs", "update-cluster" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-cluster-settings", function()
		local result = common.execute_aws_command_with_input({ "ecs", "update-cluster-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-container-agent", function()
		local result = common.execute_aws_command_with_input({ "ecs", "update-container-agent" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-container-instances-state", function()
		local result = common.execute_aws_command_with_input({ "ecs", "update-container-instances-state" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-service", function()
		local result = common.execute_aws_command_with_input({ "ecs", "update-service" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-service-primary-task-set", function()
		local result = common.execute_aws_command_with_input({ "ecs", "update-service-primary-task-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-task-protection", function()
		local result = common.execute_aws_command_with_input({ "ecs", "update-task-protection" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-task-set", function()
		local result = common.execute_aws_command_with_input({ "ecs", "update-task-set" })
		assert.is_true(result.success)
	end)

end)