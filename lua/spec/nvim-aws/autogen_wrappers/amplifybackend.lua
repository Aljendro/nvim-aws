-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: amplifybackend

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS amplifybackend service testing", function()
	it("should generate a cli skeleton for clone-backend", function()
		local result = common.execute_aws_command_with_input({ "amplifybackend", "clone-backend" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-backend", function()
		local result = common.execute_aws_command_with_input({ "amplifybackend", "create-backend" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-backend-api", function()
		local result = common.execute_aws_command_with_input({ "amplifybackend", "create-backend-api" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-backend-auth", function()
		local result = common.execute_aws_command_with_input({ "amplifybackend", "create-backend-auth" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-backend-config", function()
		local result = common.execute_aws_command_with_input({ "amplifybackend", "create-backend-config" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-backend-storage", function()
		local result = common.execute_aws_command_with_input({ "amplifybackend", "create-backend-storage" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-token", function()
		local result = common.execute_aws_command_with_input({ "amplifybackend", "create-token" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-backend", function()
		local result = common.execute_aws_command_with_input({ "amplifybackend", "delete-backend" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-backend-api", function()
		local result = common.execute_aws_command_with_input({ "amplifybackend", "delete-backend-api" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-backend-auth", function()
		local result = common.execute_aws_command_with_input({ "amplifybackend", "delete-backend-auth" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-backend-storage", function()
		local result = common.execute_aws_command_with_input({ "amplifybackend", "delete-backend-storage" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-token", function()
		local result = common.execute_aws_command_with_input({ "amplifybackend", "delete-token" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for generate-backend-api-models", function()
		local result = common.execute_aws_command_with_input({ "amplifybackend", "generate-backend-api-models" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-backend", function()
		local result = common.execute_aws_command_with_input({ "amplifybackend", "get-backend" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-backend-api", function()
		local result = common.execute_aws_command_with_input({ "amplifybackend", "get-backend-api" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-backend-api-models", function()
		local result = common.execute_aws_command_with_input({ "amplifybackend", "get-backend-api-models" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-backend-auth", function()
		local result = common.execute_aws_command_with_input({ "amplifybackend", "get-backend-auth" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-backend-job", function()
		local result = common.execute_aws_command_with_input({ "amplifybackend", "get-backend-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-backend-storage", function()
		local result = common.execute_aws_command_with_input({ "amplifybackend", "get-backend-storage" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-token", function()
		local result = common.execute_aws_command_with_input({ "amplifybackend", "get-token" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for import-backend-auth", function()
		local result = common.execute_aws_command_with_input({ "amplifybackend", "import-backend-auth" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for import-backend-storage", function()
		local result = common.execute_aws_command_with_input({ "amplifybackend", "import-backend-storage" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-backend-jobs", function()
		local result = common.execute_aws_command_with_input({ "amplifybackend", "list-backend-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-s3-buckets", function()
		local result = common.execute_aws_command_with_input({ "amplifybackend", "list-s3-buckets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for remove-all-backends", function()
		local result = common.execute_aws_command_with_input({ "amplifybackend", "remove-all-backends" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for remove-backend-config", function()
		local result = common.execute_aws_command_with_input({ "amplifybackend", "remove-backend-config" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-backend-api", function()
		local result = common.execute_aws_command_with_input({ "amplifybackend", "update-backend-api" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-backend-auth", function()
		local result = common.execute_aws_command_with_input({ "amplifybackend", "update-backend-auth" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-backend-config", function()
		local result = common.execute_aws_command_with_input({ "amplifybackend", "update-backend-config" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-backend-job", function()
		local result = common.execute_aws_command_with_input({ "amplifybackend", "update-backend-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-backend-storage", function()
		local result = common.execute_aws_command_with_input({ "amplifybackend", "update-backend-storage" })
		assert.is_true(result.success)
	end)

end)