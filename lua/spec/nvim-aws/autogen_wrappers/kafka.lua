-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: kafka

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS kafka service testing", function()
	it("should generate a cli skeleton for batch-associate-scram-secret", function()
		local result = common.execute_aws_command_with_input({ "kafka", "batch-associate-scram-secret" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-disassociate-scram-secret", function()
		local result = common.execute_aws_command_with_input({ "kafka", "batch-disassociate-scram-secret" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-cluster", function()
		local result = common.execute_aws_command_with_input({ "kafka", "create-cluster" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-cluster-v2", function()
		local result = common.execute_aws_command_with_input({ "kafka", "create-cluster-v2" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-configuration", function()
		local result = common.execute_aws_command_with_input({ "kafka", "create-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-replicator", function()
		local result = common.execute_aws_command_with_input({ "kafka", "create-replicator" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-vpc-connection", function()
		local result = common.execute_aws_command_with_input({ "kafka", "create-vpc-connection" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-cluster", function()
		local result = common.execute_aws_command_with_input({ "kafka", "delete-cluster" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-cluster-policy", function()
		local result = common.execute_aws_command_with_input({ "kafka", "delete-cluster-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-configuration", function()
		local result = common.execute_aws_command_with_input({ "kafka", "delete-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-replicator", function()
		local result = common.execute_aws_command_with_input({ "kafka", "delete-replicator" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-vpc-connection", function()
		local result = common.execute_aws_command_with_input({ "kafka", "delete-vpc-connection" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-cluster", function()
		local result = common.execute_aws_command_with_input({ "kafka", "describe-cluster" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-cluster-operation", function()
		local result = common.execute_aws_command_with_input({ "kafka", "describe-cluster-operation" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-cluster-operation-v2", function()
		local result = common.execute_aws_command_with_input({ "kafka", "describe-cluster-operation-v2" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-cluster-v2", function()
		local result = common.execute_aws_command_with_input({ "kafka", "describe-cluster-v2" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-configuration", function()
		local result = common.execute_aws_command_with_input({ "kafka", "describe-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-configuration-revision", function()
		local result = common.execute_aws_command_with_input({ "kafka", "describe-configuration-revision" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-replicator", function()
		local result = common.execute_aws_command_with_input({ "kafka", "describe-replicator" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-vpc-connection", function()
		local result = common.execute_aws_command_with_input({ "kafka", "describe-vpc-connection" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-bootstrap-brokers", function()
		local result = common.execute_aws_command_with_input({ "kafka", "get-bootstrap-brokers" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-cluster-policy", function()
		local result = common.execute_aws_command_with_input({ "kafka", "get-cluster-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-compatible-kafka-versions", function()
		local result = common.execute_aws_command_with_input({ "kafka", "get-compatible-kafka-versions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-client-vpc-connections", function()
		local result = common.execute_aws_command_with_input({ "kafka", "list-client-vpc-connections" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-cluster-operations", function()
		local result = common.execute_aws_command_with_input({ "kafka", "list-cluster-operations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-cluster-operations-v2", function()
		local result = common.execute_aws_command_with_input({ "kafka", "list-cluster-operations-v2" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-clusters", function()
		local result = common.execute_aws_command_with_input({ "kafka", "list-clusters" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-clusters-v2", function()
		local result = common.execute_aws_command_with_input({ "kafka", "list-clusters-v2" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-configuration-revisions", function()
		local result = common.execute_aws_command_with_input({ "kafka", "list-configuration-revisions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-configurations", function()
		local result = common.execute_aws_command_with_input({ "kafka", "list-configurations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-kafka-versions", function()
		local result = common.execute_aws_command_with_input({ "kafka", "list-kafka-versions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-nodes", function()
		local result = common.execute_aws_command_with_input({ "kafka", "list-nodes" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-replicators", function()
		local result = common.execute_aws_command_with_input({ "kafka", "list-replicators" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-scram-secrets", function()
		local result = common.execute_aws_command_with_input({ "kafka", "list-scram-secrets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "kafka", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-vpc-connections", function()
		local result = common.execute_aws_command_with_input({ "kafka", "list-vpc-connections" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-cluster-policy", function()
		local result = common.execute_aws_command_with_input({ "kafka", "put-cluster-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for reboot-broker", function()
		local result = common.execute_aws_command_with_input({ "kafka", "reboot-broker" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for reject-client-vpc-connection", function()
		local result = common.execute_aws_command_with_input({ "kafka", "reject-client-vpc-connection" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "kafka", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "kafka", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-broker-count", function()
		local result = common.execute_aws_command_with_input({ "kafka", "update-broker-count" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-broker-storage", function()
		local result = common.execute_aws_command_with_input({ "kafka", "update-broker-storage" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-broker-type", function()
		local result = common.execute_aws_command_with_input({ "kafka", "update-broker-type" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-cluster-configuration", function()
		local result = common.execute_aws_command_with_input({ "kafka", "update-cluster-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-cluster-kafka-version", function()
		local result = common.execute_aws_command_with_input({ "kafka", "update-cluster-kafka-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-configuration", function()
		local result = common.execute_aws_command_with_input({ "kafka", "update-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-connectivity", function()
		local result = common.execute_aws_command_with_input({ "kafka", "update-connectivity" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-monitoring", function()
		local result = common.execute_aws_command_with_input({ "kafka", "update-monitoring" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-replication-info", function()
		local result = common.execute_aws_command_with_input({ "kafka", "update-replication-info" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-security", function()
		local result = common.execute_aws_command_with_input({ "kafka", "update-security" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-storage", function()
		local result = common.execute_aws_command_with_input({ "kafka", "update-storage" })
		assert.is_true(result.success)
	end)

end)