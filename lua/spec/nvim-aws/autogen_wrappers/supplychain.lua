-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: supplychain

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS supplychain service testing", function()
	it("should generate a cli skeleton for create-bill-of-materials-import-job", function()
		local result = common.execute_aws_command_with_input({ "supplychain", "create-bill-of-materials-import-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-data-integration-flow", function()
		local result = common.execute_aws_command_with_input({ "supplychain", "create-data-integration-flow" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-data-lake-dataset", function()
		local result = common.execute_aws_command_with_input({ "supplychain", "create-data-lake-dataset" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-instance", function()
		local result = common.execute_aws_command_with_input({ "supplychain", "create-instance" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-data-integration-flow", function()
		local result = common.execute_aws_command_with_input({ "supplychain", "delete-data-integration-flow" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-data-lake-dataset", function()
		local result = common.execute_aws_command_with_input({ "supplychain", "delete-data-lake-dataset" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-instance", function()
		local result = common.execute_aws_command_with_input({ "supplychain", "delete-instance" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-bill-of-materials-import-job", function()
		local result = common.execute_aws_command_with_input({ "supplychain", "get-bill-of-materials-import-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-data-integration-flow", function()
		local result = common.execute_aws_command_with_input({ "supplychain", "get-data-integration-flow" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-data-lake-dataset", function()
		local result = common.execute_aws_command_with_input({ "supplychain", "get-data-lake-dataset" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-instance", function()
		local result = common.execute_aws_command_with_input({ "supplychain", "get-instance" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-data-integration-flows", function()
		local result = common.execute_aws_command_with_input({ "supplychain", "list-data-integration-flows" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-data-lake-datasets", function()
		local result = common.execute_aws_command_with_input({ "supplychain", "list-data-lake-datasets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-instances", function()
		local result = common.execute_aws_command_with_input({ "supplychain", "list-instances" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "supplychain", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for send-data-integration-event", function()
		local result = common.execute_aws_command_with_input({ "supplychain", "send-data-integration-event" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "supplychain", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "supplychain", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-data-integration-flow", function()
		local result = common.execute_aws_command_with_input({ "supplychain", "update-data-integration-flow" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-data-lake-dataset", function()
		local result = common.execute_aws_command_with_input({ "supplychain", "update-data-lake-dataset" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-instance", function()
		local result = common.execute_aws_command_with_input({ "supplychain", "update-instance" })
		assert.is_true(result.success)
	end)

end)