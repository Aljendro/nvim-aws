-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: workspaces-web

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS workspaces-web service testing", function()
	it("should generate a cli skeleton for associate-browser-settings", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "associate-browser-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for associate-data-protection-settings", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "associate-data-protection-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for associate-ip-access-settings", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "associate-ip-access-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for associate-network-settings", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "associate-network-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for associate-trust-store", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "associate-trust-store" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for associate-user-access-logging-settings", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "associate-user-access-logging-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for associate-user-settings", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "associate-user-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-browser-settings", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "create-browser-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-data-protection-settings", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "create-data-protection-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-identity-provider", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "create-identity-provider" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-ip-access-settings", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "create-ip-access-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-network-settings", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "create-network-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-portal", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "create-portal" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-trust-store", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "create-trust-store" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-user-access-logging-settings", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "create-user-access-logging-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-user-settings", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "create-user-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-browser-settings", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "delete-browser-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-data-protection-settings", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "delete-data-protection-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-identity-provider", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "delete-identity-provider" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-ip-access-settings", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "delete-ip-access-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-network-settings", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "delete-network-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-portal", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "delete-portal" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-trust-store", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "delete-trust-store" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-user-access-logging-settings", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "delete-user-access-logging-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-user-settings", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "delete-user-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-browser-settings", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "disassociate-browser-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-data-protection-settings", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "disassociate-data-protection-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-ip-access-settings", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "disassociate-ip-access-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-network-settings", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "disassociate-network-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-trust-store", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "disassociate-trust-store" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-user-access-logging-settings", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "disassociate-user-access-logging-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-user-settings", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "disassociate-user-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for expire-session", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "expire-session" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-browser-settings", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "get-browser-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-data-protection-settings", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "get-data-protection-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-identity-provider", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "get-identity-provider" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-ip-access-settings", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "get-ip-access-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-network-settings", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "get-network-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-portal", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "get-portal" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-portal-service-provider-metadata", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "get-portal-service-provider-metadata" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-session", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "get-session" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-trust-store", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "get-trust-store" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-trust-store-certificate", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "get-trust-store-certificate" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-user-access-logging-settings", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "get-user-access-logging-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-user-settings", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "get-user-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-browser-settings", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "list-browser-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-data-protection-settings", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "list-data-protection-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-identity-providers", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "list-identity-providers" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-ip-access-settings", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "list-ip-access-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-network-settings", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "list-network-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-portals", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "list-portals" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-sessions", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "list-sessions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-trust-store-certificates", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "list-trust-store-certificates" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-trust-stores", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "list-trust-stores" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-user-access-logging-settings", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "list-user-access-logging-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-user-settings", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "list-user-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-browser-settings", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "update-browser-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-data-protection-settings", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "update-data-protection-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-identity-provider", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "update-identity-provider" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-ip-access-settings", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "update-ip-access-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-network-settings", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "update-network-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-portal", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "update-portal" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-trust-store", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "update-trust-store" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-user-access-logging-settings", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "update-user-access-logging-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-user-settings", function()
		local result = common.execute_aws_command_with_input({ "workspaces-web", "update-user-settings" })
		assert.is_true(result.success)
	end)

end)