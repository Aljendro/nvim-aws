-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: lookoutequipment

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS lookoutequipment service testing", function()
	it("should generate a cli skeleton for create-dataset", function()
		local result = common.execute_aws_command_with_input({ "lookoutequipment", "create-dataset" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-inference-scheduler", function()
		local result = common.execute_aws_command_with_input({ "lookoutequipment", "create-inference-scheduler" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-label", function()
		local result = common.execute_aws_command_with_input({ "lookoutequipment", "create-label" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-label-group", function()
		local result = common.execute_aws_command_with_input({ "lookoutequipment", "create-label-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-model", function()
		local result = common.execute_aws_command_with_input({ "lookoutequipment", "create-model" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-retraining-scheduler", function()
		local result = common.execute_aws_command_with_input({ "lookoutequipment", "create-retraining-scheduler" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-dataset", function()
		local result = common.execute_aws_command_with_input({ "lookoutequipment", "delete-dataset" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-inference-scheduler", function()
		local result = common.execute_aws_command_with_input({ "lookoutequipment", "delete-inference-scheduler" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-label", function()
		local result = common.execute_aws_command_with_input({ "lookoutequipment", "delete-label" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-label-group", function()
		local result = common.execute_aws_command_with_input({ "lookoutequipment", "delete-label-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-model", function()
		local result = common.execute_aws_command_with_input({ "lookoutequipment", "delete-model" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-resource-policy", function()
		local result = common.execute_aws_command_with_input({ "lookoutequipment", "delete-resource-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-retraining-scheduler", function()
		local result = common.execute_aws_command_with_input({ "lookoutequipment", "delete-retraining-scheduler" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-data-ingestion-job", function()
		local result = common.execute_aws_command_with_input({ "lookoutequipment", "describe-data-ingestion-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-dataset", function()
		local result = common.execute_aws_command_with_input({ "lookoutequipment", "describe-dataset" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-inference-scheduler", function()
		local result = common.execute_aws_command_with_input({ "lookoutequipment", "describe-inference-scheduler" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-label", function()
		local result = common.execute_aws_command_with_input({ "lookoutequipment", "describe-label" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-label-group", function()
		local result = common.execute_aws_command_with_input({ "lookoutequipment", "describe-label-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-model", function()
		local result = common.execute_aws_command_with_input({ "lookoutequipment", "describe-model" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-model-version", function()
		local result = common.execute_aws_command_with_input({ "lookoutequipment", "describe-model-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-resource-policy", function()
		local result = common.execute_aws_command_with_input({ "lookoutequipment", "describe-resource-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-retraining-scheduler", function()
		local result = common.execute_aws_command_with_input({ "lookoutequipment", "describe-retraining-scheduler" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for import-dataset", function()
		local result = common.execute_aws_command_with_input({ "lookoutequipment", "import-dataset" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for import-model-version", function()
		local result = common.execute_aws_command_with_input({ "lookoutequipment", "import-model-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-data-ingestion-jobs", function()
		local result = common.execute_aws_command_with_input({ "lookoutequipment", "list-data-ingestion-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-datasets", function()
		local result = common.execute_aws_command_with_input({ "lookoutequipment", "list-datasets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-inference-events", function()
		local result = common.execute_aws_command_with_input({ "lookoutequipment", "list-inference-events" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-inference-executions", function()
		local result = common.execute_aws_command_with_input({ "lookoutequipment", "list-inference-executions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-inference-schedulers", function()
		local result = common.execute_aws_command_with_input({ "lookoutequipment", "list-inference-schedulers" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-label-groups", function()
		local result = common.execute_aws_command_with_input({ "lookoutequipment", "list-label-groups" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-labels", function()
		local result = common.execute_aws_command_with_input({ "lookoutequipment", "list-labels" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-model-versions", function()
		local result = common.execute_aws_command_with_input({ "lookoutequipment", "list-model-versions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-models", function()
		local result = common.execute_aws_command_with_input({ "lookoutequipment", "list-models" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-retraining-schedulers", function()
		local result = common.execute_aws_command_with_input({ "lookoutequipment", "list-retraining-schedulers" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-sensor-statistics", function()
		local result = common.execute_aws_command_with_input({ "lookoutequipment", "list-sensor-statistics" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "lookoutequipment", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-resource-policy", function()
		local result = common.execute_aws_command_with_input({ "lookoutequipment", "put-resource-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-data-ingestion-job", function()
		local result = common.execute_aws_command_with_input({ "lookoutequipment", "start-data-ingestion-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-inference-scheduler", function()
		local result = common.execute_aws_command_with_input({ "lookoutequipment", "start-inference-scheduler" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-retraining-scheduler", function()
		local result = common.execute_aws_command_with_input({ "lookoutequipment", "start-retraining-scheduler" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-inference-scheduler", function()
		local result = common.execute_aws_command_with_input({ "lookoutequipment", "stop-inference-scheduler" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-retraining-scheduler", function()
		local result = common.execute_aws_command_with_input({ "lookoutequipment", "stop-retraining-scheduler" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "lookoutequipment", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "lookoutequipment", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-active-model-version", function()
		local result = common.execute_aws_command_with_input({ "lookoutequipment", "update-active-model-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-inference-scheduler", function()
		local result = common.execute_aws_command_with_input({ "lookoutequipment", "update-inference-scheduler" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-label-group", function()
		local result = common.execute_aws_command_with_input({ "lookoutequipment", "update-label-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-model", function()
		local result = common.execute_aws_command_with_input({ "lookoutequipment", "update-model" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-retraining-scheduler", function()
		local result = common.execute_aws_command_with_input({ "lookoutequipment", "update-retraining-scheduler" })
		assert.is_true(result.success)
	end)

end)