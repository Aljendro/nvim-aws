-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: device-farm

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS device-farm service testing", function()
	it("should generate a cli skeleton for create-device-pool", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "create-device-pool" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-instance-profile", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "create-instance-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-network-profile", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "create-network-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-project", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "create-project" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-remote-access-session", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "create-remote-access-session" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-test-grid-project", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "create-test-grid-project" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-test-grid-url", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "create-test-grid-url" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-upload", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "create-upload" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-vpce-configuration", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "create-vpce-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-device-pool", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "delete-device-pool" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-instance-profile", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "delete-instance-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-network-profile", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "delete-network-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-project", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "delete-project" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-remote-access-session", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "delete-remote-access-session" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-run", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "delete-run" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-test-grid-project", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "delete-test-grid-project" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-upload", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "delete-upload" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-vpce-configuration", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "delete-vpce-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-account-settings", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "get-account-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-device", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "get-device" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-device-instance", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "get-device-instance" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-device-pool", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "get-device-pool" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-device-pool-compatibility", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "get-device-pool-compatibility" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-instance-profile", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "get-instance-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-job", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "get-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-network-profile", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "get-network-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-offering-status", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "get-offering-status" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-project", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "get-project" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-remote-access-session", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "get-remote-access-session" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-run", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "get-run" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-suite", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "get-suite" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-test", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "get-test" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-test-grid-project", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "get-test-grid-project" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-test-grid-session", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "get-test-grid-session" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-upload", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "get-upload" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-vpce-configuration", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "get-vpce-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for install-to-remote-access-session", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "install-to-remote-access-session" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-artifacts", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "list-artifacts" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-device-instances", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "list-device-instances" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-device-pools", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "list-device-pools" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-devices", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "list-devices" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-instance-profiles", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "list-instance-profiles" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-jobs", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "list-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-network-profiles", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "list-network-profiles" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-offering-promotions", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "list-offering-promotions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-offering-transactions", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "list-offering-transactions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-offerings", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "list-offerings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-projects", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "list-projects" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-remote-access-sessions", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "list-remote-access-sessions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-runs", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "list-runs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-samples", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "list-samples" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-suites", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "list-suites" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-test-grid-projects", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "list-test-grid-projects" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-test-grid-session-actions", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "list-test-grid-session-actions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-test-grid-session-artifacts", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "list-test-grid-session-artifacts" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-test-grid-sessions", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "list-test-grid-sessions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tests", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "list-tests" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-unique-problems", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "list-unique-problems" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-uploads", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "list-uploads" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-vpce-configurations", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "list-vpce-configurations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for purchase-offering", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "purchase-offering" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for renew-offering", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "renew-offering" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for schedule-run", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "schedule-run" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-job", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "stop-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-remote-access-session", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "stop-remote-access-session" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-run", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "stop-run" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-device-instance", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "update-device-instance" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-device-pool", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "update-device-pool" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-instance-profile", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "update-instance-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-network-profile", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "update-network-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-project", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "update-project" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-test-grid-project", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "update-test-grid-project" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-upload", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "update-upload" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-vpce-configuration", function()
		local result = common.execute_aws_command_with_input({ "devicefarm", "update-vpce-configuration" })
		assert.is_true(result.success)
	end)

end)