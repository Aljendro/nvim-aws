-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: inspector2

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS inspector2 service testing", function()
	it("should generate a cli skeleton for associate-member", function()
		local result = common.execute_aws_command_with_input({ "inspector2", "associate-member" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-get-account-status", function()
		local result = common.execute_aws_command_with_input({ "inspector2", "batch-get-account-status" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-get-code-snippet", function()
		local result = common.execute_aws_command_with_input({ "inspector2", "batch-get-code-snippet" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-get-finding-details", function()
		local result = common.execute_aws_command_with_input({ "inspector2", "batch-get-finding-details" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-get-free-trial-info", function()
		local result = common.execute_aws_command_with_input({ "inspector2", "batch-get-free-trial-info" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-get-member-ec2-deep-inspection-status", function()
		local result = common.execute_aws_command_with_input({ "inspector2", "batch-get-member-ec2-deep-inspection-status" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-update-member-ec2-deep-inspection-status", function()
		local result = common.execute_aws_command_with_input({ "inspector2", "batch-update-member-ec2-deep-inspection-status" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for cancel-findings-report", function()
		local result = common.execute_aws_command_with_input({ "inspector2", "cancel-findings-report" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for cancel-sbom-export", function()
		local result = common.execute_aws_command_with_input({ "inspector2", "cancel-sbom-export" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-cis-scan-configuration", function()
		local result = common.execute_aws_command_with_input({ "inspector2", "create-cis-scan-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-filter", function()
		local result = common.execute_aws_command_with_input({ "inspector2", "create-filter" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-findings-report", function()
		local result = common.execute_aws_command_with_input({ "inspector2", "create-findings-report" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-sbom-export", function()
		local result = common.execute_aws_command_with_input({ "inspector2", "create-sbom-export" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-cis-scan-configuration", function()
		local result = common.execute_aws_command_with_input({ "inspector2", "delete-cis-scan-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-filter", function()
		local result = common.execute_aws_command_with_input({ "inspector2", "delete-filter" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-organization-configuration", function()
		local result = common.execute_aws_command_with_input({ "inspector2", "describe-organization-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disable", function()
		local result = common.execute_aws_command_with_input({ "inspector2", "disable" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disable-delegated-admin-account", function()
		local result = common.execute_aws_command_with_input({ "inspector2", "disable-delegated-admin-account" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-member", function()
		local result = common.execute_aws_command_with_input({ "inspector2", "disassociate-member" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for enable", function()
		local result = common.execute_aws_command_with_input({ "inspector2", "enable" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for enable-delegated-admin-account", function()
		local result = common.execute_aws_command_with_input({ "inspector2", "enable-delegated-admin-account" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-cis-scan-report", function()
		local result = common.execute_aws_command_with_input({ "inspector2", "get-cis-scan-report" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-cis-scan-result-details", function()
		local result = common.execute_aws_command_with_input({ "inspector2", "get-cis-scan-result-details" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-configuration", function()
		local result = common.execute_aws_command_with_input({ "inspector2", "get-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-delegated-admin-account", function()
		local result = common.execute_aws_command_with_input({ "inspector2", "get-delegated-admin-account" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-ec2-deep-inspection-configuration", function()
		local result = common.execute_aws_command_with_input({ "inspector2", "get-ec2-deep-inspection-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-encryption-key", function()
		local result = common.execute_aws_command_with_input({ "inspector2", "get-encryption-key" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-findings-report-status", function()
		local result = common.execute_aws_command_with_input({ "inspector2", "get-findings-report-status" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-member", function()
		local result = common.execute_aws_command_with_input({ "inspector2", "get-member" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-sbom-export", function()
		local result = common.execute_aws_command_with_input({ "inspector2", "get-sbom-export" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-account-permissions", function()
		local result = common.execute_aws_command_with_input({ "inspector2", "list-account-permissions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-cis-scan-configurations", function()
		local result = common.execute_aws_command_with_input({ "inspector2", "list-cis-scan-configurations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-cis-scan-results-aggregated-by-checks", function()
		local result = common.execute_aws_command_with_input({ "inspector2", "list-cis-scan-results-aggregated-by-checks" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-cis-scan-results-aggregated-by-target-resource", function()
		local result = common.execute_aws_command_with_input({ "inspector2", "list-cis-scan-results-aggregated-by-target-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-cis-scans", function()
		local result = common.execute_aws_command_with_input({ "inspector2", "list-cis-scans" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-coverage", function()
		local result = common.execute_aws_command_with_input({ "inspector2", "list-coverage" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-coverage-statistics", function()
		local result = common.execute_aws_command_with_input({ "inspector2", "list-coverage-statistics" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-delegated-admin-accounts", function()
		local result = common.execute_aws_command_with_input({ "inspector2", "list-delegated-admin-accounts" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-filters", function()
		local result = common.execute_aws_command_with_input({ "inspector2", "list-filters" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-finding-aggregations", function()
		local result = common.execute_aws_command_with_input({ "inspector2", "list-finding-aggregations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-findings", function()
		local result = common.execute_aws_command_with_input({ "inspector2", "list-findings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-members", function()
		local result = common.execute_aws_command_with_input({ "inspector2", "list-members" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "inspector2", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-usage-totals", function()
		local result = common.execute_aws_command_with_input({ "inspector2", "list-usage-totals" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for reset-encryption-key", function()
		local result = common.execute_aws_command_with_input({ "inspector2", "reset-encryption-key" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for search-vulnerabilities", function()
		local result = common.execute_aws_command_with_input({ "inspector2", "search-vulnerabilities" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for send-cis-session-health", function()
		local result = common.execute_aws_command_with_input({ "inspector2", "send-cis-session-health" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for send-cis-session-telemetry", function()
		local result = common.execute_aws_command_with_input({ "inspector2", "send-cis-session-telemetry" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-cis-session", function()
		local result = common.execute_aws_command_with_input({ "inspector2", "start-cis-session" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-cis-session", function()
		local result = common.execute_aws_command_with_input({ "inspector2", "stop-cis-session" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "inspector2", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "inspector2", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-cis-scan-configuration", function()
		local result = common.execute_aws_command_with_input({ "inspector2", "update-cis-scan-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-configuration", function()
		local result = common.execute_aws_command_with_input({ "inspector2", "update-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-ec2-deep-inspection-configuration", function()
		local result = common.execute_aws_command_with_input({ "inspector2", "update-ec2-deep-inspection-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-encryption-key", function()
		local result = common.execute_aws_command_with_input({ "inspector2", "update-encryption-key" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-filter", function()
		local result = common.execute_aws_command_with_input({ "inspector2", "update-filter" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-org-ec2-deep-inspection-configuration", function()
		local result = common.execute_aws_command_with_input({ "inspector2", "update-org-ec2-deep-inspection-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-organization-configuration", function()
		local result = common.execute_aws_command_with_input({ "inspector2", "update-organization-configuration" })
		assert.is_true(result.success)
	end)

end)