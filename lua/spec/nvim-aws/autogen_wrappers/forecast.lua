-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: forecast

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS forecast service testing", function()
	it("should generate a cli skeleton for create-auto-predictor", function()
		local result = common.execute_aws_command_with_input({ "forecast", "create-auto-predictor" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-dataset", function()
		local result = common.execute_aws_command_with_input({ "forecast", "create-dataset" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-dataset-group", function()
		local result = common.execute_aws_command_with_input({ "forecast", "create-dataset-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-dataset-import-job", function()
		local result = common.execute_aws_command_with_input({ "forecast", "create-dataset-import-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-explainability", function()
		local result = common.execute_aws_command_with_input({ "forecast", "create-explainability" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-explainability-export", function()
		local result = common.execute_aws_command_with_input({ "forecast", "create-explainability-export" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-forecast", function()
		local result = common.execute_aws_command_with_input({ "forecast", "create-forecast" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-forecast-export-job", function()
		local result = common.execute_aws_command_with_input({ "forecast", "create-forecast-export-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-monitor", function()
		local result = common.execute_aws_command_with_input({ "forecast", "create-monitor" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-predictor", function()
		local result = common.execute_aws_command_with_input({ "forecast", "create-predictor" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-predictor-backtest-export-job", function()
		local result = common.execute_aws_command_with_input({ "forecast", "create-predictor-backtest-export-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-what-if-analysis", function()
		local result = common.execute_aws_command_with_input({ "forecast", "create-what-if-analysis" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-what-if-forecast", function()
		local result = common.execute_aws_command_with_input({ "forecast", "create-what-if-forecast" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-what-if-forecast-export", function()
		local result = common.execute_aws_command_with_input({ "forecast", "create-what-if-forecast-export" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-dataset", function()
		local result = common.execute_aws_command_with_input({ "forecast", "delete-dataset" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-dataset-group", function()
		local result = common.execute_aws_command_with_input({ "forecast", "delete-dataset-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-dataset-import-job", function()
		local result = common.execute_aws_command_with_input({ "forecast", "delete-dataset-import-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-explainability", function()
		local result = common.execute_aws_command_with_input({ "forecast", "delete-explainability" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-explainability-export", function()
		local result = common.execute_aws_command_with_input({ "forecast", "delete-explainability-export" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-forecast", function()
		local result = common.execute_aws_command_with_input({ "forecast", "delete-forecast" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-forecast-export-job", function()
		local result = common.execute_aws_command_with_input({ "forecast", "delete-forecast-export-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-monitor", function()
		local result = common.execute_aws_command_with_input({ "forecast", "delete-monitor" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-predictor", function()
		local result = common.execute_aws_command_with_input({ "forecast", "delete-predictor" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-predictor-backtest-export-job", function()
		local result = common.execute_aws_command_with_input({ "forecast", "delete-predictor-backtest-export-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-resource-tree", function()
		local result = common.execute_aws_command_with_input({ "forecast", "delete-resource-tree" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-what-if-analysis", function()
		local result = common.execute_aws_command_with_input({ "forecast", "delete-what-if-analysis" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-what-if-forecast", function()
		local result = common.execute_aws_command_with_input({ "forecast", "delete-what-if-forecast" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-what-if-forecast-export", function()
		local result = common.execute_aws_command_with_input({ "forecast", "delete-what-if-forecast-export" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-auto-predictor", function()
		local result = common.execute_aws_command_with_input({ "forecast", "describe-auto-predictor" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-dataset", function()
		local result = common.execute_aws_command_with_input({ "forecast", "describe-dataset" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-dataset-group", function()
		local result = common.execute_aws_command_with_input({ "forecast", "describe-dataset-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-dataset-import-job", function()
		local result = common.execute_aws_command_with_input({ "forecast", "describe-dataset-import-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-explainability", function()
		local result = common.execute_aws_command_with_input({ "forecast", "describe-explainability" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-explainability-export", function()
		local result = common.execute_aws_command_with_input({ "forecast", "describe-explainability-export" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-forecast", function()
		local result = common.execute_aws_command_with_input({ "forecast", "describe-forecast" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-forecast-export-job", function()
		local result = common.execute_aws_command_with_input({ "forecast", "describe-forecast-export-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-monitor", function()
		local result = common.execute_aws_command_with_input({ "forecast", "describe-monitor" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-predictor", function()
		local result = common.execute_aws_command_with_input({ "forecast", "describe-predictor" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-predictor-backtest-export-job", function()
		local result = common.execute_aws_command_with_input({ "forecast", "describe-predictor-backtest-export-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-what-if-analysis", function()
		local result = common.execute_aws_command_with_input({ "forecast", "describe-what-if-analysis" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-what-if-forecast", function()
		local result = common.execute_aws_command_with_input({ "forecast", "describe-what-if-forecast" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-what-if-forecast-export", function()
		local result = common.execute_aws_command_with_input({ "forecast", "describe-what-if-forecast-export" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-accuracy-metrics", function()
		local result = common.execute_aws_command_with_input({ "forecast", "get-accuracy-metrics" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-dataset-groups", function()
		local result = common.execute_aws_command_with_input({ "forecast", "list-dataset-groups" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-dataset-import-jobs", function()
		local result = common.execute_aws_command_with_input({ "forecast", "list-dataset-import-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-datasets", function()
		local result = common.execute_aws_command_with_input({ "forecast", "list-datasets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-explainabilities", function()
		local result = common.execute_aws_command_with_input({ "forecast", "list-explainabilities" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-explainability-exports", function()
		local result = common.execute_aws_command_with_input({ "forecast", "list-explainability-exports" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-forecast-export-jobs", function()
		local result = common.execute_aws_command_with_input({ "forecast", "list-forecast-export-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-forecasts", function()
		local result = common.execute_aws_command_with_input({ "forecast", "list-forecasts" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-monitor-evaluations", function()
		local result = common.execute_aws_command_with_input({ "forecast", "list-monitor-evaluations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-monitors", function()
		local result = common.execute_aws_command_with_input({ "forecast", "list-monitors" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-predictor-backtest-export-jobs", function()
		local result = common.execute_aws_command_with_input({ "forecast", "list-predictor-backtest-export-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-predictors", function()
		local result = common.execute_aws_command_with_input({ "forecast", "list-predictors" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "forecast", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-what-if-analyses", function()
		local result = common.execute_aws_command_with_input({ "forecast", "list-what-if-analyses" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-what-if-forecast-exports", function()
		local result = common.execute_aws_command_with_input({ "forecast", "list-what-if-forecast-exports" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-what-if-forecasts", function()
		local result = common.execute_aws_command_with_input({ "forecast", "list-what-if-forecasts" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for resume-resource", function()
		local result = common.execute_aws_command_with_input({ "forecast", "resume-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-resource", function()
		local result = common.execute_aws_command_with_input({ "forecast", "stop-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "forecast", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "forecast", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-dataset-group", function()
		local result = common.execute_aws_command_with_input({ "forecast", "update-dataset-group" })
		assert.is_true(result.success)
	end)

end)