-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: data-pipeline

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS data-pipeline service testing", function()
	it("should generate a cli skeleton for activate-pipeline", function()
		local result = common.execute_aws_command_with_input({ "datapipeline", "activate-pipeline" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for add-tags", function()
		local result = common.execute_aws_command_with_input({ "datapipeline", "add-tags" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-pipeline", function()
		local result = common.execute_aws_command_with_input({ "datapipeline", "create-pipeline" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for deactivate-pipeline", function()
		local result = common.execute_aws_command_with_input({ "datapipeline", "deactivate-pipeline" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-pipeline", function()
		local result = common.execute_aws_command_with_input({ "datapipeline", "delete-pipeline" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-objects", function()
		local result = common.execute_aws_command_with_input({ "datapipeline", "describe-objects" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-pipelines", function()
		local result = common.execute_aws_command_with_input({ "datapipeline", "describe-pipelines" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for evaluate-expression", function()
		local result = common.execute_aws_command_with_input({ "datapipeline", "evaluate-expression" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-pipeline-definition", function()
		local result = common.execute_aws_command_with_input({ "datapipeline", "get-pipeline-definition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-pipelines", function()
		local result = common.execute_aws_command_with_input({ "datapipeline", "list-pipelines" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for poll-for-task", function()
		local result = common.execute_aws_command_with_input({ "datapipeline", "poll-for-task" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-pipeline-definition", function()
		local result = common.execute_aws_command_with_input({ "datapipeline", "put-pipeline-definition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for query-objects", function()
		local result = common.execute_aws_command_with_input({ "datapipeline", "query-objects" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for remove-tags", function()
		local result = common.execute_aws_command_with_input({ "datapipeline", "remove-tags" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for report-task-progress", function()
		local result = common.execute_aws_command_with_input({ "datapipeline", "report-task-progress" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for report-task-runner-heartbeat", function()
		local result = common.execute_aws_command_with_input({ "datapipeline", "report-task-runner-heartbeat" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for set-status", function()
		local result = common.execute_aws_command_with_input({ "datapipeline", "set-status" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for set-task-status", function()
		local result = common.execute_aws_command_with_input({ "datapipeline", "set-task-status" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for validate-pipeline-definition", function()
		local result = common.execute_aws_command_with_input({ "datapipeline", "validate-pipeline-definition" })
		assert.is_true(result.success)
	end)

end)