-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: ssm

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS ssm service testing", function()
	it("should generate a cli skeleton for add-tags-to-resource", function()
		local result = common.execute_aws_command_with_input({ "ssm", "add-tags-to-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for associate-ops-item-related-item", function()
		local result = common.execute_aws_command_with_input({ "ssm", "associate-ops-item-related-item" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for cancel-command", function()
		local result = common.execute_aws_command_with_input({ "ssm", "cancel-command" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for cancel-maintenance-window-execution", function()
		local result = common.execute_aws_command_with_input({ "ssm", "cancel-maintenance-window-execution" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-activation", function()
		local result = common.execute_aws_command_with_input({ "ssm", "create-activation" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-association", function()
		local result = common.execute_aws_command_with_input({ "ssm", "create-association" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-association-batch", function()
		local result = common.execute_aws_command_with_input({ "ssm", "create-association-batch" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-document", function()
		local result = common.execute_aws_command_with_input({ "ssm", "create-document" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-maintenance-window", function()
		local result = common.execute_aws_command_with_input({ "ssm", "create-maintenance-window" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-ops-item", function()
		local result = common.execute_aws_command_with_input({ "ssm", "create-ops-item" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-ops-metadata", function()
		local result = common.execute_aws_command_with_input({ "ssm", "create-ops-metadata" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-patch-baseline", function()
		local result = common.execute_aws_command_with_input({ "ssm", "create-patch-baseline" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-resource-data-sync", function()
		local result = common.execute_aws_command_with_input({ "ssm", "create-resource-data-sync" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-activation", function()
		local result = common.execute_aws_command_with_input({ "ssm", "delete-activation" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-association", function()
		local result = common.execute_aws_command_with_input({ "ssm", "delete-association" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-document", function()
		local result = common.execute_aws_command_with_input({ "ssm", "delete-document" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-inventory", function()
		local result = common.execute_aws_command_with_input({ "ssm", "delete-inventory" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-maintenance-window", function()
		local result = common.execute_aws_command_with_input({ "ssm", "delete-maintenance-window" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-ops-item", function()
		local result = common.execute_aws_command_with_input({ "ssm", "delete-ops-item" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-ops-metadata", function()
		local result = common.execute_aws_command_with_input({ "ssm", "delete-ops-metadata" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-parameter", function()
		local result = common.execute_aws_command_with_input({ "ssm", "delete-parameter" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-parameters", function()
		local result = common.execute_aws_command_with_input({ "ssm", "delete-parameters" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-patch-baseline", function()
		local result = common.execute_aws_command_with_input({ "ssm", "delete-patch-baseline" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-resource-data-sync", function()
		local result = common.execute_aws_command_with_input({ "ssm", "delete-resource-data-sync" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-resource-policy", function()
		local result = common.execute_aws_command_with_input({ "ssm", "delete-resource-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for deregister-managed-instance", function()
		local result = common.execute_aws_command_with_input({ "ssm", "deregister-managed-instance" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for deregister-patch-baseline-for-patch-group", function()
		local result = common.execute_aws_command_with_input({ "ssm", "deregister-patch-baseline-for-patch-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for deregister-target-from-maintenance-window", function()
		local result = common.execute_aws_command_with_input({ "ssm", "deregister-target-from-maintenance-window" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for deregister-task-from-maintenance-window", function()
		local result = common.execute_aws_command_with_input({ "ssm", "deregister-task-from-maintenance-window" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-activations", function()
		local result = common.execute_aws_command_with_input({ "ssm", "describe-activations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-association", function()
		local result = common.execute_aws_command_with_input({ "ssm", "describe-association" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-association-execution-targets", function()
		local result = common.execute_aws_command_with_input({ "ssm", "describe-association-execution-targets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-association-executions", function()
		local result = common.execute_aws_command_with_input({ "ssm", "describe-association-executions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-automation-executions", function()
		local result = common.execute_aws_command_with_input({ "ssm", "describe-automation-executions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-automation-step-executions", function()
		local result = common.execute_aws_command_with_input({ "ssm", "describe-automation-step-executions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-available-patches", function()
		local result = common.execute_aws_command_with_input({ "ssm", "describe-available-patches" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-document", function()
		local result = common.execute_aws_command_with_input({ "ssm", "describe-document" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-document-permission", function()
		local result = common.execute_aws_command_with_input({ "ssm", "describe-document-permission" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-effective-instance-associations", function()
		local result = common.execute_aws_command_with_input({ "ssm", "describe-effective-instance-associations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-effective-patches-for-patch-baseline", function()
		local result = common.execute_aws_command_with_input({ "ssm", "describe-effective-patches-for-patch-baseline" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-instance-associations-status", function()
		local result = common.execute_aws_command_with_input({ "ssm", "describe-instance-associations-status" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-instance-information", function()
		local result = common.execute_aws_command_with_input({ "ssm", "describe-instance-information" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-instance-patch-states", function()
		local result = common.execute_aws_command_with_input({ "ssm", "describe-instance-patch-states" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-instance-patch-states-for-patch-group", function()
		local result = common.execute_aws_command_with_input({ "ssm", "describe-instance-patch-states-for-patch-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-instance-patches", function()
		local result = common.execute_aws_command_with_input({ "ssm", "describe-instance-patches" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-instance-properties", function()
		local result = common.execute_aws_command_with_input({ "ssm", "describe-instance-properties" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-inventory-deletions", function()
		local result = common.execute_aws_command_with_input({ "ssm", "describe-inventory-deletions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-maintenance-window-execution-task-invocations", function()
		local result = common.execute_aws_command_with_input({ "ssm", "describe-maintenance-window-execution-task-invocations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-maintenance-window-execution-tasks", function()
		local result = common.execute_aws_command_with_input({ "ssm", "describe-maintenance-window-execution-tasks" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-maintenance-window-executions", function()
		local result = common.execute_aws_command_with_input({ "ssm", "describe-maintenance-window-executions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-maintenance-window-schedule", function()
		local result = common.execute_aws_command_with_input({ "ssm", "describe-maintenance-window-schedule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-maintenance-window-targets", function()
		local result = common.execute_aws_command_with_input({ "ssm", "describe-maintenance-window-targets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-maintenance-window-tasks", function()
		local result = common.execute_aws_command_with_input({ "ssm", "describe-maintenance-window-tasks" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-maintenance-windows", function()
		local result = common.execute_aws_command_with_input({ "ssm", "describe-maintenance-windows" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-maintenance-windows-for-target", function()
		local result = common.execute_aws_command_with_input({ "ssm", "describe-maintenance-windows-for-target" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-ops-items", function()
		local result = common.execute_aws_command_with_input({ "ssm", "describe-ops-items" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-parameters", function()
		local result = common.execute_aws_command_with_input({ "ssm", "describe-parameters" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-patch-baselines", function()
		local result = common.execute_aws_command_with_input({ "ssm", "describe-patch-baselines" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-patch-group-state", function()
		local result = common.execute_aws_command_with_input({ "ssm", "describe-patch-group-state" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-patch-groups", function()
		local result = common.execute_aws_command_with_input({ "ssm", "describe-patch-groups" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-patch-properties", function()
		local result = common.execute_aws_command_with_input({ "ssm", "describe-patch-properties" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-sessions", function()
		local result = common.execute_aws_command_with_input({ "ssm", "describe-sessions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-ops-item-related-item", function()
		local result = common.execute_aws_command_with_input({ "ssm", "disassociate-ops-item-related-item" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-automation-execution", function()
		local result = common.execute_aws_command_with_input({ "ssm", "get-automation-execution" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-calendar-state", function()
		local result = common.execute_aws_command_with_input({ "ssm", "get-calendar-state" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-command-invocation", function()
		local result = common.execute_aws_command_with_input({ "ssm", "get-command-invocation" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-connection-status", function()
		local result = common.execute_aws_command_with_input({ "ssm", "get-connection-status" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-default-patch-baseline", function()
		local result = common.execute_aws_command_with_input({ "ssm", "get-default-patch-baseline" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-deployable-patch-snapshot-for-instance", function()
		local result = common.execute_aws_command_with_input({ "ssm", "get-deployable-patch-snapshot-for-instance" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-document", function()
		local result = common.execute_aws_command_with_input({ "ssm", "get-document" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-execution-preview", function()
		local result = common.execute_aws_command_with_input({ "ssm", "get-execution-preview" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-inventory", function()
		local result = common.execute_aws_command_with_input({ "ssm", "get-inventory" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-inventory-schema", function()
		local result = common.execute_aws_command_with_input({ "ssm", "get-inventory-schema" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-maintenance-window", function()
		local result = common.execute_aws_command_with_input({ "ssm", "get-maintenance-window" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-maintenance-window-execution", function()
		local result = common.execute_aws_command_with_input({ "ssm", "get-maintenance-window-execution" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-maintenance-window-execution-task", function()
		local result = common.execute_aws_command_with_input({ "ssm", "get-maintenance-window-execution-task" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-maintenance-window-execution-task-invocation", function()
		local result = common.execute_aws_command_with_input({ "ssm", "get-maintenance-window-execution-task-invocation" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-maintenance-window-task", function()
		local result = common.execute_aws_command_with_input({ "ssm", "get-maintenance-window-task" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-ops-item", function()
		local result = common.execute_aws_command_with_input({ "ssm", "get-ops-item" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-ops-metadata", function()
		local result = common.execute_aws_command_with_input({ "ssm", "get-ops-metadata" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-ops-summary", function()
		local result = common.execute_aws_command_with_input({ "ssm", "get-ops-summary" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-parameter", function()
		local result = common.execute_aws_command_with_input({ "ssm", "get-parameter" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-parameter-history", function()
		local result = common.execute_aws_command_with_input({ "ssm", "get-parameter-history" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-parameters", function()
		local result = common.execute_aws_command_with_input({ "ssm", "get-parameters" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-parameters-by-path", function()
		local result = common.execute_aws_command_with_input({ "ssm", "get-parameters-by-path" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-patch-baseline", function()
		local result = common.execute_aws_command_with_input({ "ssm", "get-patch-baseline" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-patch-baseline-for-patch-group", function()
		local result = common.execute_aws_command_with_input({ "ssm", "get-patch-baseline-for-patch-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-resource-policies", function()
		local result = common.execute_aws_command_with_input({ "ssm", "get-resource-policies" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-service-setting", function()
		local result = common.execute_aws_command_with_input({ "ssm", "get-service-setting" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for label-parameter-version", function()
		local result = common.execute_aws_command_with_input({ "ssm", "label-parameter-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-association-versions", function()
		local result = common.execute_aws_command_with_input({ "ssm", "list-association-versions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-associations", function()
		local result = common.execute_aws_command_with_input({ "ssm", "list-associations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-command-invocations", function()
		local result = common.execute_aws_command_with_input({ "ssm", "list-command-invocations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-commands", function()
		local result = common.execute_aws_command_with_input({ "ssm", "list-commands" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-compliance-items", function()
		local result = common.execute_aws_command_with_input({ "ssm", "list-compliance-items" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-compliance-summaries", function()
		local result = common.execute_aws_command_with_input({ "ssm", "list-compliance-summaries" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-document-metadata-history", function()
		local result = common.execute_aws_command_with_input({ "ssm", "list-document-metadata-history" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-document-versions", function()
		local result = common.execute_aws_command_with_input({ "ssm", "list-document-versions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-documents", function()
		local result = common.execute_aws_command_with_input({ "ssm", "list-documents" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-inventory-entries", function()
		local result = common.execute_aws_command_with_input({ "ssm", "list-inventory-entries" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-nodes", function()
		local result = common.execute_aws_command_with_input({ "ssm", "list-nodes" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-nodes-summary", function()
		local result = common.execute_aws_command_with_input({ "ssm", "list-nodes-summary" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-ops-item-events", function()
		local result = common.execute_aws_command_with_input({ "ssm", "list-ops-item-events" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-ops-item-related-items", function()
		local result = common.execute_aws_command_with_input({ "ssm", "list-ops-item-related-items" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-ops-metadata", function()
		local result = common.execute_aws_command_with_input({ "ssm", "list-ops-metadata" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-resource-compliance-summaries", function()
		local result = common.execute_aws_command_with_input({ "ssm", "list-resource-compliance-summaries" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-resource-data-sync", function()
		local result = common.execute_aws_command_with_input({ "ssm", "list-resource-data-sync" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "ssm", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for modify-document-permission", function()
		local result = common.execute_aws_command_with_input({ "ssm", "modify-document-permission" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-compliance-items", function()
		local result = common.execute_aws_command_with_input({ "ssm", "put-compliance-items" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-inventory", function()
		local result = common.execute_aws_command_with_input({ "ssm", "put-inventory" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-parameter", function()
		local result = common.execute_aws_command_with_input({ "ssm", "put-parameter" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-resource-policy", function()
		local result = common.execute_aws_command_with_input({ "ssm", "put-resource-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for register-default-patch-baseline", function()
		local result = common.execute_aws_command_with_input({ "ssm", "register-default-patch-baseline" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for register-patch-baseline-for-patch-group", function()
		local result = common.execute_aws_command_with_input({ "ssm", "register-patch-baseline-for-patch-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for register-target-with-maintenance-window", function()
		local result = common.execute_aws_command_with_input({ "ssm", "register-target-with-maintenance-window" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for register-task-with-maintenance-window", function()
		local result = common.execute_aws_command_with_input({ "ssm", "register-task-with-maintenance-window" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for remove-tags-from-resource", function()
		local result = common.execute_aws_command_with_input({ "ssm", "remove-tags-from-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for reset-service-setting", function()
		local result = common.execute_aws_command_with_input({ "ssm", "reset-service-setting" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for resume-session", function()
		local result = common.execute_aws_command_with_input({ "ssm", "resume-session" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for send-automation-signal", function()
		local result = common.execute_aws_command_with_input({ "ssm", "send-automation-signal" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for send-command", function()
		local result = common.execute_aws_command_with_input({ "ssm", "send-command" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-associations-once", function()
		local result = common.execute_aws_command_with_input({ "ssm", "start-associations-once" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-automation-execution", function()
		local result = common.execute_aws_command_with_input({ "ssm", "start-automation-execution" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-change-request-execution", function()
		local result = common.execute_aws_command_with_input({ "ssm", "start-change-request-execution" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-execution-preview", function()
		local result = common.execute_aws_command_with_input({ "ssm", "start-execution-preview" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-session", function()
		local result = common.execute_aws_command_with_input({ "ssm", "start-session" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-automation-execution", function()
		local result = common.execute_aws_command_with_input({ "ssm", "stop-automation-execution" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for terminate-session", function()
		local result = common.execute_aws_command_with_input({ "ssm", "terminate-session" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for unlabel-parameter-version", function()
		local result = common.execute_aws_command_with_input({ "ssm", "unlabel-parameter-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-association", function()
		local result = common.execute_aws_command_with_input({ "ssm", "update-association" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-association-status", function()
		local result = common.execute_aws_command_with_input({ "ssm", "update-association-status" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-document", function()
		local result = common.execute_aws_command_with_input({ "ssm", "update-document" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-document-default-version", function()
		local result = common.execute_aws_command_with_input({ "ssm", "update-document-default-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-document-metadata", function()
		local result = common.execute_aws_command_with_input({ "ssm", "update-document-metadata" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-maintenance-window", function()
		local result = common.execute_aws_command_with_input({ "ssm", "update-maintenance-window" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-maintenance-window-target", function()
		local result = common.execute_aws_command_with_input({ "ssm", "update-maintenance-window-target" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-maintenance-window-task", function()
		local result = common.execute_aws_command_with_input({ "ssm", "update-maintenance-window-task" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-managed-instance-role", function()
		local result = common.execute_aws_command_with_input({ "ssm", "update-managed-instance-role" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-ops-item", function()
		local result = common.execute_aws_command_with_input({ "ssm", "update-ops-item" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-ops-metadata", function()
		local result = common.execute_aws_command_with_input({ "ssm", "update-ops-metadata" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-patch-baseline", function()
		local result = common.execute_aws_command_with_input({ "ssm", "update-patch-baseline" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-resource-data-sync", function()
		local result = common.execute_aws_command_with_input({ "ssm", "update-resource-data-sync" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-service-setting", function()
		local result = common.execute_aws_command_with_input({ "ssm", "update-service-setting" })
		assert.is_true(result.success)
	end)

end)