-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: dax

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS dax service testing", function()
	it("should generate a cli skeleton for create-cluster", function()
		local result = common.execute_aws_command_with_input({ "dax", "create-cluster" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-parameter-group", function()
		local result = common.execute_aws_command_with_input({ "dax", "create-parameter-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-subnet-group", function()
		local result = common.execute_aws_command_with_input({ "dax", "create-subnet-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for decrease-replication-factor", function()
		local result = common.execute_aws_command_with_input({ "dax", "decrease-replication-factor" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-cluster", function()
		local result = common.execute_aws_command_with_input({ "dax", "delete-cluster" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-parameter-group", function()
		local result = common.execute_aws_command_with_input({ "dax", "delete-parameter-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-subnet-group", function()
		local result = common.execute_aws_command_with_input({ "dax", "delete-subnet-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-clusters", function()
		local result = common.execute_aws_command_with_input({ "dax", "describe-clusters" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-default-parameters", function()
		local result = common.execute_aws_command_with_input({ "dax", "describe-default-parameters" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-events", function()
		local result = common.execute_aws_command_with_input({ "dax", "describe-events" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-parameter-groups", function()
		local result = common.execute_aws_command_with_input({ "dax", "describe-parameter-groups" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-parameters", function()
		local result = common.execute_aws_command_with_input({ "dax", "describe-parameters" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-subnet-groups", function()
		local result = common.execute_aws_command_with_input({ "dax", "describe-subnet-groups" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for increase-replication-factor", function()
		local result = common.execute_aws_command_with_input({ "dax", "increase-replication-factor" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags", function()
		local result = common.execute_aws_command_with_input({ "dax", "list-tags" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for reboot-node", function()
		local result = common.execute_aws_command_with_input({ "dax", "reboot-node" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "dax", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "dax", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-cluster", function()
		local result = common.execute_aws_command_with_input({ "dax", "update-cluster" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-parameter-group", function()
		local result = common.execute_aws_command_with_input({ "dax", "update-parameter-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-subnet-group", function()
		local result = common.execute_aws_command_with_input({ "dax", "update-subnet-group" })
		assert.is_true(result.success)
	end)

end)