-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: chatbot

require("nvim-aws").setup()
local service = require("nvim-aws.autogen_wrappers.chatbot")

describe("AWS chatbot service testing", function()
	it("should generate a cli skeleton with associate_to_configuration", function()
		local result = service.associate_to_configuration()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with create_chime_webhook_configuration", function()
		local result = service.create_chime_webhook_configuration()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with create_custom_action", function()
		local result = service.create_custom_action()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with create_microsoft_teams_channel_configuration", function()
		local result = service.create_microsoft_teams_channel_configuration()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with create_slack_channel_configuration", function()
		local result = service.create_slack_channel_configuration()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with delete_chime_webhook_configuration", function()
		local result = service.delete_chime_webhook_configuration()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with delete_custom_action", function()
		local result = service.delete_custom_action()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with delete_microsoft_teams_channel_configuration", function()
		local result = service.delete_microsoft_teams_channel_configuration()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with delete_microsoft_teams_configured_team", function()
		local result = service.delete_microsoft_teams_configured_team()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with delete_microsoft_teams_user_identity", function()
		local result = service.delete_microsoft_teams_user_identity()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with delete_slack_channel_configuration", function()
		local result = service.delete_slack_channel_configuration()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with delete_slack_user_identity", function()
		local result = service.delete_slack_user_identity()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with delete_slack_workspace_authorization", function()
		local result = service.delete_slack_workspace_authorization()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with describe_chime_webhook_configurations", function()
		local result = service.describe_chime_webhook_configurations()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with describe_slack_channel_configurations", function()
		local result = service.describe_slack_channel_configurations()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with describe_slack_user_identities", function()
		local result = service.describe_slack_user_identities()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with describe_slack_workspaces", function()
		local result = service.describe_slack_workspaces()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with disassociate_from_configuration", function()
		local result = service.disassociate_from_configuration()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_account_preferences", function()
		local result = service.get_account_preferences()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_custom_action", function()
		local result = service.get_custom_action()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_microsoft_teams_channel_configuration", function()
		local result = service.get_microsoft_teams_channel_configuration()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_associations", function()
		local result = service.list_associations()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_custom_actions", function()
		local result = service.list_custom_actions()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_microsoft_teams_channel_configurations", function()
		local result = service.list_microsoft_teams_channel_configurations()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_microsoft_teams_configured_teams", function()
		local result = service.list_microsoft_teams_configured_teams()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_microsoft_teams_user_identities", function()
		local result = service.list_microsoft_teams_user_identities()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_tags_for_resource", function()
		local result = service.list_tags_for_resource()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with tag_resource", function()
		local result = service.tag_resource()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with untag_resource", function()
		local result = service.untag_resource()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with update_account_preferences", function()
		local result = service.update_account_preferences()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with update_chime_webhook_configuration", function()
		local result = service.update_chime_webhook_configuration()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with update_custom_action", function()
		local result = service.update_custom_action()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with update_microsoft_teams_channel_configuration", function()
		local result = service.update_microsoft_teams_channel_configuration()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with update_slack_channel_configuration", function()
		local result = service.update_slack_channel_configuration()
		assert.is_true(result.success)
	end)

end)