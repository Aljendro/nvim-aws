-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: waf-regional

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS waf-regional service testing", function()
	it("should generate a cli skeleton for associate-web-acl", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "associate-web-acl" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-byte-match-set", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "create-byte-match-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-geo-match-set", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "create-geo-match-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-ip-set", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "create-ip-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-rate-based-rule", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "create-rate-based-rule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-regex-match-set", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "create-regex-match-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-regex-pattern-set", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "create-regex-pattern-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-rule", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "create-rule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-rule-group", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "create-rule-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-size-constraint-set", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "create-size-constraint-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-sql-injection-match-set", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "create-sql-injection-match-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-web-acl", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "create-web-acl" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-web-acl-migration-stack", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "create-web-acl-migration-stack" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-xss-match-set", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "create-xss-match-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-byte-match-set", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "delete-byte-match-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-geo-match-set", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "delete-geo-match-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-ip-set", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "delete-ip-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-logging-configuration", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "delete-logging-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-permission-policy", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "delete-permission-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-rate-based-rule", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "delete-rate-based-rule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-regex-match-set", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "delete-regex-match-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-regex-pattern-set", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "delete-regex-pattern-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-rule", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "delete-rule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-rule-group", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "delete-rule-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-size-constraint-set", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "delete-size-constraint-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-sql-injection-match-set", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "delete-sql-injection-match-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-web-acl", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "delete-web-acl" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-xss-match-set", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "delete-xss-match-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-web-acl", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "disassociate-web-acl" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-byte-match-set", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "get-byte-match-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-change-token", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "get-change-token" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-change-token-status", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "get-change-token-status" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-geo-match-set", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "get-geo-match-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-ip-set", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "get-ip-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-logging-configuration", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "get-logging-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-permission-policy", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "get-permission-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-rate-based-rule", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "get-rate-based-rule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-rate-based-rule-managed-keys", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "get-rate-based-rule-managed-keys" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-regex-match-set", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "get-regex-match-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-regex-pattern-set", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "get-regex-pattern-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-rule", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "get-rule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-rule-group", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "get-rule-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-sampled-requests", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "get-sampled-requests" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-size-constraint-set", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "get-size-constraint-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-sql-injection-match-set", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "get-sql-injection-match-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-web-acl", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "get-web-acl" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-web-acl-for-resource", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "get-web-acl-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-xss-match-set", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "get-xss-match-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-activated-rules-in-rule-group", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "list-activated-rules-in-rule-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-byte-match-sets", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "list-byte-match-sets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-geo-match-sets", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "list-geo-match-sets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-ip-sets", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "list-ip-sets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-logging-configurations", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "list-logging-configurations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-rate-based-rules", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "list-rate-based-rules" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-regex-match-sets", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "list-regex-match-sets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-regex-pattern-sets", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "list-regex-pattern-sets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-resources-for-web-acl", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "list-resources-for-web-acl" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-rule-groups", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "list-rule-groups" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-rules", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "list-rules" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-size-constraint-sets", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "list-size-constraint-sets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-sql-injection-match-sets", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "list-sql-injection-match-sets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-subscribed-rule-groups", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "list-subscribed-rule-groups" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-web-ac-ls", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "list-web-ac-ls" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-xss-match-sets", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "list-xss-match-sets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-logging-configuration", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "put-logging-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-permission-policy", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "put-permission-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-byte-match-set", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "update-byte-match-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-geo-match-set", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "update-geo-match-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-ip-set", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "update-ip-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-rate-based-rule", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "update-rate-based-rule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-regex-match-set", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "update-regex-match-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-regex-pattern-set", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "update-regex-pattern-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-rule", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "update-rule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-rule-group", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "update-rule-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-size-constraint-set", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "update-size-constraint-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-sql-injection-match-set", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "update-sql-injection-match-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-web-acl", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "update-web-acl" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-xss-match-set", function()
		local result = common.execute_aws_command_with_input({ "waf-regional", "update-xss-match-set" })
		assert.is_true(result.success)
	end)

end)