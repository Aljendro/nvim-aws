-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: greengrassv2

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS greengrassv2 service testing", function()
	it("should generate a cli skeleton for associate-service-role-to-account", function()
		local result = common.execute_aws_command_with_input({ "greengrassv2", "associate-service-role-to-account" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-associate-client-device-with-core-device", function()
		local result = common.execute_aws_command_with_input({ "greengrassv2", "batch-associate-client-device-with-core-device" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-disassociate-client-device-from-core-device", function()
		local result = common.execute_aws_command_with_input({ "greengrassv2", "batch-disassociate-client-device-from-core-device" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for cancel-deployment", function()
		local result = common.execute_aws_command_with_input({ "greengrassv2", "cancel-deployment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-component-version", function()
		local result = common.execute_aws_command_with_input({ "greengrassv2", "create-component-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-deployment", function()
		local result = common.execute_aws_command_with_input({ "greengrassv2", "create-deployment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-component", function()
		local result = common.execute_aws_command_with_input({ "greengrassv2", "delete-component" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-core-device", function()
		local result = common.execute_aws_command_with_input({ "greengrassv2", "delete-core-device" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-deployment", function()
		local result = common.execute_aws_command_with_input({ "greengrassv2", "delete-deployment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-component", function()
		local result = common.execute_aws_command_with_input({ "greengrassv2", "describe-component" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-service-role-from-account", function()
		local result = common.execute_aws_command_with_input({ "greengrassv2", "disassociate-service-role-from-account" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-component", function()
		local result = common.execute_aws_command_with_input({ "greengrassv2", "get-component" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-component-version-artifact", function()
		local result = common.execute_aws_command_with_input({ "greengrassv2", "get-component-version-artifact" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-connectivity-info", function()
		local result = common.execute_aws_command_with_input({ "greengrassv2", "get-connectivity-info" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-core-device", function()
		local result = common.execute_aws_command_with_input({ "greengrassv2", "get-core-device" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-deployment", function()
		local result = common.execute_aws_command_with_input({ "greengrassv2", "get-deployment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-service-role-for-account", function()
		local result = common.execute_aws_command_with_input({ "greengrassv2", "get-service-role-for-account" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-client-devices-associated-with-core-device", function()
		local result = common.execute_aws_command_with_input({ "greengrassv2", "list-client-devices-associated-with-core-device" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-component-versions", function()
		local result = common.execute_aws_command_with_input({ "greengrassv2", "list-component-versions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-components", function()
		local result = common.execute_aws_command_with_input({ "greengrassv2", "list-components" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-core-devices", function()
		local result = common.execute_aws_command_with_input({ "greengrassv2", "list-core-devices" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-deployments", function()
		local result = common.execute_aws_command_with_input({ "greengrassv2", "list-deployments" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-effective-deployments", function()
		local result = common.execute_aws_command_with_input({ "greengrassv2", "list-effective-deployments" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-installed-components", function()
		local result = common.execute_aws_command_with_input({ "greengrassv2", "list-installed-components" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "greengrassv2", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for resolve-component-candidates", function()
		local result = common.execute_aws_command_with_input({ "greengrassv2", "resolve-component-candidates" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "greengrassv2", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "greengrassv2", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-connectivity-info", function()
		local result = common.execute_aws_command_with_input({ "greengrassv2", "update-connectivity-info" })
		assert.is_true(result.success)
	end)

end)