-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: mediapackage-vod

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS mediapackage-vod service testing", function()
	it("should generate a cli skeleton for configure-logs", function()
		local result = common.execute_aws_command_with_input({ "mediapackage-vod", "configure-logs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-asset", function()
		local result = common.execute_aws_command_with_input({ "mediapackage-vod", "create-asset" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-packaging-configuration", function()
		local result = common.execute_aws_command_with_input({ "mediapackage-vod", "create-packaging-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-packaging-group", function()
		local result = common.execute_aws_command_with_input({ "mediapackage-vod", "create-packaging-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-asset", function()
		local result = common.execute_aws_command_with_input({ "mediapackage-vod", "delete-asset" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-packaging-configuration", function()
		local result = common.execute_aws_command_with_input({ "mediapackage-vod", "delete-packaging-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-packaging-group", function()
		local result = common.execute_aws_command_with_input({ "mediapackage-vod", "delete-packaging-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-asset", function()
		local result = common.execute_aws_command_with_input({ "mediapackage-vod", "describe-asset" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-packaging-configuration", function()
		local result = common.execute_aws_command_with_input({ "mediapackage-vod", "describe-packaging-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-packaging-group", function()
		local result = common.execute_aws_command_with_input({ "mediapackage-vod", "describe-packaging-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-assets", function()
		local result = common.execute_aws_command_with_input({ "mediapackage-vod", "list-assets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-packaging-configurations", function()
		local result = common.execute_aws_command_with_input({ "mediapackage-vod", "list-packaging-configurations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-packaging-groups", function()
		local result = common.execute_aws_command_with_input({ "mediapackage-vod", "list-packaging-groups" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "mediapackage-vod", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "mediapackage-vod", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "mediapackage-vod", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-packaging-group", function()
		local result = common.execute_aws_command_with_input({ "mediapackage-vod", "update-packaging-group" })
		assert.is_true(result.success)
	end)

end)