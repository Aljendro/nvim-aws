-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: qbusiness

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS qbusiness service testing", function()
	it("should generate a cli skeleton for associate-permission", function()
		local result = common.execute_aws_command_with_input({ "qbusiness", "associate-permission" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-delete-document", function()
		local result = common.execute_aws_command_with_input({ "qbusiness", "batch-delete-document" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-put-document", function()
		local result = common.execute_aws_command_with_input({ "qbusiness", "batch-put-document" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for cancel-subscription", function()
		local result = common.execute_aws_command_with_input({ "qbusiness", "cancel-subscription" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for chat", function()
		local result = common.execute_aws_command_with_input({ "qbusiness", "chat" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for chat-sync", function()
		local result = common.execute_aws_command_with_input({ "qbusiness", "chat-sync" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-application", function()
		local result = common.execute_aws_command_with_input({ "qbusiness", "create-application" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-subscription", function()
		local result = common.execute_aws_command_with_input({ "qbusiness", "create-subscription" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-user", function()
		local result = common.execute_aws_command_with_input({ "qbusiness", "create-user" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-application", function()
		local result = common.execute_aws_command_with_input({ "qbusiness", "delete-application" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-attachment", function()
		local result = common.execute_aws_command_with_input({ "qbusiness", "delete-attachment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-chat-controls-configuration", function()
		local result = common.execute_aws_command_with_input({ "qbusiness", "delete-chat-controls-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-conversation", function()
		local result = common.execute_aws_command_with_input({ "qbusiness", "delete-conversation" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-group", function()
		local result = common.execute_aws_command_with_input({ "qbusiness", "delete-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-user", function()
		local result = common.execute_aws_command_with_input({ "qbusiness", "delete-user" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-permission", function()
		local result = common.execute_aws_command_with_input({ "qbusiness", "disassociate-permission" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-application", function()
		local result = common.execute_aws_command_with_input({ "qbusiness", "get-application" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-chat-controls-configuration", function()
		local result = common.execute_aws_command_with_input({ "qbusiness", "get-chat-controls-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-group", function()
		local result = common.execute_aws_command_with_input({ "qbusiness", "get-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-media", function()
		local result = common.execute_aws_command_with_input({ "qbusiness", "get-media" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-policy", function()
		local result = common.execute_aws_command_with_input({ "qbusiness", "get-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-user", function()
		local result = common.execute_aws_command_with_input({ "qbusiness", "get-user" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-applications", function()
		local result = common.execute_aws_command_with_input({ "qbusiness", "list-applications" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-attachments", function()
		local result = common.execute_aws_command_with_input({ "qbusiness", "list-attachments" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-conversations", function()
		local result = common.execute_aws_command_with_input({ "qbusiness", "list-conversations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-data-source-sync-jobs", function()
		local result = common.execute_aws_command_with_input({ "qbusiness", "list-data-source-sync-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-documents", function()
		local result = common.execute_aws_command_with_input({ "qbusiness", "list-documents" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-groups", function()
		local result = common.execute_aws_command_with_input({ "qbusiness", "list-groups" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-messages", function()
		local result = common.execute_aws_command_with_input({ "qbusiness", "list-messages" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-plugin-actions", function()
		local result = common.execute_aws_command_with_input({ "qbusiness", "list-plugin-actions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-plugin-type-actions", function()
		local result = common.execute_aws_command_with_input({ "qbusiness", "list-plugin-type-actions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-plugin-type-metadata", function()
		local result = common.execute_aws_command_with_input({ "qbusiness", "list-plugin-type-metadata" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-subscriptions", function()
		local result = common.execute_aws_command_with_input({ "qbusiness", "list-subscriptions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "qbusiness", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-feedback", function()
		local result = common.execute_aws_command_with_input({ "qbusiness", "put-feedback" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-group", function()
		local result = common.execute_aws_command_with_input({ "qbusiness", "put-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for search-relevant-content", function()
		local result = common.execute_aws_command_with_input({ "qbusiness", "search-relevant-content" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-data-source-sync-job", function()
		local result = common.execute_aws_command_with_input({ "qbusiness", "start-data-source-sync-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-data-source-sync-job", function()
		local result = common.execute_aws_command_with_input({ "qbusiness", "stop-data-source-sync-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "qbusiness", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "qbusiness", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-application", function()
		local result = common.execute_aws_command_with_input({ "qbusiness", "update-application" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-chat-controls-configuration", function()
		local result = common.execute_aws_command_with_input({ "qbusiness", "update-chat-controls-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-subscription", function()
		local result = common.execute_aws_command_with_input({ "qbusiness", "update-subscription" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-user", function()
		local result = common.execute_aws_command_with_input({ "qbusiness", "update-user" })
		assert.is_true(result.success)
	end)

end)