-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: cognito-identity

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS cognito-identity service testing", function()
	it("should generate a cli skeleton for create-identity-pool", function()
		local result = common.execute_aws_command_with_input({ "cognito-identity", "create-identity-pool" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-identities", function()
		local result = common.execute_aws_command_with_input({ "cognito-identity", "delete-identities" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-identity-pool", function()
		local result = common.execute_aws_command_with_input({ "cognito-identity", "delete-identity-pool" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-identity", function()
		local result = common.execute_aws_command_with_input({ "cognito-identity", "describe-identity" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-identity-pool", function()
		local result = common.execute_aws_command_with_input({ "cognito-identity", "describe-identity-pool" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-credentials-for-identity", function()
		local result = common.execute_aws_command_with_input({ "cognito-identity", "get-credentials-for-identity" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-id", function()
		local result = common.execute_aws_command_with_input({ "cognito-identity", "get-id" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-identity-pool-roles", function()
		local result = common.execute_aws_command_with_input({ "cognito-identity", "get-identity-pool-roles" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-open-id-token", function()
		local result = common.execute_aws_command_with_input({ "cognito-identity", "get-open-id-token" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-open-id-token-for-developer-identity", function()
		local result = common.execute_aws_command_with_input({ "cognito-identity", "get-open-id-token-for-developer-identity" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-principal-tag-attribute-map", function()
		local result = common.execute_aws_command_with_input({ "cognito-identity", "get-principal-tag-attribute-map" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-identities", function()
		local result = common.execute_aws_command_with_input({ "cognito-identity", "list-identities" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-identity-pools", function()
		local result = common.execute_aws_command_with_input({ "cognito-identity", "list-identity-pools" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "cognito-identity", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for lookup-developer-identity", function()
		local result = common.execute_aws_command_with_input({ "cognito-identity", "lookup-developer-identity" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for merge-developer-identities", function()
		local result = common.execute_aws_command_with_input({ "cognito-identity", "merge-developer-identities" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for set-identity-pool-roles", function()
		local result = common.execute_aws_command_with_input({ "cognito-identity", "set-identity-pool-roles" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for set-principal-tag-attribute-map", function()
		local result = common.execute_aws_command_with_input({ "cognito-identity", "set-principal-tag-attribute-map" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "cognito-identity", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for unlink-developer-identity", function()
		local result = common.execute_aws_command_with_input({ "cognito-identity", "unlink-developer-identity" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for unlink-identity", function()
		local result = common.execute_aws_command_with_input({ "cognito-identity", "unlink-identity" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "cognito-identity", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-identity-pool", function()
		local result = common.execute_aws_command_with_input({ "cognito-identity", "update-identity-pool" })
		assert.is_true(result.success)
	end)

end)