-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: cleanrooms

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS cleanrooms service testing", function()
	it("should generate a cli skeleton for batch-get-collaboration-analysis-template", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "batch-get-collaboration-analysis-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-get-schema", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "batch-get-schema" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-get-schema-analysis-rule", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "batch-get-schema-analysis-rule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-analysis-template", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "create-analysis-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-collaboration", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "create-collaboration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-configured-audience-model-association", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "create-configured-audience-model-association" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-configured-table", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "create-configured-table" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-configured-table-analysis-rule", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "create-configured-table-analysis-rule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-configured-table-association", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "create-configured-table-association" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-configured-table-association-analysis-rule", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "create-configured-table-association-analysis-rule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-id-mapping-table", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "create-id-mapping-table" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-id-namespace-association", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "create-id-namespace-association" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-membership", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "create-membership" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-privacy-budget-template", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "create-privacy-budget-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-analysis-template", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "delete-analysis-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-collaboration", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "delete-collaboration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-configured-audience-model-association", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "delete-configured-audience-model-association" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-configured-table", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "delete-configured-table" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-configured-table-analysis-rule", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "delete-configured-table-analysis-rule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-configured-table-association", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "delete-configured-table-association" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-configured-table-association-analysis-rule", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "delete-configured-table-association-analysis-rule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-id-mapping-table", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "delete-id-mapping-table" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-id-namespace-association", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "delete-id-namespace-association" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-member", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "delete-member" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-membership", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "delete-membership" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-privacy-budget-template", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "delete-privacy-budget-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-analysis-template", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "get-analysis-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-collaboration", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "get-collaboration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-collaboration-analysis-template", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "get-collaboration-analysis-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-collaboration-configured-audience-model-association", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "get-collaboration-configured-audience-model-association" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-collaboration-id-namespace-association", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "get-collaboration-id-namespace-association" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-collaboration-privacy-budget-template", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "get-collaboration-privacy-budget-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-configured-audience-model-association", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "get-configured-audience-model-association" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-configured-table", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "get-configured-table" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-configured-table-analysis-rule", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "get-configured-table-analysis-rule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-configured-table-association", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "get-configured-table-association" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-configured-table-association-analysis-rule", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "get-configured-table-association-analysis-rule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-id-mapping-table", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "get-id-mapping-table" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-id-namespace-association", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "get-id-namespace-association" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-membership", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "get-membership" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-privacy-budget-template", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "get-privacy-budget-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-protected-job", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "get-protected-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-protected-query", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "get-protected-query" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-schema", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "get-schema" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-schema-analysis-rule", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "get-schema-analysis-rule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-analysis-templates", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "list-analysis-templates" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-collaboration-analysis-templates", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "list-collaboration-analysis-templates" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-collaboration-configured-audience-model-associations", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "list-collaboration-configured-audience-model-associations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-collaboration-id-namespace-associations", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "list-collaboration-id-namespace-associations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-collaboration-privacy-budget-templates", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "list-collaboration-privacy-budget-templates" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-collaboration-privacy-budgets", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "list-collaboration-privacy-budgets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-collaborations", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "list-collaborations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-configured-audience-model-associations", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "list-configured-audience-model-associations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-configured-table-associations", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "list-configured-table-associations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-configured-tables", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "list-configured-tables" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-id-mapping-tables", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "list-id-mapping-tables" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-id-namespace-associations", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "list-id-namespace-associations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-members", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "list-members" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-memberships", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "list-memberships" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-privacy-budget-templates", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "list-privacy-budget-templates" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-privacy-budgets", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "list-privacy-budgets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-protected-jobs", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "list-protected-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-protected-queries", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "list-protected-queries" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-schemas", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "list-schemas" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for populate-id-mapping-table", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "populate-id-mapping-table" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for preview-privacy-impact", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "preview-privacy-impact" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-protected-job", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "start-protected-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-protected-query", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "start-protected-query" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-analysis-template", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "update-analysis-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-collaboration", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "update-collaboration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-configured-audience-model-association", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "update-configured-audience-model-association" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-configured-table", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "update-configured-table" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-configured-table-analysis-rule", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "update-configured-table-analysis-rule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-configured-table-association", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "update-configured-table-association" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-configured-table-association-analysis-rule", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "update-configured-table-association-analysis-rule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-id-mapping-table", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "update-id-mapping-table" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-id-namespace-association", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "update-id-namespace-association" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-membership", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "update-membership" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-privacy-budget-template", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "update-privacy-budget-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-protected-job", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "update-protected-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-protected-query", function()
		local result = common.execute_aws_command_with_input({ "cleanrooms", "update-protected-query" })
		assert.is_true(result.success)
	end)

end)