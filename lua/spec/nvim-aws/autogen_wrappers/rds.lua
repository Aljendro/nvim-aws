-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: rds

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS rds service testing", function()
	it("should generate a cli skeleton for add-role-to-db-cluster", function()
		local result = common.execute_aws_command_with_input({ "rds", "add-role-to-db-cluster" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for add-role-to-db-instance", function()
		local result = common.execute_aws_command_with_input({ "rds", "add-role-to-db-instance" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for add-source-identifier-to-subscription", function()
		local result = common.execute_aws_command_with_input({ "rds", "add-source-identifier-to-subscription" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for add-tags-to-resource", function()
		local result = common.execute_aws_command_with_input({ "rds", "add-tags-to-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for apply-pending-maintenance-action", function()
		local result = common.execute_aws_command_with_input({ "rds", "apply-pending-maintenance-action" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for authorize-db-security-group-ingress", function()
		local result = common.execute_aws_command_with_input({ "rds", "authorize-db-security-group-ingress" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for backtrack-db-cluster", function()
		local result = common.execute_aws_command_with_input({ "rds", "backtrack-db-cluster" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for cancel-export-task", function()
		local result = common.execute_aws_command_with_input({ "rds", "cancel-export-task" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for copy-db-cluster-parameter-group", function()
		local result = common.execute_aws_command_with_input({ "rds", "copy-db-cluster-parameter-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for copy-db-cluster-snapshot", function()
		local result = common.execute_aws_command_with_input({ "rds", "copy-db-cluster-snapshot" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for copy-db-parameter-group", function()
		local result = common.execute_aws_command_with_input({ "rds", "copy-db-parameter-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for copy-db-snapshot", function()
		local result = common.execute_aws_command_with_input({ "rds", "copy-db-snapshot" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for copy-option-group", function()
		local result = common.execute_aws_command_with_input({ "rds", "copy-option-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-blue-green-deployment", function()
		local result = common.execute_aws_command_with_input({ "rds", "create-blue-green-deployment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-custom-db-engine-version", function()
		local result = common.execute_aws_command_with_input({ "rds", "create-custom-db-engine-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-db-cluster", function()
		local result = common.execute_aws_command_with_input({ "rds", "create-db-cluster" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-db-cluster-endpoint", function()
		local result = common.execute_aws_command_with_input({ "rds", "create-db-cluster-endpoint" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-db-cluster-parameter-group", function()
		local result = common.execute_aws_command_with_input({ "rds", "create-db-cluster-parameter-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-db-cluster-snapshot", function()
		local result = common.execute_aws_command_with_input({ "rds", "create-db-cluster-snapshot" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-db-instance", function()
		local result = common.execute_aws_command_with_input({ "rds", "create-db-instance" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-db-instance-read-replica", function()
		local result = common.execute_aws_command_with_input({ "rds", "create-db-instance-read-replica" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-db-parameter-group", function()
		local result = common.execute_aws_command_with_input({ "rds", "create-db-parameter-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-db-proxy", function()
		local result = common.execute_aws_command_with_input({ "rds", "create-db-proxy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-db-proxy-endpoint", function()
		local result = common.execute_aws_command_with_input({ "rds", "create-db-proxy-endpoint" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-db-security-group", function()
		local result = common.execute_aws_command_with_input({ "rds", "create-db-security-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-db-shard-group", function()
		local result = common.execute_aws_command_with_input({ "rds", "create-db-shard-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-db-snapshot", function()
		local result = common.execute_aws_command_with_input({ "rds", "create-db-snapshot" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-db-subnet-group", function()
		local result = common.execute_aws_command_with_input({ "rds", "create-db-subnet-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-event-subscription", function()
		local result = common.execute_aws_command_with_input({ "rds", "create-event-subscription" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-global-cluster", function()
		local result = common.execute_aws_command_with_input({ "rds", "create-global-cluster" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-integration", function()
		local result = common.execute_aws_command_with_input({ "rds", "create-integration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-option-group", function()
		local result = common.execute_aws_command_with_input({ "rds", "create-option-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-tenant-database", function()
		local result = common.execute_aws_command_with_input({ "rds", "create-tenant-database" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-blue-green-deployment", function()
		local result = common.execute_aws_command_with_input({ "rds", "delete-blue-green-deployment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-custom-db-engine-version", function()
		local result = common.execute_aws_command_with_input({ "rds", "delete-custom-db-engine-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-db-cluster", function()
		local result = common.execute_aws_command_with_input({ "rds", "delete-db-cluster" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-db-cluster-automated-backup", function()
		local result = common.execute_aws_command_with_input({ "rds", "delete-db-cluster-automated-backup" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-db-cluster-endpoint", function()
		local result = common.execute_aws_command_with_input({ "rds", "delete-db-cluster-endpoint" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-db-cluster-parameter-group", function()
		local result = common.execute_aws_command_with_input({ "rds", "delete-db-cluster-parameter-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-db-cluster-snapshot", function()
		local result = common.execute_aws_command_with_input({ "rds", "delete-db-cluster-snapshot" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-db-instance", function()
		local result = common.execute_aws_command_with_input({ "rds", "delete-db-instance" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-db-instance-automated-backup", function()
		local result = common.execute_aws_command_with_input({ "rds", "delete-db-instance-automated-backup" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-db-parameter-group", function()
		local result = common.execute_aws_command_with_input({ "rds", "delete-db-parameter-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-db-proxy", function()
		local result = common.execute_aws_command_with_input({ "rds", "delete-db-proxy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-db-proxy-endpoint", function()
		local result = common.execute_aws_command_with_input({ "rds", "delete-db-proxy-endpoint" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-db-security-group", function()
		local result = common.execute_aws_command_with_input({ "rds", "delete-db-security-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-db-shard-group", function()
		local result = common.execute_aws_command_with_input({ "rds", "delete-db-shard-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-db-snapshot", function()
		local result = common.execute_aws_command_with_input({ "rds", "delete-db-snapshot" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-db-subnet-group", function()
		local result = common.execute_aws_command_with_input({ "rds", "delete-db-subnet-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-event-subscription", function()
		local result = common.execute_aws_command_with_input({ "rds", "delete-event-subscription" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-global-cluster", function()
		local result = common.execute_aws_command_with_input({ "rds", "delete-global-cluster" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-integration", function()
		local result = common.execute_aws_command_with_input({ "rds", "delete-integration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-option-group", function()
		local result = common.execute_aws_command_with_input({ "rds", "delete-option-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-tenant-database", function()
		local result = common.execute_aws_command_with_input({ "rds", "delete-tenant-database" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for deregister-db-proxy-targets", function()
		local result = common.execute_aws_command_with_input({ "rds", "deregister-db-proxy-targets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-account-attributes", function()
		local result = common.execute_aws_command_with_input({ "rds", "describe-account-attributes" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-blue-green-deployments", function()
		local result = common.execute_aws_command_with_input({ "rds", "describe-blue-green-deployments" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-certificates", function()
		local result = common.execute_aws_command_with_input({ "rds", "describe-certificates" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-db-cluster-automated-backups", function()
		local result = common.execute_aws_command_with_input({ "rds", "describe-db-cluster-automated-backups" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-db-cluster-backtracks", function()
		local result = common.execute_aws_command_with_input({ "rds", "describe-db-cluster-backtracks" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-db-cluster-endpoints", function()
		local result = common.execute_aws_command_with_input({ "rds", "describe-db-cluster-endpoints" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-db-cluster-parameter-groups", function()
		local result = common.execute_aws_command_with_input({ "rds", "describe-db-cluster-parameter-groups" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-db-cluster-parameters", function()
		local result = common.execute_aws_command_with_input({ "rds", "describe-db-cluster-parameters" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-db-cluster-snapshot-attributes", function()
		local result = common.execute_aws_command_with_input({ "rds", "describe-db-cluster-snapshot-attributes" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-db-cluster-snapshots", function()
		local result = common.execute_aws_command_with_input({ "rds", "describe-db-cluster-snapshots" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-db-clusters", function()
		local result = common.execute_aws_command_with_input({ "rds", "describe-db-clusters" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-db-engine-versions", function()
		local result = common.execute_aws_command_with_input({ "rds", "describe-db-engine-versions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-db-instance-automated-backups", function()
		local result = common.execute_aws_command_with_input({ "rds", "describe-db-instance-automated-backups" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-db-instances", function()
		local result = common.execute_aws_command_with_input({ "rds", "describe-db-instances" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-db-log-files", function()
		local result = common.execute_aws_command_with_input({ "rds", "describe-db-log-files" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-db-parameter-groups", function()
		local result = common.execute_aws_command_with_input({ "rds", "describe-db-parameter-groups" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-db-parameters", function()
		local result = common.execute_aws_command_with_input({ "rds", "describe-db-parameters" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-db-proxies", function()
		local result = common.execute_aws_command_with_input({ "rds", "describe-db-proxies" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-db-proxy-endpoints", function()
		local result = common.execute_aws_command_with_input({ "rds", "describe-db-proxy-endpoints" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-db-proxy-target-groups", function()
		local result = common.execute_aws_command_with_input({ "rds", "describe-db-proxy-target-groups" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-db-proxy-targets", function()
		local result = common.execute_aws_command_with_input({ "rds", "describe-db-proxy-targets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-db-recommendations", function()
		local result = common.execute_aws_command_with_input({ "rds", "describe-db-recommendations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-db-security-groups", function()
		local result = common.execute_aws_command_with_input({ "rds", "describe-db-security-groups" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-db-shard-groups", function()
		local result = common.execute_aws_command_with_input({ "rds", "describe-db-shard-groups" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-db-snapshot-attributes", function()
		local result = common.execute_aws_command_with_input({ "rds", "describe-db-snapshot-attributes" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-db-snapshot-tenant-databases", function()
		local result = common.execute_aws_command_with_input({ "rds", "describe-db-snapshot-tenant-databases" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-db-snapshots", function()
		local result = common.execute_aws_command_with_input({ "rds", "describe-db-snapshots" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-db-subnet-groups", function()
		local result = common.execute_aws_command_with_input({ "rds", "describe-db-subnet-groups" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-engine-default-cluster-parameters", function()
		local result = common.execute_aws_command_with_input({ "rds", "describe-engine-default-cluster-parameters" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-engine-default-parameters", function()
		local result = common.execute_aws_command_with_input({ "rds", "describe-engine-default-parameters" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-event-categories", function()
		local result = common.execute_aws_command_with_input({ "rds", "describe-event-categories" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-event-subscriptions", function()
		local result = common.execute_aws_command_with_input({ "rds", "describe-event-subscriptions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-events", function()
		local result = common.execute_aws_command_with_input({ "rds", "describe-events" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-export-tasks", function()
		local result = common.execute_aws_command_with_input({ "rds", "describe-export-tasks" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-global-clusters", function()
		local result = common.execute_aws_command_with_input({ "rds", "describe-global-clusters" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-integrations", function()
		local result = common.execute_aws_command_with_input({ "rds", "describe-integrations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-option-group-options", function()
		local result = common.execute_aws_command_with_input({ "rds", "describe-option-group-options" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-option-groups", function()
		local result = common.execute_aws_command_with_input({ "rds", "describe-option-groups" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-orderable-db-instance-options", function()
		local result = common.execute_aws_command_with_input({ "rds", "describe-orderable-db-instance-options" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-pending-maintenance-actions", function()
		local result = common.execute_aws_command_with_input({ "rds", "describe-pending-maintenance-actions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-reserved-db-instances", function()
		local result = common.execute_aws_command_with_input({ "rds", "describe-reserved-db-instances" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-reserved-db-instances-offerings", function()
		local result = common.execute_aws_command_with_input({ "rds", "describe-reserved-db-instances-offerings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-source-regions", function()
		local result = common.execute_aws_command_with_input({ "rds", "describe-source-regions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-tenant-databases", function()
		local result = common.execute_aws_command_with_input({ "rds", "describe-tenant-databases" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-valid-db-instance-modifications", function()
		local result = common.execute_aws_command_with_input({ "rds", "describe-valid-db-instance-modifications" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disable-http-endpoint", function()
		local result = common.execute_aws_command_with_input({ "rds", "disable-http-endpoint" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for download-db-log-file-portion", function()
		local result = common.execute_aws_command_with_input({ "rds", "download-db-log-file-portion" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for enable-http-endpoint", function()
		local result = common.execute_aws_command_with_input({ "rds", "enable-http-endpoint" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for failover-db-cluster", function()
		local result = common.execute_aws_command_with_input({ "rds", "failover-db-cluster" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for failover-global-cluster", function()
		local result = common.execute_aws_command_with_input({ "rds", "failover-global-cluster" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "rds", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for modify-activity-stream", function()
		local result = common.execute_aws_command_with_input({ "rds", "modify-activity-stream" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for modify-certificates", function()
		local result = common.execute_aws_command_with_input({ "rds", "modify-certificates" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for modify-current-db-cluster-capacity", function()
		local result = common.execute_aws_command_with_input({ "rds", "modify-current-db-cluster-capacity" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for modify-custom-db-engine-version", function()
		local result = common.execute_aws_command_with_input({ "rds", "modify-custom-db-engine-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for modify-db-cluster", function()
		local result = common.execute_aws_command_with_input({ "rds", "modify-db-cluster" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for modify-db-cluster-endpoint", function()
		local result = common.execute_aws_command_with_input({ "rds", "modify-db-cluster-endpoint" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for modify-db-cluster-parameter-group", function()
		local result = common.execute_aws_command_with_input({ "rds", "modify-db-cluster-parameter-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for modify-db-cluster-snapshot-attribute", function()
		local result = common.execute_aws_command_with_input({ "rds", "modify-db-cluster-snapshot-attribute" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for modify-db-instance", function()
		local result = common.execute_aws_command_with_input({ "rds", "modify-db-instance" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for modify-db-parameter-group", function()
		local result = common.execute_aws_command_with_input({ "rds", "modify-db-parameter-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for modify-db-proxy", function()
		local result = common.execute_aws_command_with_input({ "rds", "modify-db-proxy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for modify-db-proxy-endpoint", function()
		local result = common.execute_aws_command_with_input({ "rds", "modify-db-proxy-endpoint" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for modify-db-proxy-target-group", function()
		local result = common.execute_aws_command_with_input({ "rds", "modify-db-proxy-target-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for modify-db-recommendation", function()
		local result = common.execute_aws_command_with_input({ "rds", "modify-db-recommendation" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for modify-db-shard-group", function()
		local result = common.execute_aws_command_with_input({ "rds", "modify-db-shard-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for modify-db-snapshot", function()
		local result = common.execute_aws_command_with_input({ "rds", "modify-db-snapshot" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for modify-db-snapshot-attribute", function()
		local result = common.execute_aws_command_with_input({ "rds", "modify-db-snapshot-attribute" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for modify-db-subnet-group", function()
		local result = common.execute_aws_command_with_input({ "rds", "modify-db-subnet-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for modify-event-subscription", function()
		local result = common.execute_aws_command_with_input({ "rds", "modify-event-subscription" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for modify-global-cluster", function()
		local result = common.execute_aws_command_with_input({ "rds", "modify-global-cluster" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for modify-integration", function()
		local result = common.execute_aws_command_with_input({ "rds", "modify-integration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for modify-option-group", function()
		local result = common.execute_aws_command_with_input({ "rds", "modify-option-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for modify-tenant-database", function()
		local result = common.execute_aws_command_with_input({ "rds", "modify-tenant-database" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for promote-read-replica", function()
		local result = common.execute_aws_command_with_input({ "rds", "promote-read-replica" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for promote-read-replica-db-cluster", function()
		local result = common.execute_aws_command_with_input({ "rds", "promote-read-replica-db-cluster" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for purchase-reserved-db-instances-offering", function()
		local result = common.execute_aws_command_with_input({ "rds", "purchase-reserved-db-instances-offering" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for reboot-db-cluster", function()
		local result = common.execute_aws_command_with_input({ "rds", "reboot-db-cluster" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for reboot-db-instance", function()
		local result = common.execute_aws_command_with_input({ "rds", "reboot-db-instance" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for reboot-db-shard-group", function()
		local result = common.execute_aws_command_with_input({ "rds", "reboot-db-shard-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for register-db-proxy-targets", function()
		local result = common.execute_aws_command_with_input({ "rds", "register-db-proxy-targets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for remove-from-global-cluster", function()
		local result = common.execute_aws_command_with_input({ "rds", "remove-from-global-cluster" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for remove-role-from-db-cluster", function()
		local result = common.execute_aws_command_with_input({ "rds", "remove-role-from-db-cluster" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for remove-role-from-db-instance", function()
		local result = common.execute_aws_command_with_input({ "rds", "remove-role-from-db-instance" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for remove-source-identifier-from-subscription", function()
		local result = common.execute_aws_command_with_input({ "rds", "remove-source-identifier-from-subscription" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for remove-tags-from-resource", function()
		local result = common.execute_aws_command_with_input({ "rds", "remove-tags-from-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for reset-db-cluster-parameter-group", function()
		local result = common.execute_aws_command_with_input({ "rds", "reset-db-cluster-parameter-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for reset-db-parameter-group", function()
		local result = common.execute_aws_command_with_input({ "rds", "reset-db-parameter-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for restore-db-cluster-from-s3", function()
		local result = common.execute_aws_command_with_input({ "rds", "restore-db-cluster-from-s3" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for restore-db-cluster-from-snapshot", function()
		local result = common.execute_aws_command_with_input({ "rds", "restore-db-cluster-from-snapshot" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for restore-db-cluster-to-point-in-time", function()
		local result = common.execute_aws_command_with_input({ "rds", "restore-db-cluster-to-point-in-time" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for restore-db-instance-from-db-snapshot", function()
		local result = common.execute_aws_command_with_input({ "rds", "restore-db-instance-from-db-snapshot" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for restore-db-instance-from-s3", function()
		local result = common.execute_aws_command_with_input({ "rds", "restore-db-instance-from-s3" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for restore-db-instance-to-point-in-time", function()
		local result = common.execute_aws_command_with_input({ "rds", "restore-db-instance-to-point-in-time" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for revoke-db-security-group-ingress", function()
		local result = common.execute_aws_command_with_input({ "rds", "revoke-db-security-group-ingress" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-activity-stream", function()
		local result = common.execute_aws_command_with_input({ "rds", "start-activity-stream" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-db-cluster", function()
		local result = common.execute_aws_command_with_input({ "rds", "start-db-cluster" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-db-instance", function()
		local result = common.execute_aws_command_with_input({ "rds", "start-db-instance" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-db-instance-automated-backups-replication", function()
		local result = common.execute_aws_command_with_input({ "rds", "start-db-instance-automated-backups-replication" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-export-task", function()
		local result = common.execute_aws_command_with_input({ "rds", "start-export-task" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-activity-stream", function()
		local result = common.execute_aws_command_with_input({ "rds", "stop-activity-stream" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-db-cluster", function()
		local result = common.execute_aws_command_with_input({ "rds", "stop-db-cluster" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-db-instance", function()
		local result = common.execute_aws_command_with_input({ "rds", "stop-db-instance" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-db-instance-automated-backups-replication", function()
		local result = common.execute_aws_command_with_input({ "rds", "stop-db-instance-automated-backups-replication" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for switchover-blue-green-deployment", function()
		local result = common.execute_aws_command_with_input({ "rds", "switchover-blue-green-deployment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for switchover-global-cluster", function()
		local result = common.execute_aws_command_with_input({ "rds", "switchover-global-cluster" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for switchover-read-replica", function()
		local result = common.execute_aws_command_with_input({ "rds", "switchover-read-replica" })
		assert.is_true(result.success)
	end)

end)