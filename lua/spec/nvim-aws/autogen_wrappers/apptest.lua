-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: apptest

require("nvim-aws").setup()
local service = require("nvim-aws.autogen_wrappers.apptest")

describe("AWS apptest service testing", function()
	it("should generate a cli skeleton with create_test_case", function()
		local result = service.create_test_case()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with create_test_configuration", function()
		local result = service.create_test_configuration()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with create_test_suite", function()
		local result = service.create_test_suite()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with delete_test_case", function()
		local result = service.delete_test_case()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with delete_test_configuration", function()
		local result = service.delete_test_configuration()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with delete_test_run", function()
		local result = service.delete_test_run()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with delete_test_suite", function()
		local result = service.delete_test_suite()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_test_case", function()
		local result = service.get_test_case()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_test_configuration", function()
		local result = service.get_test_configuration()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_test_run_step", function()
		local result = service.get_test_run_step()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_test_suite", function()
		local result = service.get_test_suite()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_tags_for_resource", function()
		local result = service.list_tags_for_resource()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_test_cases", function()
		local result = service.list_test_cases()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_test_configurations", function()
		local result = service.list_test_configurations()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_test_run_steps", function()
		local result = service.list_test_run_steps()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_test_run_test_cases", function()
		local result = service.list_test_run_test_cases()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_test_runs", function()
		local result = service.list_test_runs()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_test_suites", function()
		local result = service.list_test_suites()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with start_test_run", function()
		local result = service.start_test_run()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with tag_resource", function()
		local result = service.tag_resource()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with untag_resource", function()
		local result = service.untag_resource()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with update_test_case", function()
		local result = service.update_test_case()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with update_test_configuration", function()
		local result = service.update_test_configuration()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with update_test_suite", function()
		local result = service.update_test_suite()
		assert.is_true(result.success)
	end)

end)