-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: cloudtrail

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS cloudtrail service testing", function()
	it("should generate a cli skeleton for add-tags", function()
		local result = common.execute_aws_command_with_input({ "cloudtrail", "add-tags" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for cancel-query", function()
		local result = common.execute_aws_command_with_input({ "cloudtrail", "cancel-query" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-channel", function()
		local result = common.execute_aws_command_with_input({ "cloudtrail", "create-channel" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-dashboard", function()
		local result = common.execute_aws_command_with_input({ "cloudtrail", "create-dashboard" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-event-data-store", function()
		local result = common.execute_aws_command_with_input({ "cloudtrail", "create-event-data-store" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-trail", function()
		local result = common.execute_aws_command_with_input({ "cloudtrail", "create-trail" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-channel", function()
		local result = common.execute_aws_command_with_input({ "cloudtrail", "delete-channel" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-dashboard", function()
		local result = common.execute_aws_command_with_input({ "cloudtrail", "delete-dashboard" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-event-data-store", function()
		local result = common.execute_aws_command_with_input({ "cloudtrail", "delete-event-data-store" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-resource-policy", function()
		local result = common.execute_aws_command_with_input({ "cloudtrail", "delete-resource-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-trail", function()
		local result = common.execute_aws_command_with_input({ "cloudtrail", "delete-trail" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for deregister-organization-delegated-admin", function()
		local result = common.execute_aws_command_with_input({ "cloudtrail", "deregister-organization-delegated-admin" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-query", function()
		local result = common.execute_aws_command_with_input({ "cloudtrail", "describe-query" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-trails", function()
		local result = common.execute_aws_command_with_input({ "cloudtrail", "describe-trails" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disable-federation", function()
		local result = common.execute_aws_command_with_input({ "cloudtrail", "disable-federation" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for enable-federation", function()
		local result = common.execute_aws_command_with_input({ "cloudtrail", "enable-federation" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for generate-query", function()
		local result = common.execute_aws_command_with_input({ "cloudtrail", "generate-query" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-channel", function()
		local result = common.execute_aws_command_with_input({ "cloudtrail", "get-channel" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-dashboard", function()
		local result = common.execute_aws_command_with_input({ "cloudtrail", "get-dashboard" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-event-data-store", function()
		local result = common.execute_aws_command_with_input({ "cloudtrail", "get-event-data-store" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-event-selectors", function()
		local result = common.execute_aws_command_with_input({ "cloudtrail", "get-event-selectors" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-import", function()
		local result = common.execute_aws_command_with_input({ "cloudtrail", "get-import" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-insight-selectors", function()
		local result = common.execute_aws_command_with_input({ "cloudtrail", "get-insight-selectors" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-query-results", function()
		local result = common.execute_aws_command_with_input({ "cloudtrail", "get-query-results" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-resource-policy", function()
		local result = common.execute_aws_command_with_input({ "cloudtrail", "get-resource-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-trail", function()
		local result = common.execute_aws_command_with_input({ "cloudtrail", "get-trail" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-trail-status", function()
		local result = common.execute_aws_command_with_input({ "cloudtrail", "get-trail-status" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-channels", function()
		local result = common.execute_aws_command_with_input({ "cloudtrail", "list-channels" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-dashboards", function()
		local result = common.execute_aws_command_with_input({ "cloudtrail", "list-dashboards" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-event-data-stores", function()
		local result = common.execute_aws_command_with_input({ "cloudtrail", "list-event-data-stores" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-import-failures", function()
		local result = common.execute_aws_command_with_input({ "cloudtrail", "list-import-failures" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-imports", function()
		local result = common.execute_aws_command_with_input({ "cloudtrail", "list-imports" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-insights-metric-data", function()
		local result = common.execute_aws_command_with_input({ "cloudtrail", "list-insights-metric-data" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-public-keys", function()
		local result = common.execute_aws_command_with_input({ "cloudtrail", "list-public-keys" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-queries", function()
		local result = common.execute_aws_command_with_input({ "cloudtrail", "list-queries" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags", function()
		local result = common.execute_aws_command_with_input({ "cloudtrail", "list-tags" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-trails", function()
		local result = common.execute_aws_command_with_input({ "cloudtrail", "list-trails" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for lookup-events", function()
		local result = common.execute_aws_command_with_input({ "cloudtrail", "lookup-events" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-event-selectors", function()
		local result = common.execute_aws_command_with_input({ "cloudtrail", "put-event-selectors" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-insight-selectors", function()
		local result = common.execute_aws_command_with_input({ "cloudtrail", "put-insight-selectors" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-resource-policy", function()
		local result = common.execute_aws_command_with_input({ "cloudtrail", "put-resource-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for register-organization-delegated-admin", function()
		local result = common.execute_aws_command_with_input({ "cloudtrail", "register-organization-delegated-admin" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for remove-tags", function()
		local result = common.execute_aws_command_with_input({ "cloudtrail", "remove-tags" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for restore-event-data-store", function()
		local result = common.execute_aws_command_with_input({ "cloudtrail", "restore-event-data-store" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for search-sample-queries", function()
		local result = common.execute_aws_command_with_input({ "cloudtrail", "search-sample-queries" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-dashboard-refresh", function()
		local result = common.execute_aws_command_with_input({ "cloudtrail", "start-dashboard-refresh" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-event-data-store-ingestion", function()
		local result = common.execute_aws_command_with_input({ "cloudtrail", "start-event-data-store-ingestion" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-import", function()
		local result = common.execute_aws_command_with_input({ "cloudtrail", "start-import" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-logging", function()
		local result = common.execute_aws_command_with_input({ "cloudtrail", "start-logging" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-query", function()
		local result = common.execute_aws_command_with_input({ "cloudtrail", "start-query" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-event-data-store-ingestion", function()
		local result = common.execute_aws_command_with_input({ "cloudtrail", "stop-event-data-store-ingestion" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-import", function()
		local result = common.execute_aws_command_with_input({ "cloudtrail", "stop-import" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-logging", function()
		local result = common.execute_aws_command_with_input({ "cloudtrail", "stop-logging" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-channel", function()
		local result = common.execute_aws_command_with_input({ "cloudtrail", "update-channel" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-dashboard", function()
		local result = common.execute_aws_command_with_input({ "cloudtrail", "update-dashboard" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-event-data-store", function()
		local result = common.execute_aws_command_with_input({ "cloudtrail", "update-event-data-store" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-trail", function()
		local result = common.execute_aws_command_with_input({ "cloudtrail", "update-trail" })
		assert.is_true(result.success)
	end)

end)