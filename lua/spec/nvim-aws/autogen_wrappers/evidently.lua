-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: evidently

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS evidently service testing", function()
	it("should generate a cli skeleton for batch-evaluate-feature", function()
		local result = common.execute_aws_command_with_input({ "evidently", "batch-evaluate-feature" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-project", function()
		local result = common.execute_aws_command_with_input({ "evidently", "create-project" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-segment", function()
		local result = common.execute_aws_command_with_input({ "evidently", "create-segment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-project", function()
		local result = common.execute_aws_command_with_input({ "evidently", "delete-project" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-segment", function()
		local result = common.execute_aws_command_with_input({ "evidently", "delete-segment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for evaluate-feature", function()
		local result = common.execute_aws_command_with_input({ "evidently", "evaluate-feature" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-project", function()
		local result = common.execute_aws_command_with_input({ "evidently", "get-project" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-segment", function()
		local result = common.execute_aws_command_with_input({ "evidently", "get-segment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-projects", function()
		local result = common.execute_aws_command_with_input({ "evidently", "list-projects" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-segment-references", function()
		local result = common.execute_aws_command_with_input({ "evidently", "list-segment-references" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-segments", function()
		local result = common.execute_aws_command_with_input({ "evidently", "list-segments" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "evidently", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-project-events", function()
		local result = common.execute_aws_command_with_input({ "evidently", "put-project-events" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "evidently", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for test-segment-pattern", function()
		local result = common.execute_aws_command_with_input({ "evidently", "test-segment-pattern" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "evidently", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-project", function()
		local result = common.execute_aws_command_with_input({ "evidently", "update-project" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-project-data-delivery", function()
		local result = common.execute_aws_command_with_input({ "evidently", "update-project-data-delivery" })
		assert.is_true(result.success)
	end)

end)