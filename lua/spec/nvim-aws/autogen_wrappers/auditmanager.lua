-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: auditmanager

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS auditmanager service testing", function()
	it("should generate a cli skeleton for associate-assessment-report-evidence-folder", function()
		local result = common.execute_aws_command_with_input({ "auditmanager", "associate-assessment-report-evidence-folder" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-associate-assessment-report-evidence", function()
		local result = common.execute_aws_command_with_input({ "auditmanager", "batch-associate-assessment-report-evidence" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-create-delegation-by-assessment", function()
		local result = common.execute_aws_command_with_input({ "auditmanager", "batch-create-delegation-by-assessment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-delete-delegation-by-assessment", function()
		local result = common.execute_aws_command_with_input({ "auditmanager", "batch-delete-delegation-by-assessment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-disassociate-assessment-report-evidence", function()
		local result = common.execute_aws_command_with_input({ "auditmanager", "batch-disassociate-assessment-report-evidence" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-import-evidence-to-assessment-control", function()
		local result = common.execute_aws_command_with_input({ "auditmanager", "batch-import-evidence-to-assessment-control" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-assessment", function()
		local result = common.execute_aws_command_with_input({ "auditmanager", "create-assessment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-assessment-framework", function()
		local result = common.execute_aws_command_with_input({ "auditmanager", "create-assessment-framework" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-assessment-report", function()
		local result = common.execute_aws_command_with_input({ "auditmanager", "create-assessment-report" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-control", function()
		local result = common.execute_aws_command_with_input({ "auditmanager", "create-control" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-assessment", function()
		local result = common.execute_aws_command_with_input({ "auditmanager", "delete-assessment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-assessment-framework", function()
		local result = common.execute_aws_command_with_input({ "auditmanager", "delete-assessment-framework" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-assessment-framework-share", function()
		local result = common.execute_aws_command_with_input({ "auditmanager", "delete-assessment-framework-share" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-assessment-report", function()
		local result = common.execute_aws_command_with_input({ "auditmanager", "delete-assessment-report" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-control", function()
		local result = common.execute_aws_command_with_input({ "auditmanager", "delete-control" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for deregister-account", function()
		local result = common.execute_aws_command_with_input({ "auditmanager", "deregister-account" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for deregister-organization-admin-account", function()
		local result = common.execute_aws_command_with_input({ "auditmanager", "deregister-organization-admin-account" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-assessment-report-evidence-folder", function()
		local result = common.execute_aws_command_with_input({ "auditmanager", "disassociate-assessment-report-evidence-folder" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-account-status", function()
		local result = common.execute_aws_command_with_input({ "auditmanager", "get-account-status" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-assessment", function()
		local result = common.execute_aws_command_with_input({ "auditmanager", "get-assessment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-assessment-framework", function()
		local result = common.execute_aws_command_with_input({ "auditmanager", "get-assessment-framework" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-assessment-report-url", function()
		local result = common.execute_aws_command_with_input({ "auditmanager", "get-assessment-report-url" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-change-logs", function()
		local result = common.execute_aws_command_with_input({ "auditmanager", "get-change-logs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-control", function()
		local result = common.execute_aws_command_with_input({ "auditmanager", "get-control" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-delegations", function()
		local result = common.execute_aws_command_with_input({ "auditmanager", "get-delegations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-evidence", function()
		local result = common.execute_aws_command_with_input({ "auditmanager", "get-evidence" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-evidence-by-evidence-folder", function()
		local result = common.execute_aws_command_with_input({ "auditmanager", "get-evidence-by-evidence-folder" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-evidence-file-upload-url", function()
		local result = common.execute_aws_command_with_input({ "auditmanager", "get-evidence-file-upload-url" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-evidence-folder", function()
		local result = common.execute_aws_command_with_input({ "auditmanager", "get-evidence-folder" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-evidence-folders-by-assessment", function()
		local result = common.execute_aws_command_with_input({ "auditmanager", "get-evidence-folders-by-assessment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-evidence-folders-by-assessment-control", function()
		local result = common.execute_aws_command_with_input({ "auditmanager", "get-evidence-folders-by-assessment-control" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-insights", function()
		local result = common.execute_aws_command_with_input({ "auditmanager", "get-insights" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-insights-by-assessment", function()
		local result = common.execute_aws_command_with_input({ "auditmanager", "get-insights-by-assessment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-organization-admin-account", function()
		local result = common.execute_aws_command_with_input({ "auditmanager", "get-organization-admin-account" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-services-in-scope", function()
		local result = common.execute_aws_command_with_input({ "auditmanager", "get-services-in-scope" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-settings", function()
		local result = common.execute_aws_command_with_input({ "auditmanager", "get-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-assessment-control-insights-by-control-domain", function()
		local result = common.execute_aws_command_with_input({ "auditmanager", "list-assessment-control-insights-by-control-domain" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-assessment-framework-share-requests", function()
		local result = common.execute_aws_command_with_input({ "auditmanager", "list-assessment-framework-share-requests" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-assessment-frameworks", function()
		local result = common.execute_aws_command_with_input({ "auditmanager", "list-assessment-frameworks" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-assessment-reports", function()
		local result = common.execute_aws_command_with_input({ "auditmanager", "list-assessment-reports" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-assessments", function()
		local result = common.execute_aws_command_with_input({ "auditmanager", "list-assessments" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-control-domain-insights", function()
		local result = common.execute_aws_command_with_input({ "auditmanager", "list-control-domain-insights" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-control-domain-insights-by-assessment", function()
		local result = common.execute_aws_command_with_input({ "auditmanager", "list-control-domain-insights-by-assessment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-control-insights-by-control-domain", function()
		local result = common.execute_aws_command_with_input({ "auditmanager", "list-control-insights-by-control-domain" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-controls", function()
		local result = common.execute_aws_command_with_input({ "auditmanager", "list-controls" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-keywords-for-data-source", function()
		local result = common.execute_aws_command_with_input({ "auditmanager", "list-keywords-for-data-source" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-notifications", function()
		local result = common.execute_aws_command_with_input({ "auditmanager", "list-notifications" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "auditmanager", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for register-account", function()
		local result = common.execute_aws_command_with_input({ "auditmanager", "register-account" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for register-organization-admin-account", function()
		local result = common.execute_aws_command_with_input({ "auditmanager", "register-organization-admin-account" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-assessment-framework-share", function()
		local result = common.execute_aws_command_with_input({ "auditmanager", "start-assessment-framework-share" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "auditmanager", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "auditmanager", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-assessment", function()
		local result = common.execute_aws_command_with_input({ "auditmanager", "update-assessment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-assessment-control", function()
		local result = common.execute_aws_command_with_input({ "auditmanager", "update-assessment-control" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-assessment-control-set-status", function()
		local result = common.execute_aws_command_with_input({ "auditmanager", "update-assessment-control-set-status" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-assessment-framework", function()
		local result = common.execute_aws_command_with_input({ "auditmanager", "update-assessment-framework" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-assessment-framework-share", function()
		local result = common.execute_aws_command_with_input({ "auditmanager", "update-assessment-framework-share" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-assessment-status", function()
		local result = common.execute_aws_command_with_input({ "auditmanager", "update-assessment-status" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-control", function()
		local result = common.execute_aws_command_with_input({ "auditmanager", "update-control" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-settings", function()
		local result = common.execute_aws_command_with_input({ "auditmanager", "update-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for validate-assessment-report-integrity", function()
		local result = common.execute_aws_command_with_input({ "auditmanager", "validate-assessment-report-integrity" })
		assert.is_true(result.success)
	end)

end)