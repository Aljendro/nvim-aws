-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: bedrock

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS bedrock service testing", function()
	it("should generate a cli skeleton for batch-delete-evaluation-job", function()
		local result = common.execute_aws_command_with_input({ "bedrock", "batch-delete-evaluation-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-evaluation-job", function()
		local result = common.execute_aws_command_with_input({ "bedrock", "create-evaluation-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-guardrail", function()
		local result = common.execute_aws_command_with_input({ "bedrock", "create-guardrail" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-guardrail-version", function()
		local result = common.execute_aws_command_with_input({ "bedrock", "create-guardrail-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-inference-profile", function()
		local result = common.execute_aws_command_with_input({ "bedrock", "create-inference-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-marketplace-model-endpoint", function()
		local result = common.execute_aws_command_with_input({ "bedrock", "create-marketplace-model-endpoint" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-model-copy-job", function()
		local result = common.execute_aws_command_with_input({ "bedrock", "create-model-copy-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-model-customization-job", function()
		local result = common.execute_aws_command_with_input({ "bedrock", "create-model-customization-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-model-import-job", function()
		local result = common.execute_aws_command_with_input({ "bedrock", "create-model-import-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-model-invocation-job", function()
		local result = common.execute_aws_command_with_input({ "bedrock", "create-model-invocation-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-prompt-router", function()
		local result = common.execute_aws_command_with_input({ "bedrock", "create-prompt-router" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-provisioned-model-throughput", function()
		local result = common.execute_aws_command_with_input({ "bedrock", "create-provisioned-model-throughput" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-custom-model", function()
		local result = common.execute_aws_command_with_input({ "bedrock", "delete-custom-model" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-guardrail", function()
		local result = common.execute_aws_command_with_input({ "bedrock", "delete-guardrail" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-imported-model", function()
		local result = common.execute_aws_command_with_input({ "bedrock", "delete-imported-model" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-inference-profile", function()
		local result = common.execute_aws_command_with_input({ "bedrock", "delete-inference-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-marketplace-model-endpoint", function()
		local result = common.execute_aws_command_with_input({ "bedrock", "delete-marketplace-model-endpoint" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-model-invocation-logging-configuration", function()
		local result = common.execute_aws_command_with_input({ "bedrock", "delete-model-invocation-logging-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-prompt-router", function()
		local result = common.execute_aws_command_with_input({ "bedrock", "delete-prompt-router" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-provisioned-model-throughput", function()
		local result = common.execute_aws_command_with_input({ "bedrock", "delete-provisioned-model-throughput" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for deregister-marketplace-model-endpoint", function()
		local result = common.execute_aws_command_with_input({ "bedrock", "deregister-marketplace-model-endpoint" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-custom-model", function()
		local result = common.execute_aws_command_with_input({ "bedrock", "get-custom-model" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-evaluation-job", function()
		local result = common.execute_aws_command_with_input({ "bedrock", "get-evaluation-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-foundation-model", function()
		local result = common.execute_aws_command_with_input({ "bedrock", "get-foundation-model" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-guardrail", function()
		local result = common.execute_aws_command_with_input({ "bedrock", "get-guardrail" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-imported-model", function()
		local result = common.execute_aws_command_with_input({ "bedrock", "get-imported-model" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-inference-profile", function()
		local result = common.execute_aws_command_with_input({ "bedrock", "get-inference-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-marketplace-model-endpoint", function()
		local result = common.execute_aws_command_with_input({ "bedrock", "get-marketplace-model-endpoint" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-model-copy-job", function()
		local result = common.execute_aws_command_with_input({ "bedrock", "get-model-copy-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-model-customization-job", function()
		local result = common.execute_aws_command_with_input({ "bedrock", "get-model-customization-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-model-import-job", function()
		local result = common.execute_aws_command_with_input({ "bedrock", "get-model-import-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-model-invocation-job", function()
		local result = common.execute_aws_command_with_input({ "bedrock", "get-model-invocation-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-model-invocation-logging-configuration", function()
		local result = common.execute_aws_command_with_input({ "bedrock", "get-model-invocation-logging-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-prompt-router", function()
		local result = common.execute_aws_command_with_input({ "bedrock", "get-prompt-router" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-provisioned-model-throughput", function()
		local result = common.execute_aws_command_with_input({ "bedrock", "get-provisioned-model-throughput" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-custom-models", function()
		local result = common.execute_aws_command_with_input({ "bedrock", "list-custom-models" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-evaluation-jobs", function()
		local result = common.execute_aws_command_with_input({ "bedrock", "list-evaluation-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-foundation-models", function()
		local result = common.execute_aws_command_with_input({ "bedrock", "list-foundation-models" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-guardrails", function()
		local result = common.execute_aws_command_with_input({ "bedrock", "list-guardrails" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-imported-models", function()
		local result = common.execute_aws_command_with_input({ "bedrock", "list-imported-models" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-inference-profiles", function()
		local result = common.execute_aws_command_with_input({ "bedrock", "list-inference-profiles" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-marketplace-model-endpoints", function()
		local result = common.execute_aws_command_with_input({ "bedrock", "list-marketplace-model-endpoints" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-model-copy-jobs", function()
		local result = common.execute_aws_command_with_input({ "bedrock", "list-model-copy-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-model-customization-jobs", function()
		local result = common.execute_aws_command_with_input({ "bedrock", "list-model-customization-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-model-import-jobs", function()
		local result = common.execute_aws_command_with_input({ "bedrock", "list-model-import-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-model-invocation-jobs", function()
		local result = common.execute_aws_command_with_input({ "bedrock", "list-model-invocation-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-prompt-routers", function()
		local result = common.execute_aws_command_with_input({ "bedrock", "list-prompt-routers" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-provisioned-model-throughputs", function()
		local result = common.execute_aws_command_with_input({ "bedrock", "list-provisioned-model-throughputs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "bedrock", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-model-invocation-logging-configuration", function()
		local result = common.execute_aws_command_with_input({ "bedrock", "put-model-invocation-logging-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for register-marketplace-model-endpoint", function()
		local result = common.execute_aws_command_with_input({ "bedrock", "register-marketplace-model-endpoint" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-evaluation-job", function()
		local result = common.execute_aws_command_with_input({ "bedrock", "stop-evaluation-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-model-customization-job", function()
		local result = common.execute_aws_command_with_input({ "bedrock", "stop-model-customization-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-model-invocation-job", function()
		local result = common.execute_aws_command_with_input({ "bedrock", "stop-model-invocation-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "bedrock", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "bedrock", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-guardrail", function()
		local result = common.execute_aws_command_with_input({ "bedrock", "update-guardrail" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-marketplace-model-endpoint", function()
		local result = common.execute_aws_command_with_input({ "bedrock", "update-marketplace-model-endpoint" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-provisioned-model-throughput", function()
		local result = common.execute_aws_command_with_input({ "bedrock", "update-provisioned-model-throughput" })
		assert.is_true(result.success)
	end)

end)