-- AUTOGENERATED FILE - DO NOT EDIT
-- AWS Service: sesv2

require("nvim-aws").setup()
local service = require("nvim-aws.autogen_wrappers.sesv2")

describe("AWS sesv2 service testing", function()
	it("should generate a cli skeleton with batch_get_metric_data", function()
		local result = service.batch_get_metric_data()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with cancel_export_job", function()
		local result = service.cancel_export_job()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with create_configuration_set", function()
		local result = service.create_configuration_set()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with create_configuration_set_event_destination", function()
		local result = service.create_configuration_set_event_destination()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with create_contact", function()
		local result = service.create_contact()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with create_contact_list", function()
		local result = service.create_contact_list()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with create_custom_verification_email_template", function()
		local result = service.create_custom_verification_email_template()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with create_dedicated_ip_pool", function()
		local result = service.create_dedicated_ip_pool()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with create_deliverability_test_report", function()
		local result = service.create_deliverability_test_report()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with create_email_identity", function()
		local result = service.create_email_identity()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with create_email_identity_policy", function()
		local result = service.create_email_identity_policy()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with create_email_template", function()
		local result = service.create_email_template()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with create_export_job", function()
		local result = service.create_export_job()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with create_import_job", function()
		local result = service.create_import_job()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with create_multi_region_endpoint", function()
		local result = service.create_multi_region_endpoint()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with delete_configuration_set", function()
		local result = service.delete_configuration_set()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with delete_configuration_set_event_destination", function()
		local result = service.delete_configuration_set_event_destination()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with delete_contact", function()
		local result = service.delete_contact()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with delete_contact_list", function()
		local result = service.delete_contact_list()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with delete_custom_verification_email_template", function()
		local result = service.delete_custom_verification_email_template()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with delete_dedicated_ip_pool", function()
		local result = service.delete_dedicated_ip_pool()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with delete_email_identity", function()
		local result = service.delete_email_identity()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with delete_email_identity_policy", function()
		local result = service.delete_email_identity_policy()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with delete_email_template", function()
		local result = service.delete_email_template()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with delete_multi_region_endpoint", function()
		local result = service.delete_multi_region_endpoint()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with delete_suppressed_destination", function()
		local result = service.delete_suppressed_destination()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_account", function()
		local result = service.get_account()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_blacklist_reports", function()
		local result = service.get_blacklist_reports()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_configuration_set", function()
		local result = service.get_configuration_set()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_configuration_set_event_destinations", function()
		local result = service.get_configuration_set_event_destinations()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_contact", function()
		local result = service.get_contact()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_contact_list", function()
		local result = service.get_contact_list()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_custom_verification_email_template", function()
		local result = service.get_custom_verification_email_template()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_dedicated_ip", function()
		local result = service.get_dedicated_ip()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_dedicated_ip_pool", function()
		local result = service.get_dedicated_ip_pool()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_dedicated_ips", function()
		local result = service.get_dedicated_ips()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_deliverability_dashboard_options", function()
		local result = service.get_deliverability_dashboard_options()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_deliverability_test_report", function()
		local result = service.get_deliverability_test_report()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_domain_deliverability_campaign", function()
		local result = service.get_domain_deliverability_campaign()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_domain_statistics_report", function()
		local result = service.get_domain_statistics_report()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_email_identity", function()
		local result = service.get_email_identity()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_email_identity_policies", function()
		local result = service.get_email_identity_policies()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_email_template", function()
		local result = service.get_email_template()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_export_job", function()
		local result = service.get_export_job()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_import_job", function()
		local result = service.get_import_job()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_message_insights", function()
		local result = service.get_message_insights()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_multi_region_endpoint", function()
		local result = service.get_multi_region_endpoint()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_suppressed_destination", function()
		local result = service.get_suppressed_destination()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_configuration_sets", function()
		local result = service.list_configuration_sets()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_contact_lists", function()
		local result = service.list_contact_lists()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_contacts", function()
		local result = service.list_contacts()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_custom_verification_email_templates", function()
		local result = service.list_custom_verification_email_templates()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_dedicated_ip_pools", function()
		local result = service.list_dedicated_ip_pools()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_deliverability_test_reports", function()
		local result = service.list_deliverability_test_reports()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_domain_deliverability_campaigns", function()
		local result = service.list_domain_deliverability_campaigns()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_email_identities", function()
		local result = service.list_email_identities()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_email_templates", function()
		local result = service.list_email_templates()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_export_jobs", function()
		local result = service.list_export_jobs()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_import_jobs", function()
		local result = service.list_import_jobs()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_multi_region_endpoints", function()
		local result = service.list_multi_region_endpoints()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_recommendations", function()
		local result = service.list_recommendations()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_suppressed_destinations", function()
		local result = service.list_suppressed_destinations()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_tags_for_resource", function()
		local result = service.list_tags_for_resource()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with put_account_dedicated_ip_warmup_attributes", function()
		local result = service.put_account_dedicated_ip_warmup_attributes()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with put_account_details", function()
		local result = service.put_account_details()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with put_account_sending_attributes", function()
		local result = service.put_account_sending_attributes()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with put_account_suppression_attributes", function()
		local result = service.put_account_suppression_attributes()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with put_account_vdm_attributes", function()
		local result = service.put_account_vdm_attributes()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with put_configuration_set_archiving_options", function()
		local result = service.put_configuration_set_archiving_options()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with put_configuration_set_delivery_options", function()
		local result = service.put_configuration_set_delivery_options()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with put_configuration_set_reputation_options", function()
		local result = service.put_configuration_set_reputation_options()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with put_configuration_set_sending_options", function()
		local result = service.put_configuration_set_sending_options()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with put_configuration_set_suppression_options", function()
		local result = service.put_configuration_set_suppression_options()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with put_configuration_set_tracking_options", function()
		local result = service.put_configuration_set_tracking_options()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with put_configuration_set_vdm_options", function()
		local result = service.put_configuration_set_vdm_options()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with put_dedicated_ip_in_pool", function()
		local result = service.put_dedicated_ip_in_pool()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with put_dedicated_ip_pool_scaling_attributes", function()
		local result = service.put_dedicated_ip_pool_scaling_attributes()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with put_dedicated_ip_warmup_attributes", function()
		local result = service.put_dedicated_ip_warmup_attributes()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with put_deliverability_dashboard_option", function()
		local result = service.put_deliverability_dashboard_option()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with put_email_identity_configuration_set_attributes", function()
		local result = service.put_email_identity_configuration_set_attributes()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with put_email_identity_dkim_attributes", function()
		local result = service.put_email_identity_dkim_attributes()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with put_email_identity_dkim_signing_attributes", function()
		local result = service.put_email_identity_dkim_signing_attributes()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with put_email_identity_feedback_attributes", function()
		local result = service.put_email_identity_feedback_attributes()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with put_email_identity_mail_from_attributes", function()
		local result = service.put_email_identity_mail_from_attributes()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with put_suppressed_destination", function()
		local result = service.put_suppressed_destination()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with send_bulk_email", function()
		local result = service.send_bulk_email()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with send_custom_verification_email", function()
		local result = service.send_custom_verification_email()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with send_email", function()
		local result = service.send_email()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with tag_resource", function()
		local result = service.tag_resource()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with test_render_email_template", function()
		local result = service.test_render_email_template()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with untag_resource", function()
		local result = service.untag_resource()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with update_configuration_set_event_destination", function()
		local result = service.update_configuration_set_event_destination()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with update_contact", function()
		local result = service.update_contact()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with update_contact_list", function()
		local result = service.update_contact_list()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with update_custom_verification_email_template", function()
		local result = service.update_custom_verification_email_template()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with update_email_identity_policy", function()
		local result = service.update_email_identity_policy()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with update_email_template", function()
		local result = service.update_email_template()
		assert.is_true(result.success)
	end)

end)