-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: pinpoint

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS pinpoint service testing", function()
	it("should generate a cli skeleton for create-app", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "create-app" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-campaign", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "create-campaign" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-email-template", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "create-email-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-export-job", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "create-export-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-import-job", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "create-import-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-in-app-template", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "create-in-app-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-journey", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "create-journey" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-push-template", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "create-push-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-recommender-configuration", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "create-recommender-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-segment", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "create-segment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-sms-template", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "create-sms-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-voice-template", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "create-voice-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-adm-channel", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "delete-adm-channel" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-apns-channel", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "delete-apns-channel" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-apns-sandbox-channel", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "delete-apns-sandbox-channel" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-apns-voip-channel", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "delete-apns-voip-channel" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-apns-voip-sandbox-channel", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "delete-apns-voip-sandbox-channel" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-app", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "delete-app" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-baidu-channel", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "delete-baidu-channel" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-campaign", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "delete-campaign" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-email-channel", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "delete-email-channel" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-email-template", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "delete-email-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-endpoint", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "delete-endpoint" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-event-stream", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "delete-event-stream" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-gcm-channel", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "delete-gcm-channel" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-in-app-template", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "delete-in-app-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-journey", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "delete-journey" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-push-template", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "delete-push-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-recommender-configuration", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "delete-recommender-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-segment", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "delete-segment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-sms-channel", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "delete-sms-channel" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-sms-template", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "delete-sms-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-user-endpoints", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "delete-user-endpoints" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-voice-channel", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "delete-voice-channel" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-voice-template", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "delete-voice-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-adm-channel", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "get-adm-channel" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-apns-channel", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "get-apns-channel" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-apns-sandbox-channel", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "get-apns-sandbox-channel" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-apns-voip-channel", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "get-apns-voip-channel" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-apns-voip-sandbox-channel", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "get-apns-voip-sandbox-channel" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-app", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "get-app" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-application-date-range-kpi", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "get-application-date-range-kpi" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-application-settings", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "get-application-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-apps", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "get-apps" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-baidu-channel", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "get-baidu-channel" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-campaign", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "get-campaign" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-campaign-activities", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "get-campaign-activities" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-campaign-date-range-kpi", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "get-campaign-date-range-kpi" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-campaign-version", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "get-campaign-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-campaign-versions", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "get-campaign-versions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-campaigns", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "get-campaigns" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-channels", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "get-channels" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-email-channel", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "get-email-channel" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-email-template", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "get-email-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-endpoint", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "get-endpoint" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-event-stream", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "get-event-stream" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-export-job", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "get-export-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-export-jobs", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "get-export-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-gcm-channel", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "get-gcm-channel" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-import-job", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "get-import-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-import-jobs", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "get-import-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-in-app-messages", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "get-in-app-messages" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-in-app-template", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "get-in-app-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-journey", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "get-journey" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-journey-date-range-kpi", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "get-journey-date-range-kpi" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-journey-execution-activity-metrics", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "get-journey-execution-activity-metrics" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-journey-execution-metrics", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "get-journey-execution-metrics" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-journey-run-execution-activity-metrics", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "get-journey-run-execution-activity-metrics" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-journey-run-execution-metrics", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "get-journey-run-execution-metrics" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-journey-runs", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "get-journey-runs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-push-template", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "get-push-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-recommender-configuration", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "get-recommender-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-recommender-configurations", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "get-recommender-configurations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-segment", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "get-segment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-segment-export-jobs", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "get-segment-export-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-segment-import-jobs", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "get-segment-import-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-segment-version", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "get-segment-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-segment-versions", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "get-segment-versions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-segments", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "get-segments" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-sms-channel", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "get-sms-channel" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-sms-template", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "get-sms-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-user-endpoints", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "get-user-endpoints" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-voice-channel", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "get-voice-channel" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-voice-template", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "get-voice-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-journeys", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "list-journeys" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-template-versions", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "list-template-versions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-templates", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "list-templates" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for phone-number-validate", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "phone-number-validate" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-event-stream", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "put-event-stream" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-events", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "put-events" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for remove-attributes", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "remove-attributes" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for send-messages", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "send-messages" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for send-otp-message", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "send-otp-message" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for send-users-messages", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "send-users-messages" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-adm-channel", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "update-adm-channel" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-apns-channel", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "update-apns-channel" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-apns-sandbox-channel", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "update-apns-sandbox-channel" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-apns-voip-channel", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "update-apns-voip-channel" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-apns-voip-sandbox-channel", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "update-apns-voip-sandbox-channel" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-application-settings", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "update-application-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-baidu-channel", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "update-baidu-channel" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-campaign", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "update-campaign" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-email-channel", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "update-email-channel" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-email-template", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "update-email-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-endpoint", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "update-endpoint" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-endpoints-batch", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "update-endpoints-batch" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-gcm-channel", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "update-gcm-channel" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-in-app-template", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "update-in-app-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-journey", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "update-journey" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-journey-state", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "update-journey-state" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-push-template", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "update-push-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-recommender-configuration", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "update-recommender-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-segment", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "update-segment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-sms-channel", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "update-sms-channel" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-sms-template", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "update-sms-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-template-active-version", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "update-template-active-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-voice-channel", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "update-voice-channel" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-voice-template", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "update-voice-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for verify-otp-message", function()
		local result = common.execute_aws_command_with_input({ "pinpoint", "verify-otp-message" })
		assert.is_true(result.success)
	end)

end)