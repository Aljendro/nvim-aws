-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: personalize

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS personalize service testing", function()
	it("should generate a cli skeleton for create-batch-inference-job", function()
		local result = common.execute_aws_command_with_input({ "personalize", "create-batch-inference-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-batch-segment-job", function()
		local result = common.execute_aws_command_with_input({ "personalize", "create-batch-segment-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-campaign", function()
		local result = common.execute_aws_command_with_input({ "personalize", "create-campaign" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-data-deletion-job", function()
		local result = common.execute_aws_command_with_input({ "personalize", "create-data-deletion-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-dataset", function()
		local result = common.execute_aws_command_with_input({ "personalize", "create-dataset" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-dataset-export-job", function()
		local result = common.execute_aws_command_with_input({ "personalize", "create-dataset-export-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-dataset-group", function()
		local result = common.execute_aws_command_with_input({ "personalize", "create-dataset-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-dataset-import-job", function()
		local result = common.execute_aws_command_with_input({ "personalize", "create-dataset-import-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-event-tracker", function()
		local result = common.execute_aws_command_with_input({ "personalize", "create-event-tracker" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-filter", function()
		local result = common.execute_aws_command_with_input({ "personalize", "create-filter" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-metric-attribution", function()
		local result = common.execute_aws_command_with_input({ "personalize", "create-metric-attribution" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-recommender", function()
		local result = common.execute_aws_command_with_input({ "personalize", "create-recommender" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-schema", function()
		local result = common.execute_aws_command_with_input({ "personalize", "create-schema" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-solution", function()
		local result = common.execute_aws_command_with_input({ "personalize", "create-solution" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-solution-version", function()
		local result = common.execute_aws_command_with_input({ "personalize", "create-solution-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-campaign", function()
		local result = common.execute_aws_command_with_input({ "personalize", "delete-campaign" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-dataset", function()
		local result = common.execute_aws_command_with_input({ "personalize", "delete-dataset" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-dataset-group", function()
		local result = common.execute_aws_command_with_input({ "personalize", "delete-dataset-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-event-tracker", function()
		local result = common.execute_aws_command_with_input({ "personalize", "delete-event-tracker" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-filter", function()
		local result = common.execute_aws_command_with_input({ "personalize", "delete-filter" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-metric-attribution", function()
		local result = common.execute_aws_command_with_input({ "personalize", "delete-metric-attribution" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-recommender", function()
		local result = common.execute_aws_command_with_input({ "personalize", "delete-recommender" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-schema", function()
		local result = common.execute_aws_command_with_input({ "personalize", "delete-schema" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-solution", function()
		local result = common.execute_aws_command_with_input({ "personalize", "delete-solution" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-algorithm", function()
		local result = common.execute_aws_command_with_input({ "personalize", "describe-algorithm" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-batch-inference-job", function()
		local result = common.execute_aws_command_with_input({ "personalize", "describe-batch-inference-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-batch-segment-job", function()
		local result = common.execute_aws_command_with_input({ "personalize", "describe-batch-segment-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-campaign", function()
		local result = common.execute_aws_command_with_input({ "personalize", "describe-campaign" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-data-deletion-job", function()
		local result = common.execute_aws_command_with_input({ "personalize", "describe-data-deletion-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-dataset", function()
		local result = common.execute_aws_command_with_input({ "personalize", "describe-dataset" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-dataset-export-job", function()
		local result = common.execute_aws_command_with_input({ "personalize", "describe-dataset-export-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-dataset-group", function()
		local result = common.execute_aws_command_with_input({ "personalize", "describe-dataset-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-dataset-import-job", function()
		local result = common.execute_aws_command_with_input({ "personalize", "describe-dataset-import-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-event-tracker", function()
		local result = common.execute_aws_command_with_input({ "personalize", "describe-event-tracker" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-feature-transformation", function()
		local result = common.execute_aws_command_with_input({ "personalize", "describe-feature-transformation" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-filter", function()
		local result = common.execute_aws_command_with_input({ "personalize", "describe-filter" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-metric-attribution", function()
		local result = common.execute_aws_command_with_input({ "personalize", "describe-metric-attribution" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-recipe", function()
		local result = common.execute_aws_command_with_input({ "personalize", "describe-recipe" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-recommender", function()
		local result = common.execute_aws_command_with_input({ "personalize", "describe-recommender" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-schema", function()
		local result = common.execute_aws_command_with_input({ "personalize", "describe-schema" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-solution", function()
		local result = common.execute_aws_command_with_input({ "personalize", "describe-solution" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-solution-version", function()
		local result = common.execute_aws_command_with_input({ "personalize", "describe-solution-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-solution-metrics", function()
		local result = common.execute_aws_command_with_input({ "personalize", "get-solution-metrics" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-batch-inference-jobs", function()
		local result = common.execute_aws_command_with_input({ "personalize", "list-batch-inference-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-batch-segment-jobs", function()
		local result = common.execute_aws_command_with_input({ "personalize", "list-batch-segment-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-campaigns", function()
		local result = common.execute_aws_command_with_input({ "personalize", "list-campaigns" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-data-deletion-jobs", function()
		local result = common.execute_aws_command_with_input({ "personalize", "list-data-deletion-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-dataset-export-jobs", function()
		local result = common.execute_aws_command_with_input({ "personalize", "list-dataset-export-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-dataset-groups", function()
		local result = common.execute_aws_command_with_input({ "personalize", "list-dataset-groups" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-dataset-import-jobs", function()
		local result = common.execute_aws_command_with_input({ "personalize", "list-dataset-import-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-datasets", function()
		local result = common.execute_aws_command_with_input({ "personalize", "list-datasets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-event-trackers", function()
		local result = common.execute_aws_command_with_input({ "personalize", "list-event-trackers" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-filters", function()
		local result = common.execute_aws_command_with_input({ "personalize", "list-filters" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-metric-attribution-metrics", function()
		local result = common.execute_aws_command_with_input({ "personalize", "list-metric-attribution-metrics" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-metric-attributions", function()
		local result = common.execute_aws_command_with_input({ "personalize", "list-metric-attributions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-recipes", function()
		local result = common.execute_aws_command_with_input({ "personalize", "list-recipes" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-recommenders", function()
		local result = common.execute_aws_command_with_input({ "personalize", "list-recommenders" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-schemas", function()
		local result = common.execute_aws_command_with_input({ "personalize", "list-schemas" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-solution-versions", function()
		local result = common.execute_aws_command_with_input({ "personalize", "list-solution-versions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-solutions", function()
		local result = common.execute_aws_command_with_input({ "personalize", "list-solutions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "personalize", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-recommender", function()
		local result = common.execute_aws_command_with_input({ "personalize", "start-recommender" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-recommender", function()
		local result = common.execute_aws_command_with_input({ "personalize", "stop-recommender" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-solution-version-creation", function()
		local result = common.execute_aws_command_with_input({ "personalize", "stop-solution-version-creation" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "personalize", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "personalize", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-campaign", function()
		local result = common.execute_aws_command_with_input({ "personalize", "update-campaign" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-dataset", function()
		local result = common.execute_aws_command_with_input({ "personalize", "update-dataset" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-metric-attribution", function()
		local result = common.execute_aws_command_with_input({ "personalize", "update-metric-attribution" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-recommender", function()
		local result = common.execute_aws_command_with_input({ "personalize", "update-recommender" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-solution", function()
		local result = common.execute_aws_command_with_input({ "personalize", "update-solution" })
		assert.is_true(result.success)
	end)

end)