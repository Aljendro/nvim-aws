-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: batch

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS batch service testing", function()
	it("should generate a cli skeleton for cancel-job", function()
		local result = common.execute_aws_command_with_input({ "batch", "cancel-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-compute-environment", function()
		local result = common.execute_aws_command_with_input({ "batch", "create-compute-environment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-consumable-resource", function()
		local result = common.execute_aws_command_with_input({ "batch", "create-consumable-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-job-queue", function()
		local result = common.execute_aws_command_with_input({ "batch", "create-job-queue" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-scheduling-policy", function()
		local result = common.execute_aws_command_with_input({ "batch", "create-scheduling-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-compute-environment", function()
		local result = common.execute_aws_command_with_input({ "batch", "delete-compute-environment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-consumable-resource", function()
		local result = common.execute_aws_command_with_input({ "batch", "delete-consumable-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-job-queue", function()
		local result = common.execute_aws_command_with_input({ "batch", "delete-job-queue" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-scheduling-policy", function()
		local result = common.execute_aws_command_with_input({ "batch", "delete-scheduling-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for deregister-job-definition", function()
		local result = common.execute_aws_command_with_input({ "batch", "deregister-job-definition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-compute-environments", function()
		local result = common.execute_aws_command_with_input({ "batch", "describe-compute-environments" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-consumable-resource", function()
		local result = common.execute_aws_command_with_input({ "batch", "describe-consumable-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-job-definitions", function()
		local result = common.execute_aws_command_with_input({ "batch", "describe-job-definitions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-job-queues", function()
		local result = common.execute_aws_command_with_input({ "batch", "describe-job-queues" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-jobs", function()
		local result = common.execute_aws_command_with_input({ "batch", "describe-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-scheduling-policies", function()
		local result = common.execute_aws_command_with_input({ "batch", "describe-scheduling-policies" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-job-queue-snapshot", function()
		local result = common.execute_aws_command_with_input({ "batch", "get-job-queue-snapshot" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-consumable-resources", function()
		local result = common.execute_aws_command_with_input({ "batch", "list-consumable-resources" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-jobs", function()
		local result = common.execute_aws_command_with_input({ "batch", "list-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-jobs-by-consumable-resource", function()
		local result = common.execute_aws_command_with_input({ "batch", "list-jobs-by-consumable-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-scheduling-policies", function()
		local result = common.execute_aws_command_with_input({ "batch", "list-scheduling-policies" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "batch", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for register-job-definition", function()
		local result = common.execute_aws_command_with_input({ "batch", "register-job-definition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for submit-job", function()
		local result = common.execute_aws_command_with_input({ "batch", "submit-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "batch", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for terminate-job", function()
		local result = common.execute_aws_command_with_input({ "batch", "terminate-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "batch", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-compute-environment", function()
		local result = common.execute_aws_command_with_input({ "batch", "update-compute-environment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-consumable-resource", function()
		local result = common.execute_aws_command_with_input({ "batch", "update-consumable-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-job-queue", function()
		local result = common.execute_aws_command_with_input({ "batch", "update-job-queue" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-scheduling-policy", function()
		local result = common.execute_aws_command_with_input({ "batch", "update-scheduling-policy" })
		assert.is_true(result.success)
	end)

end)