-- AUTOGENERATED FILE - DO NOT EDIT
-- AWS Service: finspace-data

require("nvim-aws").setup()
local service = require("nvim-aws.autogen_wrappers.finspace-data")

describe("AWS finspace-data service testing", function()
	it("should generate a cli skeleton with associate_user_to_permission_group", function()
		local result = service.associate_user_to_permission_group()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with create_changeset", function()
		local result = service.create_changeset()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with create_data_view", function()
		local result = service.create_data_view()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with create_dataset", function()
		local result = service.create_dataset()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with create_permission_group", function()
		local result = service.create_permission_group()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with create_user", function()
		local result = service.create_user()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with delete_dataset", function()
		local result = service.delete_dataset()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with delete_permission_group", function()
		local result = service.delete_permission_group()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with disable_user", function()
		local result = service.disable_user()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with disassociate_user_from_permission_group", function()
		local result = service.disassociate_user_from_permission_group()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with enable_user", function()
		local result = service.enable_user()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_changeset", function()
		local result = service.get_changeset()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_data_view", function()
		local result = service.get_data_view()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_dataset", function()
		local result = service.get_dataset()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_external_data_view_access_details", function()
		local result = service.get_external_data_view_access_details()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_permission_group", function()
		local result = service.get_permission_group()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_programmatic_access_credentials", function()
		local result = service.get_programmatic_access_credentials()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_user", function()
		local result = service.get_user()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_working_location", function()
		local result = service.get_working_location()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_changesets", function()
		local result = service.list_changesets()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_data_views", function()
		local result = service.list_data_views()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_datasets", function()
		local result = service.list_datasets()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_permission_groups", function()
		local result = service.list_permission_groups()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_permission_groups_by_user", function()
		local result = service.list_permission_groups_by_user()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_users", function()
		local result = service.list_users()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_users_by_permission_group", function()
		local result = service.list_users_by_permission_group()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with reset_user_password", function()
		local result = service.reset_user_password()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with update_changeset", function()
		local result = service.update_changeset()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with update_dataset", function()
		local result = service.update_dataset()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with update_permission_group", function()
		local result = service.update_permission_group()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with update_user", function()
		local result = service.update_user()
		assert.is_true(result.success)
	end)

end)