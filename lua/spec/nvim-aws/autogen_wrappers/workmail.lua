-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: workmail

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS workmail service testing", function()
	it("should generate a cli skeleton for associate-delegate-to-resource", function()
		local result = common.execute_aws_command_with_input({ "workmail", "associate-delegate-to-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for associate-member-to-group", function()
		local result = common.execute_aws_command_with_input({ "workmail", "associate-member-to-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for assume-impersonation-role", function()
		local result = common.execute_aws_command_with_input({ "workmail", "assume-impersonation-role" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for cancel-mailbox-export-job", function()
		local result = common.execute_aws_command_with_input({ "workmail", "cancel-mailbox-export-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-alias", function()
		local result = common.execute_aws_command_with_input({ "workmail", "create-alias" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-availability-configuration", function()
		local result = common.execute_aws_command_with_input({ "workmail", "create-availability-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-group", function()
		local result = common.execute_aws_command_with_input({ "workmail", "create-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-identity-center-application", function()
		local result = common.execute_aws_command_with_input({ "workmail", "create-identity-center-application" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-impersonation-role", function()
		local result = common.execute_aws_command_with_input({ "workmail", "create-impersonation-role" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-mobile-device-access-rule", function()
		local result = common.execute_aws_command_with_input({ "workmail", "create-mobile-device-access-rule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-organization", function()
		local result = common.execute_aws_command_with_input({ "workmail", "create-organization" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-resource", function()
		local result = common.execute_aws_command_with_input({ "workmail", "create-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-user", function()
		local result = common.execute_aws_command_with_input({ "workmail", "create-user" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-access-control-rule", function()
		local result = common.execute_aws_command_with_input({ "workmail", "delete-access-control-rule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-alias", function()
		local result = common.execute_aws_command_with_input({ "workmail", "delete-alias" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-availability-configuration", function()
		local result = common.execute_aws_command_with_input({ "workmail", "delete-availability-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-email-monitoring-configuration", function()
		local result = common.execute_aws_command_with_input({ "workmail", "delete-email-monitoring-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-group", function()
		local result = common.execute_aws_command_with_input({ "workmail", "delete-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-identity-center-application", function()
		local result = common.execute_aws_command_with_input({ "workmail", "delete-identity-center-application" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-identity-provider-configuration", function()
		local result = common.execute_aws_command_with_input({ "workmail", "delete-identity-provider-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-impersonation-role", function()
		local result = common.execute_aws_command_with_input({ "workmail", "delete-impersonation-role" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-mailbox-permissions", function()
		local result = common.execute_aws_command_with_input({ "workmail", "delete-mailbox-permissions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-mobile-device-access-override", function()
		local result = common.execute_aws_command_with_input({ "workmail", "delete-mobile-device-access-override" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-mobile-device-access-rule", function()
		local result = common.execute_aws_command_with_input({ "workmail", "delete-mobile-device-access-rule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-organization", function()
		local result = common.execute_aws_command_with_input({ "workmail", "delete-organization" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-personal-access-token", function()
		local result = common.execute_aws_command_with_input({ "workmail", "delete-personal-access-token" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-resource", function()
		local result = common.execute_aws_command_with_input({ "workmail", "delete-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-retention-policy", function()
		local result = common.execute_aws_command_with_input({ "workmail", "delete-retention-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-user", function()
		local result = common.execute_aws_command_with_input({ "workmail", "delete-user" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for deregister-from-work-mail", function()
		local result = common.execute_aws_command_with_input({ "workmail", "deregister-from-work-mail" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for deregister-mail-domain", function()
		local result = common.execute_aws_command_with_input({ "workmail", "deregister-mail-domain" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-email-monitoring-configuration", function()
		local result = common.execute_aws_command_with_input({ "workmail", "describe-email-monitoring-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-entity", function()
		local result = common.execute_aws_command_with_input({ "workmail", "describe-entity" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-group", function()
		local result = common.execute_aws_command_with_input({ "workmail", "describe-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-identity-provider-configuration", function()
		local result = common.execute_aws_command_with_input({ "workmail", "describe-identity-provider-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-inbound-dmarc-settings", function()
		local result = common.execute_aws_command_with_input({ "workmail", "describe-inbound-dmarc-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-mailbox-export-job", function()
		local result = common.execute_aws_command_with_input({ "workmail", "describe-mailbox-export-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-organization", function()
		local result = common.execute_aws_command_with_input({ "workmail", "describe-organization" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-resource", function()
		local result = common.execute_aws_command_with_input({ "workmail", "describe-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-user", function()
		local result = common.execute_aws_command_with_input({ "workmail", "describe-user" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-delegate-from-resource", function()
		local result = common.execute_aws_command_with_input({ "workmail", "disassociate-delegate-from-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-member-from-group", function()
		local result = common.execute_aws_command_with_input({ "workmail", "disassociate-member-from-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-access-control-effect", function()
		local result = common.execute_aws_command_with_input({ "workmail", "get-access-control-effect" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-default-retention-policy", function()
		local result = common.execute_aws_command_with_input({ "workmail", "get-default-retention-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-impersonation-role", function()
		local result = common.execute_aws_command_with_input({ "workmail", "get-impersonation-role" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-impersonation-role-effect", function()
		local result = common.execute_aws_command_with_input({ "workmail", "get-impersonation-role-effect" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-mail-domain", function()
		local result = common.execute_aws_command_with_input({ "workmail", "get-mail-domain" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-mailbox-details", function()
		local result = common.execute_aws_command_with_input({ "workmail", "get-mailbox-details" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-mobile-device-access-effect", function()
		local result = common.execute_aws_command_with_input({ "workmail", "get-mobile-device-access-effect" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-mobile-device-access-override", function()
		local result = common.execute_aws_command_with_input({ "workmail", "get-mobile-device-access-override" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-personal-access-token-metadata", function()
		local result = common.execute_aws_command_with_input({ "workmail", "get-personal-access-token-metadata" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-access-control-rules", function()
		local result = common.execute_aws_command_with_input({ "workmail", "list-access-control-rules" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-aliases", function()
		local result = common.execute_aws_command_with_input({ "workmail", "list-aliases" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-availability-configurations", function()
		local result = common.execute_aws_command_with_input({ "workmail", "list-availability-configurations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-group-members", function()
		local result = common.execute_aws_command_with_input({ "workmail", "list-group-members" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-groups", function()
		local result = common.execute_aws_command_with_input({ "workmail", "list-groups" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-groups-for-entity", function()
		local result = common.execute_aws_command_with_input({ "workmail", "list-groups-for-entity" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-impersonation-roles", function()
		local result = common.execute_aws_command_with_input({ "workmail", "list-impersonation-roles" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-mail-domains", function()
		local result = common.execute_aws_command_with_input({ "workmail", "list-mail-domains" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-mailbox-export-jobs", function()
		local result = common.execute_aws_command_with_input({ "workmail", "list-mailbox-export-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-mailbox-permissions", function()
		local result = common.execute_aws_command_with_input({ "workmail", "list-mailbox-permissions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-mobile-device-access-overrides", function()
		local result = common.execute_aws_command_with_input({ "workmail", "list-mobile-device-access-overrides" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-mobile-device-access-rules", function()
		local result = common.execute_aws_command_with_input({ "workmail", "list-mobile-device-access-rules" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-organizations", function()
		local result = common.execute_aws_command_with_input({ "workmail", "list-organizations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-personal-access-tokens", function()
		local result = common.execute_aws_command_with_input({ "workmail", "list-personal-access-tokens" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-resource-delegates", function()
		local result = common.execute_aws_command_with_input({ "workmail", "list-resource-delegates" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-resources", function()
		local result = common.execute_aws_command_with_input({ "workmail", "list-resources" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "workmail", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-users", function()
		local result = common.execute_aws_command_with_input({ "workmail", "list-users" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-access-control-rule", function()
		local result = common.execute_aws_command_with_input({ "workmail", "put-access-control-rule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-email-monitoring-configuration", function()
		local result = common.execute_aws_command_with_input({ "workmail", "put-email-monitoring-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-identity-provider-configuration", function()
		local result = common.execute_aws_command_with_input({ "workmail", "put-identity-provider-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-inbound-dmarc-settings", function()
		local result = common.execute_aws_command_with_input({ "workmail", "put-inbound-dmarc-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-mailbox-permissions", function()
		local result = common.execute_aws_command_with_input({ "workmail", "put-mailbox-permissions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-mobile-device-access-override", function()
		local result = common.execute_aws_command_with_input({ "workmail", "put-mobile-device-access-override" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-retention-policy", function()
		local result = common.execute_aws_command_with_input({ "workmail", "put-retention-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for register-mail-domain", function()
		local result = common.execute_aws_command_with_input({ "workmail", "register-mail-domain" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for register-to-work-mail", function()
		local result = common.execute_aws_command_with_input({ "workmail", "register-to-work-mail" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for reset-password", function()
		local result = common.execute_aws_command_with_input({ "workmail", "reset-password" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-mailbox-export-job", function()
		local result = common.execute_aws_command_with_input({ "workmail", "start-mailbox-export-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "workmail", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for test-availability-configuration", function()
		local result = common.execute_aws_command_with_input({ "workmail", "test-availability-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "workmail", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-availability-configuration", function()
		local result = common.execute_aws_command_with_input({ "workmail", "update-availability-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-default-mail-domain", function()
		local result = common.execute_aws_command_with_input({ "workmail", "update-default-mail-domain" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-group", function()
		local result = common.execute_aws_command_with_input({ "workmail", "update-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-impersonation-role", function()
		local result = common.execute_aws_command_with_input({ "workmail", "update-impersonation-role" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-mailbox-quota", function()
		local result = common.execute_aws_command_with_input({ "workmail", "update-mailbox-quota" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-mobile-device-access-rule", function()
		local result = common.execute_aws_command_with_input({ "workmail", "update-mobile-device-access-rule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-primary-email-address", function()
		local result = common.execute_aws_command_with_input({ "workmail", "update-primary-email-address" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-resource", function()
		local result = common.execute_aws_command_with_input({ "workmail", "update-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-user", function()
		local result = common.execute_aws_command_with_input({ "workmail", "update-user" })
		assert.is_true(result.success)
	end)

end)