-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: connectcampaignsv2

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS connectcampaignsv2 service testing", function()
	it("should generate a cli skeleton for create-campaign", function()
		local result = common.execute_aws_command_with_input({ "connectcampaignsv2", "create-campaign" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-campaign", function()
		local result = common.execute_aws_command_with_input({ "connectcampaignsv2", "delete-campaign" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-campaign-channel-subtype-config", function()
		local result = common.execute_aws_command_with_input({ "connectcampaignsv2", "delete-campaign-channel-subtype-config" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-campaign-communication-limits", function()
		local result = common.execute_aws_command_with_input({ "connectcampaignsv2", "delete-campaign-communication-limits" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-campaign-communication-time", function()
		local result = common.execute_aws_command_with_input({ "connectcampaignsv2", "delete-campaign-communication-time" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-connect-instance-config", function()
		local result = common.execute_aws_command_with_input({ "connectcampaignsv2", "delete-connect-instance-config" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-connect-instance-integration", function()
		local result = common.execute_aws_command_with_input({ "connectcampaignsv2", "delete-connect-instance-integration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-instance-onboarding-job", function()
		local result = common.execute_aws_command_with_input({ "connectcampaignsv2", "delete-instance-onboarding-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-campaign", function()
		local result = common.execute_aws_command_with_input({ "connectcampaignsv2", "describe-campaign" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-campaign-state", function()
		local result = common.execute_aws_command_with_input({ "connectcampaignsv2", "get-campaign-state" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-campaign-state-batch", function()
		local result = common.execute_aws_command_with_input({ "connectcampaignsv2", "get-campaign-state-batch" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-connect-instance-config", function()
		local result = common.execute_aws_command_with_input({ "connectcampaignsv2", "get-connect-instance-config" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-instance-onboarding-job-status", function()
		local result = common.execute_aws_command_with_input({ "connectcampaignsv2", "get-instance-onboarding-job-status" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-campaigns", function()
		local result = common.execute_aws_command_with_input({ "connectcampaignsv2", "list-campaigns" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-connect-instance-integrations", function()
		local result = common.execute_aws_command_with_input({ "connectcampaignsv2", "list-connect-instance-integrations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "connectcampaignsv2", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for pause-campaign", function()
		local result = common.execute_aws_command_with_input({ "connectcampaignsv2", "pause-campaign" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-connect-instance-integration", function()
		local result = common.execute_aws_command_with_input({ "connectcampaignsv2", "put-connect-instance-integration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-outbound-request-batch", function()
		local result = common.execute_aws_command_with_input({ "connectcampaignsv2", "put-outbound-request-batch" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-profile-outbound-request-batch", function()
		local result = common.execute_aws_command_with_input({ "connectcampaignsv2", "put-profile-outbound-request-batch" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for resume-campaign", function()
		local result = common.execute_aws_command_with_input({ "connectcampaignsv2", "resume-campaign" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-campaign", function()
		local result = common.execute_aws_command_with_input({ "connectcampaignsv2", "start-campaign" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-instance-onboarding-job", function()
		local result = common.execute_aws_command_with_input({ "connectcampaignsv2", "start-instance-onboarding-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-campaign", function()
		local result = common.execute_aws_command_with_input({ "connectcampaignsv2", "stop-campaign" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "connectcampaignsv2", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "connectcampaignsv2", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-campaign-channel-subtype-config", function()
		local result = common.execute_aws_command_with_input({ "connectcampaignsv2", "update-campaign-channel-subtype-config" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-campaign-communication-limits", function()
		local result = common.execute_aws_command_with_input({ "connectcampaignsv2", "update-campaign-communication-limits" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-campaign-communication-time", function()
		local result = common.execute_aws_command_with_input({ "connectcampaignsv2", "update-campaign-communication-time" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-campaign-flow-association", function()
		local result = common.execute_aws_command_with_input({ "connectcampaignsv2", "update-campaign-flow-association" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-campaign-name", function()
		local result = common.execute_aws_command_with_input({ "connectcampaignsv2", "update-campaign-name" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-campaign-schedule", function()
		local result = common.execute_aws_command_with_input({ "connectcampaignsv2", "update-campaign-schedule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-campaign-source", function()
		local result = common.execute_aws_command_with_input({ "connectcampaignsv2", "update-campaign-source" })
		assert.is_true(result.success)
	end)

end)