-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: sagemaker-geospatial

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS sagemaker-geospatial service testing", function()
	it("should generate a cli skeleton for delete-earth-observation-job", function()
		local result = common.execute_aws_command_with_input({ "sagemaker-geospatial", "delete-earth-observation-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-vector-enrichment-job", function()
		local result = common.execute_aws_command_with_input({ "sagemaker-geospatial", "delete-vector-enrichment-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for export-earth-observation-job", function()
		local result = common.execute_aws_command_with_input({ "sagemaker-geospatial", "export-earth-observation-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for export-vector-enrichment-job", function()
		local result = common.execute_aws_command_with_input({ "sagemaker-geospatial", "export-vector-enrichment-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-earth-observation-job", function()
		local result = common.execute_aws_command_with_input({ "sagemaker-geospatial", "get-earth-observation-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-raster-data-collection", function()
		local result = common.execute_aws_command_with_input({ "sagemaker-geospatial", "get-raster-data-collection" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-tile", function()
		local result = common.execute_aws_command_with_input({ "sagemaker-geospatial", "get-tile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-vector-enrichment-job", function()
		local result = common.execute_aws_command_with_input({ "sagemaker-geospatial", "get-vector-enrichment-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-earth-observation-jobs", function()
		local result = common.execute_aws_command_with_input({ "sagemaker-geospatial", "list-earth-observation-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-raster-data-collections", function()
		local result = common.execute_aws_command_with_input({ "sagemaker-geospatial", "list-raster-data-collections" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "sagemaker-geospatial", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-vector-enrichment-jobs", function()
		local result = common.execute_aws_command_with_input({ "sagemaker-geospatial", "list-vector-enrichment-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for search-raster-data-collection", function()
		local result = common.execute_aws_command_with_input({ "sagemaker-geospatial", "search-raster-data-collection" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-earth-observation-job", function()
		local result = common.execute_aws_command_with_input({ "sagemaker-geospatial", "start-earth-observation-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-vector-enrichment-job", function()
		local result = common.execute_aws_command_with_input({ "sagemaker-geospatial", "start-vector-enrichment-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-earth-observation-job", function()
		local result = common.execute_aws_command_with_input({ "sagemaker-geospatial", "stop-earth-observation-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-vector-enrichment-job", function()
		local result = common.execute_aws_command_with_input({ "sagemaker-geospatial", "stop-vector-enrichment-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "sagemaker-geospatial", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "sagemaker-geospatial", "untag-resource" })
		assert.is_true(result.success)
	end)

end)