-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: emr

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS emr service testing", function()
	it("should generate a cli skeleton for add-instance-fleet", function()
		local result = common.execute_aws_command_with_input({ "emr", "add-instance-fleet" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for add-instance-groups", function()
		local result = common.execute_aws_command_with_input({ "emr", "add-instance-groups" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for add-job-flow-steps", function()
		local result = common.execute_aws_command_with_input({ "emr", "add-job-flow-steps" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for add-tags", function()
		local result = common.execute_aws_command_with_input({ "emr", "add-tags" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for cancel-steps", function()
		local result = common.execute_aws_command_with_input({ "emr", "cancel-steps" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-security-configuration", function()
		local result = common.execute_aws_command_with_input({ "emr", "create-security-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-studio", function()
		local result = common.execute_aws_command_with_input({ "emr", "create-studio" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-studio-session-mapping", function()
		local result = common.execute_aws_command_with_input({ "emr", "create-studio-session-mapping" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-security-configuration", function()
		local result = common.execute_aws_command_with_input({ "emr", "delete-security-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-studio", function()
		local result = common.execute_aws_command_with_input({ "emr", "delete-studio" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-studio-session-mapping", function()
		local result = common.execute_aws_command_with_input({ "emr", "delete-studio-session-mapping" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-cluster", function()
		local result = common.execute_aws_command_with_input({ "emr", "describe-cluster" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-job-flows", function()
		local result = common.execute_aws_command_with_input({ "emr", "describe-job-flows" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-notebook-execution", function()
		local result = common.execute_aws_command_with_input({ "emr", "describe-notebook-execution" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-release-label", function()
		local result = common.execute_aws_command_with_input({ "emr", "describe-release-label" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-security-configuration", function()
		local result = common.execute_aws_command_with_input({ "emr", "describe-security-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-step", function()
		local result = common.execute_aws_command_with_input({ "emr", "describe-step" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-studio", function()
		local result = common.execute_aws_command_with_input({ "emr", "describe-studio" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-auto-termination-policy", function()
		local result = common.execute_aws_command_with_input({ "emr", "get-auto-termination-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-block-public-access-configuration", function()
		local result = common.execute_aws_command_with_input({ "emr", "get-block-public-access-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-cluster-session-credentials", function()
		local result = common.execute_aws_command_with_input({ "emr", "get-cluster-session-credentials" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-managed-scaling-policy", function()
		local result = common.execute_aws_command_with_input({ "emr", "get-managed-scaling-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-studio-session-mapping", function()
		local result = common.execute_aws_command_with_input({ "emr", "get-studio-session-mapping" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-bootstrap-actions", function()
		local result = common.execute_aws_command_with_input({ "emr", "list-bootstrap-actions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-clusters", function()
		local result = common.execute_aws_command_with_input({ "emr", "list-clusters" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-instance-fleets", function()
		local result = common.execute_aws_command_with_input({ "emr", "list-instance-fleets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-instance-groups", function()
		local result = common.execute_aws_command_with_input({ "emr", "list-instance-groups" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-instances", function()
		local result = common.execute_aws_command_with_input({ "emr", "list-instances" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-notebook-executions", function()
		local result = common.execute_aws_command_with_input({ "emr", "list-notebook-executions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-release-labels", function()
		local result = common.execute_aws_command_with_input({ "emr", "list-release-labels" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-security-configurations", function()
		local result = common.execute_aws_command_with_input({ "emr", "list-security-configurations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-steps", function()
		local result = common.execute_aws_command_with_input({ "emr", "list-steps" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-studio-session-mappings", function()
		local result = common.execute_aws_command_with_input({ "emr", "list-studio-session-mappings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-studios", function()
		local result = common.execute_aws_command_with_input({ "emr", "list-studios" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-supported-instance-types", function()
		local result = common.execute_aws_command_with_input({ "emr", "list-supported-instance-types" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for modify-cluster", function()
		local result = common.execute_aws_command_with_input({ "emr", "modify-cluster" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for modify-instance-fleet", function()
		local result = common.execute_aws_command_with_input({ "emr", "modify-instance-fleet" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for modify-instance-groups", function()
		local result = common.execute_aws_command_with_input({ "emr", "modify-instance-groups" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-auto-scaling-policy", function()
		local result = common.execute_aws_command_with_input({ "emr", "put-auto-scaling-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-auto-termination-policy", function()
		local result = common.execute_aws_command_with_input({ "emr", "put-auto-termination-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-block-public-access-configuration", function()
		local result = common.execute_aws_command_with_input({ "emr", "put-block-public-access-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-managed-scaling-policy", function()
		local result = common.execute_aws_command_with_input({ "emr", "put-managed-scaling-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for remove-auto-scaling-policy", function()
		local result = common.execute_aws_command_with_input({ "emr", "remove-auto-scaling-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for remove-auto-termination-policy", function()
		local result = common.execute_aws_command_with_input({ "emr", "remove-auto-termination-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for remove-managed-scaling-policy", function()
		local result = common.execute_aws_command_with_input({ "emr", "remove-managed-scaling-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for remove-tags", function()
		local result = common.execute_aws_command_with_input({ "emr", "remove-tags" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for run-job-flow", function()
		local result = common.execute_aws_command_with_input({ "emr", "run-job-flow" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for set-keep-job-flow-alive-when-no-steps", function()
		local result = common.execute_aws_command_with_input({ "emr", "set-keep-job-flow-alive-when-no-steps" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for set-termination-protection", function()
		local result = common.execute_aws_command_with_input({ "emr", "set-termination-protection" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for set-unhealthy-node-replacement", function()
		local result = common.execute_aws_command_with_input({ "emr", "set-unhealthy-node-replacement" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for set-visible-to-all-users", function()
		local result = common.execute_aws_command_with_input({ "emr", "set-visible-to-all-users" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-notebook-execution", function()
		local result = common.execute_aws_command_with_input({ "emr", "start-notebook-execution" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-notebook-execution", function()
		local result = common.execute_aws_command_with_input({ "emr", "stop-notebook-execution" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for terminate-job-flows", function()
		local result = common.execute_aws_command_with_input({ "emr", "terminate-job-flows" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-studio", function()
		local result = common.execute_aws_command_with_input({ "emr", "update-studio" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-studio-session-mapping", function()
		local result = common.execute_aws_command_with_input({ "emr", "update-studio-session-mapping" })
		assert.is_true(result.success)
	end)

end)