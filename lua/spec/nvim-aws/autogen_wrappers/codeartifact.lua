-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: codeartifact

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS codeartifact service testing", function()
	it("should generate a cli skeleton for associate-external-connection", function()
		local result = common.execute_aws_command_with_input({ "codeartifact", "associate-external-connection" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for copy-package-versions", function()
		local result = common.execute_aws_command_with_input({ "codeartifact", "copy-package-versions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-domain", function()
		local result = common.execute_aws_command_with_input({ "codeartifact", "create-domain" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-package-group", function()
		local result = common.execute_aws_command_with_input({ "codeartifact", "create-package-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-repository", function()
		local result = common.execute_aws_command_with_input({ "codeartifact", "create-repository" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-domain", function()
		local result = common.execute_aws_command_with_input({ "codeartifact", "delete-domain" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-domain-permissions-policy", function()
		local result = common.execute_aws_command_with_input({ "codeartifact", "delete-domain-permissions-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-package", function()
		local result = common.execute_aws_command_with_input({ "codeartifact", "delete-package" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-package-group", function()
		local result = common.execute_aws_command_with_input({ "codeartifact", "delete-package-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-package-versions", function()
		local result = common.execute_aws_command_with_input({ "codeartifact", "delete-package-versions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-repository", function()
		local result = common.execute_aws_command_with_input({ "codeartifact", "delete-repository" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-repository-permissions-policy", function()
		local result = common.execute_aws_command_with_input({ "codeartifact", "delete-repository-permissions-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-domain", function()
		local result = common.execute_aws_command_with_input({ "codeartifact", "describe-domain" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-package", function()
		local result = common.execute_aws_command_with_input({ "codeartifact", "describe-package" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-package-group", function()
		local result = common.execute_aws_command_with_input({ "codeartifact", "describe-package-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-package-version", function()
		local result = common.execute_aws_command_with_input({ "codeartifact", "describe-package-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-repository", function()
		local result = common.execute_aws_command_with_input({ "codeartifact", "describe-repository" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-external-connection", function()
		local result = common.execute_aws_command_with_input({ "codeartifact", "disassociate-external-connection" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for dispose-package-versions", function()
		local result = common.execute_aws_command_with_input({ "codeartifact", "dispose-package-versions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-associated-package-group", function()
		local result = common.execute_aws_command_with_input({ "codeartifact", "get-associated-package-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-authorization-token", function()
		local result = common.execute_aws_command_with_input({ "codeartifact", "get-authorization-token" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-domain-permissions-policy", function()
		local result = common.execute_aws_command_with_input({ "codeartifact", "get-domain-permissions-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-package-version-asset", function()
		local result = common.execute_aws_command_with_input({ "codeartifact", "get-package-version-asset" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-package-version-readme", function()
		local result = common.execute_aws_command_with_input({ "codeartifact", "get-package-version-readme" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-repository-endpoint", function()
		local result = common.execute_aws_command_with_input({ "codeartifact", "get-repository-endpoint" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-repository-permissions-policy", function()
		local result = common.execute_aws_command_with_input({ "codeartifact", "get-repository-permissions-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-allowed-repositories-for-group", function()
		local result = common.execute_aws_command_with_input({ "codeartifact", "list-allowed-repositories-for-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-associated-packages", function()
		local result = common.execute_aws_command_with_input({ "codeartifact", "list-associated-packages" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-domains", function()
		local result = common.execute_aws_command_with_input({ "codeartifact", "list-domains" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-package-groups", function()
		local result = common.execute_aws_command_with_input({ "codeartifact", "list-package-groups" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-package-version-assets", function()
		local result = common.execute_aws_command_with_input({ "codeartifact", "list-package-version-assets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-package-version-dependencies", function()
		local result = common.execute_aws_command_with_input({ "codeartifact", "list-package-version-dependencies" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-package-versions", function()
		local result = common.execute_aws_command_with_input({ "codeartifact", "list-package-versions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-packages", function()
		local result = common.execute_aws_command_with_input({ "codeartifact", "list-packages" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-repositories", function()
		local result = common.execute_aws_command_with_input({ "codeartifact", "list-repositories" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-repositories-in-domain", function()
		local result = common.execute_aws_command_with_input({ "codeartifact", "list-repositories-in-domain" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-sub-package-groups", function()
		local result = common.execute_aws_command_with_input({ "codeartifact", "list-sub-package-groups" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "codeartifact", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for publish-package-version", function()
		local result = common.execute_aws_command_with_input({ "codeartifact", "publish-package-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-domain-permissions-policy", function()
		local result = common.execute_aws_command_with_input({ "codeartifact", "put-domain-permissions-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-package-origin-configuration", function()
		local result = common.execute_aws_command_with_input({ "codeartifact", "put-package-origin-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-repository-permissions-policy", function()
		local result = common.execute_aws_command_with_input({ "codeartifact", "put-repository-permissions-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "codeartifact", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "codeartifact", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-package-group", function()
		local result = common.execute_aws_command_with_input({ "codeartifact", "update-package-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-package-group-origin-configuration", function()
		local result = common.execute_aws_command_with_input({ "codeartifact", "update-package-group-origin-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-package-versions-status", function()
		local result = common.execute_aws_command_with_input({ "codeartifact", "update-package-versions-status" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-repository", function()
		local result = common.execute_aws_command_with_input({ "codeartifact", "update-repository" })
		assert.is_true(result.success)
	end)

end)