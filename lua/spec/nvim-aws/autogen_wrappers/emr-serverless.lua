-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: emr-serverless

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS emr-serverless service testing", function()
	it("should generate a cli skeleton for cancel-job-run", function()
		local result = common.execute_aws_command_with_input({ "emr-serverless", "cancel-job-run" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-application", function()
		local result = common.execute_aws_command_with_input({ "emr-serverless", "create-application" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-application", function()
		local result = common.execute_aws_command_with_input({ "emr-serverless", "delete-application" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-application", function()
		local result = common.execute_aws_command_with_input({ "emr-serverless", "get-application" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-dashboard-for-job-run", function()
		local result = common.execute_aws_command_with_input({ "emr-serverless", "get-dashboard-for-job-run" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-job-run", function()
		local result = common.execute_aws_command_with_input({ "emr-serverless", "get-job-run" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-applications", function()
		local result = common.execute_aws_command_with_input({ "emr-serverless", "list-applications" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-job-run-attempts", function()
		local result = common.execute_aws_command_with_input({ "emr-serverless", "list-job-run-attempts" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-job-runs", function()
		local result = common.execute_aws_command_with_input({ "emr-serverless", "list-job-runs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "emr-serverless", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-application", function()
		local result = common.execute_aws_command_with_input({ "emr-serverless", "start-application" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-job-run", function()
		local result = common.execute_aws_command_with_input({ "emr-serverless", "start-job-run" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-application", function()
		local result = common.execute_aws_command_with_input({ "emr-serverless", "stop-application" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "emr-serverless", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "emr-serverless", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-application", function()
		local result = common.execute_aws_command_with_input({ "emr-serverless", "update-application" })
		assert.is_true(result.success)
	end)

end)