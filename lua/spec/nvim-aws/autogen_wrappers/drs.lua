-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: drs

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS drs service testing", function()
	it("should generate a cli skeleton for associate-source-network-stack", function()
		local result = common.execute_aws_command_with_input({ "drs", "associate-source-network-stack" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-extended-source-server", function()
		local result = common.execute_aws_command_with_input({ "drs", "create-extended-source-server" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-launch-configuration-template", function()
		local result = common.execute_aws_command_with_input({ "drs", "create-launch-configuration-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-replication-configuration-template", function()
		local result = common.execute_aws_command_with_input({ "drs", "create-replication-configuration-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-source-network", function()
		local result = common.execute_aws_command_with_input({ "drs", "create-source-network" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-job", function()
		local result = common.execute_aws_command_with_input({ "drs", "delete-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-launch-action", function()
		local result = common.execute_aws_command_with_input({ "drs", "delete-launch-action" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-launch-configuration-template", function()
		local result = common.execute_aws_command_with_input({ "drs", "delete-launch-configuration-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-recovery-instance", function()
		local result = common.execute_aws_command_with_input({ "drs", "delete-recovery-instance" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-replication-configuration-template", function()
		local result = common.execute_aws_command_with_input({ "drs", "delete-replication-configuration-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-source-network", function()
		local result = common.execute_aws_command_with_input({ "drs", "delete-source-network" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-source-server", function()
		local result = common.execute_aws_command_with_input({ "drs", "delete-source-server" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-job-log-items", function()
		local result = common.execute_aws_command_with_input({ "drs", "describe-job-log-items" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-jobs", function()
		local result = common.execute_aws_command_with_input({ "drs", "describe-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-launch-configuration-templates", function()
		local result = common.execute_aws_command_with_input({ "drs", "describe-launch-configuration-templates" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-recovery-instances", function()
		local result = common.execute_aws_command_with_input({ "drs", "describe-recovery-instances" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-recovery-snapshots", function()
		local result = common.execute_aws_command_with_input({ "drs", "describe-recovery-snapshots" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-replication-configuration-templates", function()
		local result = common.execute_aws_command_with_input({ "drs", "describe-replication-configuration-templates" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-source-networks", function()
		local result = common.execute_aws_command_with_input({ "drs", "describe-source-networks" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-source-servers", function()
		local result = common.execute_aws_command_with_input({ "drs", "describe-source-servers" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disconnect-recovery-instance", function()
		local result = common.execute_aws_command_with_input({ "drs", "disconnect-recovery-instance" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disconnect-source-server", function()
		local result = common.execute_aws_command_with_input({ "drs", "disconnect-source-server" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for export-source-network-cfn-template", function()
		local result = common.execute_aws_command_with_input({ "drs", "export-source-network-cfn-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-failback-replication-configuration", function()
		local result = common.execute_aws_command_with_input({ "drs", "get-failback-replication-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-launch-configuration", function()
		local result = common.execute_aws_command_with_input({ "drs", "get-launch-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-replication-configuration", function()
		local result = common.execute_aws_command_with_input({ "drs", "get-replication-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for initialize-service", function()
		local result = common.execute_aws_command_with_input({ "drs", "initialize-service" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-extensible-source-servers", function()
		local result = common.execute_aws_command_with_input({ "drs", "list-extensible-source-servers" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-launch-actions", function()
		local result = common.execute_aws_command_with_input({ "drs", "list-launch-actions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-staging-accounts", function()
		local result = common.execute_aws_command_with_input({ "drs", "list-staging-accounts" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "drs", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-launch-action", function()
		local result = common.execute_aws_command_with_input({ "drs", "put-launch-action" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for retry-data-replication", function()
		local result = common.execute_aws_command_with_input({ "drs", "retry-data-replication" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for reverse-replication", function()
		local result = common.execute_aws_command_with_input({ "drs", "reverse-replication" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-replication", function()
		local result = common.execute_aws_command_with_input({ "drs", "start-replication" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-source-network-replication", function()
		local result = common.execute_aws_command_with_input({ "drs", "start-source-network-replication" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-failback", function()
		local result = common.execute_aws_command_with_input({ "drs", "stop-failback" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-replication", function()
		local result = common.execute_aws_command_with_input({ "drs", "stop-replication" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-source-network-replication", function()
		local result = common.execute_aws_command_with_input({ "drs", "stop-source-network-replication" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "drs", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "drs", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-failback-replication-configuration", function()
		local result = common.execute_aws_command_with_input({ "drs", "update-failback-replication-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-launch-configuration", function()
		local result = common.execute_aws_command_with_input({ "drs", "update-launch-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-launch-configuration-template", function()
		local result = common.execute_aws_command_with_input({ "drs", "update-launch-configuration-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-replication-configuration", function()
		local result = common.execute_aws_command_with_input({ "drs", "update-replication-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-replication-configuration-template", function()
		local result = common.execute_aws_command_with_input({ "drs", "update-replication-configuration-template" })
		assert.is_true(result.success)
	end)

end)