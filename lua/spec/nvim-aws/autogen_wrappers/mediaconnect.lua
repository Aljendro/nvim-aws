-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: mediaconnect

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS mediaconnect service testing", function()
	it("should generate a cli skeleton for add-bridge-outputs", function()
		local result = common.execute_aws_command_with_input({ "mediaconnect", "add-bridge-outputs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for add-bridge-sources", function()
		local result = common.execute_aws_command_with_input({ "mediaconnect", "add-bridge-sources" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for add-flow-media-streams", function()
		local result = common.execute_aws_command_with_input({ "mediaconnect", "add-flow-media-streams" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for add-flow-outputs", function()
		local result = common.execute_aws_command_with_input({ "mediaconnect", "add-flow-outputs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for add-flow-sources", function()
		local result = common.execute_aws_command_with_input({ "mediaconnect", "add-flow-sources" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for add-flow-vpc-interfaces", function()
		local result = common.execute_aws_command_with_input({ "mediaconnect", "add-flow-vpc-interfaces" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-bridge", function()
		local result = common.execute_aws_command_with_input({ "mediaconnect", "create-bridge" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-flow", function()
		local result = common.execute_aws_command_with_input({ "mediaconnect", "create-flow" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-gateway", function()
		local result = common.execute_aws_command_with_input({ "mediaconnect", "create-gateway" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-bridge", function()
		local result = common.execute_aws_command_with_input({ "mediaconnect", "delete-bridge" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-flow", function()
		local result = common.execute_aws_command_with_input({ "mediaconnect", "delete-flow" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-gateway", function()
		local result = common.execute_aws_command_with_input({ "mediaconnect", "delete-gateway" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for deregister-gateway-instance", function()
		local result = common.execute_aws_command_with_input({ "mediaconnect", "deregister-gateway-instance" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-bridge", function()
		local result = common.execute_aws_command_with_input({ "mediaconnect", "describe-bridge" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-flow", function()
		local result = common.execute_aws_command_with_input({ "mediaconnect", "describe-flow" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-flow-source-metadata", function()
		local result = common.execute_aws_command_with_input({ "mediaconnect", "describe-flow-source-metadata" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-flow-source-thumbnail", function()
		local result = common.execute_aws_command_with_input({ "mediaconnect", "describe-flow-source-thumbnail" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-gateway", function()
		local result = common.execute_aws_command_with_input({ "mediaconnect", "describe-gateway" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-gateway-instance", function()
		local result = common.execute_aws_command_with_input({ "mediaconnect", "describe-gateway-instance" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-offering", function()
		local result = common.execute_aws_command_with_input({ "mediaconnect", "describe-offering" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-reservation", function()
		local result = common.execute_aws_command_with_input({ "mediaconnect", "describe-reservation" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for grant-flow-entitlements", function()
		local result = common.execute_aws_command_with_input({ "mediaconnect", "grant-flow-entitlements" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-bridges", function()
		local result = common.execute_aws_command_with_input({ "mediaconnect", "list-bridges" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-entitlements", function()
		local result = common.execute_aws_command_with_input({ "mediaconnect", "list-entitlements" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-flows", function()
		local result = common.execute_aws_command_with_input({ "mediaconnect", "list-flows" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-gateway-instances", function()
		local result = common.execute_aws_command_with_input({ "mediaconnect", "list-gateway-instances" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-gateways", function()
		local result = common.execute_aws_command_with_input({ "mediaconnect", "list-gateways" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-offerings", function()
		local result = common.execute_aws_command_with_input({ "mediaconnect", "list-offerings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-reservations", function()
		local result = common.execute_aws_command_with_input({ "mediaconnect", "list-reservations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "mediaconnect", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for purchase-offering", function()
		local result = common.execute_aws_command_with_input({ "mediaconnect", "purchase-offering" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for remove-bridge-output", function()
		local result = common.execute_aws_command_with_input({ "mediaconnect", "remove-bridge-output" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for remove-bridge-source", function()
		local result = common.execute_aws_command_with_input({ "mediaconnect", "remove-bridge-source" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for remove-flow-media-stream", function()
		local result = common.execute_aws_command_with_input({ "mediaconnect", "remove-flow-media-stream" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for remove-flow-output", function()
		local result = common.execute_aws_command_with_input({ "mediaconnect", "remove-flow-output" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for remove-flow-source", function()
		local result = common.execute_aws_command_with_input({ "mediaconnect", "remove-flow-source" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for remove-flow-vpc-interface", function()
		local result = common.execute_aws_command_with_input({ "mediaconnect", "remove-flow-vpc-interface" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for revoke-flow-entitlement", function()
		local result = common.execute_aws_command_with_input({ "mediaconnect", "revoke-flow-entitlement" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-flow", function()
		local result = common.execute_aws_command_with_input({ "mediaconnect", "start-flow" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-flow", function()
		local result = common.execute_aws_command_with_input({ "mediaconnect", "stop-flow" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "mediaconnect", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "mediaconnect", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-bridge", function()
		local result = common.execute_aws_command_with_input({ "mediaconnect", "update-bridge" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-bridge-output", function()
		local result = common.execute_aws_command_with_input({ "mediaconnect", "update-bridge-output" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-bridge-source", function()
		local result = common.execute_aws_command_with_input({ "mediaconnect", "update-bridge-source" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-bridge-state", function()
		local result = common.execute_aws_command_with_input({ "mediaconnect", "update-bridge-state" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-flow", function()
		local result = common.execute_aws_command_with_input({ "mediaconnect", "update-flow" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-flow-entitlement", function()
		local result = common.execute_aws_command_with_input({ "mediaconnect", "update-flow-entitlement" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-flow-media-stream", function()
		local result = common.execute_aws_command_with_input({ "mediaconnect", "update-flow-media-stream" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-flow-output", function()
		local result = common.execute_aws_command_with_input({ "mediaconnect", "update-flow-output" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-flow-source", function()
		local result = common.execute_aws_command_with_input({ "mediaconnect", "update-flow-source" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-gateway-instance", function()
		local result = common.execute_aws_command_with_input({ "mediaconnect", "update-gateway-instance" })
		assert.is_true(result.success)
	end)

end)