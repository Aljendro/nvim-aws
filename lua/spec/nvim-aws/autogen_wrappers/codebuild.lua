-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: codebuild

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS codebuild service testing", function()
	it("should generate a cli skeleton for batch-delete-builds", function()
		local result = common.execute_aws_command_with_input({ "codebuild", "batch-delete-builds" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-get-build-batches", function()
		local result = common.execute_aws_command_with_input({ "codebuild", "batch-get-build-batches" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-get-builds", function()
		local result = common.execute_aws_command_with_input({ "codebuild", "batch-get-builds" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-get-command-executions", function()
		local result = common.execute_aws_command_with_input({ "codebuild", "batch-get-command-executions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-get-fleets", function()
		local result = common.execute_aws_command_with_input({ "codebuild", "batch-get-fleets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-get-projects", function()
		local result = common.execute_aws_command_with_input({ "codebuild", "batch-get-projects" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-get-report-groups", function()
		local result = common.execute_aws_command_with_input({ "codebuild", "batch-get-report-groups" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-get-reports", function()
		local result = common.execute_aws_command_with_input({ "codebuild", "batch-get-reports" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-get-sandboxes", function()
		local result = common.execute_aws_command_with_input({ "codebuild", "batch-get-sandboxes" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-fleet", function()
		local result = common.execute_aws_command_with_input({ "codebuild", "create-fleet" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-project", function()
		local result = common.execute_aws_command_with_input({ "codebuild", "create-project" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-report-group", function()
		local result = common.execute_aws_command_with_input({ "codebuild", "create-report-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-webhook", function()
		local result = common.execute_aws_command_with_input({ "codebuild", "create-webhook" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-build-batch", function()
		local result = common.execute_aws_command_with_input({ "codebuild", "delete-build-batch" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-fleet", function()
		local result = common.execute_aws_command_with_input({ "codebuild", "delete-fleet" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-project", function()
		local result = common.execute_aws_command_with_input({ "codebuild", "delete-project" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-report", function()
		local result = common.execute_aws_command_with_input({ "codebuild", "delete-report" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-report-group", function()
		local result = common.execute_aws_command_with_input({ "codebuild", "delete-report-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-resource-policy", function()
		local result = common.execute_aws_command_with_input({ "codebuild", "delete-resource-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-source-credentials", function()
		local result = common.execute_aws_command_with_input({ "codebuild", "delete-source-credentials" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-webhook", function()
		local result = common.execute_aws_command_with_input({ "codebuild", "delete-webhook" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-code-coverages", function()
		local result = common.execute_aws_command_with_input({ "codebuild", "describe-code-coverages" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-test-cases", function()
		local result = common.execute_aws_command_with_input({ "codebuild", "describe-test-cases" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-report-group-trend", function()
		local result = common.execute_aws_command_with_input({ "codebuild", "get-report-group-trend" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-resource-policy", function()
		local result = common.execute_aws_command_with_input({ "codebuild", "get-resource-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for import-source-credentials", function()
		local result = common.execute_aws_command_with_input({ "codebuild", "import-source-credentials" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for invalidate-project-cache", function()
		local result = common.execute_aws_command_with_input({ "codebuild", "invalidate-project-cache" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-build-batches", function()
		local result = common.execute_aws_command_with_input({ "codebuild", "list-build-batches" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-build-batches-for-project", function()
		local result = common.execute_aws_command_with_input({ "codebuild", "list-build-batches-for-project" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-builds", function()
		local result = common.execute_aws_command_with_input({ "codebuild", "list-builds" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-builds-for-project", function()
		local result = common.execute_aws_command_with_input({ "codebuild", "list-builds-for-project" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-command-executions-for-sandbox", function()
		local result = common.execute_aws_command_with_input({ "codebuild", "list-command-executions-for-sandbox" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-curated-environment-images", function()
		local result = common.execute_aws_command_with_input({ "codebuild", "list-curated-environment-images" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-fleets", function()
		local result = common.execute_aws_command_with_input({ "codebuild", "list-fleets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-projects", function()
		local result = common.execute_aws_command_with_input({ "codebuild", "list-projects" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-report-groups", function()
		local result = common.execute_aws_command_with_input({ "codebuild", "list-report-groups" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-reports", function()
		local result = common.execute_aws_command_with_input({ "codebuild", "list-reports" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-reports-for-report-group", function()
		local result = common.execute_aws_command_with_input({ "codebuild", "list-reports-for-report-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-sandboxes", function()
		local result = common.execute_aws_command_with_input({ "codebuild", "list-sandboxes" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-sandboxes-for-project", function()
		local result = common.execute_aws_command_with_input({ "codebuild", "list-sandboxes-for-project" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-shared-projects", function()
		local result = common.execute_aws_command_with_input({ "codebuild", "list-shared-projects" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-shared-report-groups", function()
		local result = common.execute_aws_command_with_input({ "codebuild", "list-shared-report-groups" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-source-credentials", function()
		local result = common.execute_aws_command_with_input({ "codebuild", "list-source-credentials" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-resource-policy", function()
		local result = common.execute_aws_command_with_input({ "codebuild", "put-resource-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for retry-build", function()
		local result = common.execute_aws_command_with_input({ "codebuild", "retry-build" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for retry-build-batch", function()
		local result = common.execute_aws_command_with_input({ "codebuild", "retry-build-batch" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-build", function()
		local result = common.execute_aws_command_with_input({ "codebuild", "start-build" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-build-batch", function()
		local result = common.execute_aws_command_with_input({ "codebuild", "start-build-batch" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-command-execution", function()
		local result = common.execute_aws_command_with_input({ "codebuild", "start-command-execution" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-sandbox", function()
		local result = common.execute_aws_command_with_input({ "codebuild", "start-sandbox" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-sandbox-connection", function()
		local result = common.execute_aws_command_with_input({ "codebuild", "start-sandbox-connection" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-build", function()
		local result = common.execute_aws_command_with_input({ "codebuild", "stop-build" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-build-batch", function()
		local result = common.execute_aws_command_with_input({ "codebuild", "stop-build-batch" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-sandbox", function()
		local result = common.execute_aws_command_with_input({ "codebuild", "stop-sandbox" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-fleet", function()
		local result = common.execute_aws_command_with_input({ "codebuild", "update-fleet" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-project", function()
		local result = common.execute_aws_command_with_input({ "codebuild", "update-project" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-project-visibility", function()
		local result = common.execute_aws_command_with_input({ "codebuild", "update-project-visibility" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-report-group", function()
		local result = common.execute_aws_command_with_input({ "codebuild", "update-report-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-webhook", function()
		local result = common.execute_aws_command_with_input({ "codebuild", "update-webhook" })
		assert.is_true(result.success)
	end)

end)