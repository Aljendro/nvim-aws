-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: fis

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS fis service testing", function()
	it("should generate a cli skeleton for create-experiment-template", function()
		local result = common.execute_aws_command_with_input({ "fis", "create-experiment-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-target-account-configuration", function()
		local result = common.execute_aws_command_with_input({ "fis", "create-target-account-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-experiment-template", function()
		local result = common.execute_aws_command_with_input({ "fis", "delete-experiment-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-target-account-configuration", function()
		local result = common.execute_aws_command_with_input({ "fis", "delete-target-account-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-action", function()
		local result = common.execute_aws_command_with_input({ "fis", "get-action" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-experiment", function()
		local result = common.execute_aws_command_with_input({ "fis", "get-experiment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-experiment-target-account-configuration", function()
		local result = common.execute_aws_command_with_input({ "fis", "get-experiment-target-account-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-experiment-template", function()
		local result = common.execute_aws_command_with_input({ "fis", "get-experiment-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-safety-lever", function()
		local result = common.execute_aws_command_with_input({ "fis", "get-safety-lever" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-target-account-configuration", function()
		local result = common.execute_aws_command_with_input({ "fis", "get-target-account-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-target-resource-type", function()
		local result = common.execute_aws_command_with_input({ "fis", "get-target-resource-type" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-actions", function()
		local result = common.execute_aws_command_with_input({ "fis", "list-actions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-experiment-resolved-targets", function()
		local result = common.execute_aws_command_with_input({ "fis", "list-experiment-resolved-targets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-experiment-target-account-configurations", function()
		local result = common.execute_aws_command_with_input({ "fis", "list-experiment-target-account-configurations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-experiment-templates", function()
		local result = common.execute_aws_command_with_input({ "fis", "list-experiment-templates" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-experiments", function()
		local result = common.execute_aws_command_with_input({ "fis", "list-experiments" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "fis", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-target-account-configurations", function()
		local result = common.execute_aws_command_with_input({ "fis", "list-target-account-configurations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-target-resource-types", function()
		local result = common.execute_aws_command_with_input({ "fis", "list-target-resource-types" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-experiment", function()
		local result = common.execute_aws_command_with_input({ "fis", "start-experiment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-experiment", function()
		local result = common.execute_aws_command_with_input({ "fis", "stop-experiment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "fis", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "fis", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-experiment-template", function()
		local result = common.execute_aws_command_with_input({ "fis", "update-experiment-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-safety-lever-state", function()
		local result = common.execute_aws_command_with_input({ "fis", "update-safety-lever-state" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-target-account-configuration", function()
		local result = common.execute_aws_command_with_input({ "fis", "update-target-account-configuration" })
		assert.is_true(result.success)
	end)

end)