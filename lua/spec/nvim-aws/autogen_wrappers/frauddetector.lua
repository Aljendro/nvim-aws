-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: frauddetector

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS frauddetector service testing", function()
	it("should generate a cli skeleton for batch-create-variable", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "batch-create-variable" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-get-variable", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "batch-get-variable" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for cancel-batch-import-job", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "cancel-batch-import-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for cancel-batch-prediction-job", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "cancel-batch-prediction-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-batch-import-job", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "create-batch-import-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-batch-prediction-job", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "create-batch-prediction-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-detector-version", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "create-detector-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-list", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "create-list" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-model", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "create-model" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-model-version", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "create-model-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-rule", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "create-rule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-variable", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "create-variable" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-batch-import-job", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "delete-batch-import-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-batch-prediction-job", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "delete-batch-prediction-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-detector", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "delete-detector" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-detector-version", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "delete-detector-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-entity-type", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "delete-entity-type" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-event", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "delete-event" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-event-type", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "delete-event-type" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-events-by-event-type", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "delete-events-by-event-type" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-external-model", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "delete-external-model" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-label", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "delete-label" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-list", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "delete-list" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-model", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "delete-model" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-model-version", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "delete-model-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-outcome", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "delete-outcome" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-rule", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "delete-rule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-variable", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "delete-variable" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-detector", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "describe-detector" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-model-versions", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "describe-model-versions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-batch-import-jobs", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "get-batch-import-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-batch-prediction-jobs", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "get-batch-prediction-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-delete-events-by-event-type-status", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "get-delete-events-by-event-type-status" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-detector-version", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "get-detector-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-detectors", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "get-detectors" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-entity-types", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "get-entity-types" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-event", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "get-event" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-event-prediction", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "get-event-prediction" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-event-prediction-metadata", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "get-event-prediction-metadata" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-event-types", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "get-event-types" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-external-models", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "get-external-models" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-kms-encryption-key", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "get-kms-encryption-key" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-labels", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "get-labels" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-list-elements", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "get-list-elements" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-lists-metadata", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "get-lists-metadata" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-model-version", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "get-model-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-models", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "get-models" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-outcomes", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "get-outcomes" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-rules", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "get-rules" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-variables", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "get-variables" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-event-predictions", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "list-event-predictions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-detector", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "put-detector" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-entity-type", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "put-entity-type" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-event-type", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "put-event-type" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-external-model", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "put-external-model" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-kms-encryption-key", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "put-kms-encryption-key" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-label", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "put-label" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-outcome", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "put-outcome" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for send-event", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "send-event" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-detector-version", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "update-detector-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-detector-version-metadata", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "update-detector-version-metadata" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-detector-version-status", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "update-detector-version-status" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-event-label", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "update-event-label" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-list", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "update-list" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-model", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "update-model" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-model-version", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "update-model-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-model-version-status", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "update-model-version-status" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-rule-metadata", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "update-rule-metadata" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-rule-version", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "update-rule-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-variable", function()
		local result = common.execute_aws_command_with_input({ "frauddetector", "update-variable" })
		assert.is_true(result.success)
	end)

end)