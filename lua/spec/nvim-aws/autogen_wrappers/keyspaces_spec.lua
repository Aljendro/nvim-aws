-- AUTOGENERATED FILE - DO NOT EDIT
-- AWS Service: keyspaces

require("nvim-aws").setup()
local service = require("nvim-aws.autogen_wrappers.keyspaces")

describe("AWS keyspaces service testing", function()
	it("should generate a cli skeleton with create_keyspace", function()
		local result = service.create_keyspace()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with create_table", function()
		local result = service.create_table()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with create_type", function()
		local result = service.create_type()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with delete_keyspace", function()
		local result = service.delete_keyspace()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with delete_table", function()
		local result = service.delete_table()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with delete_type", function()
		local result = service.delete_type()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_keyspace", function()
		local result = service.get_keyspace()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_table", function()
		local result = service.get_table()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_table_auto_scaling_settings", function()
		local result = service.get_table_auto_scaling_settings()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_type", function()
		local result = service.get_type()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_keyspaces", function()
		local result = service.list_keyspaces()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_tables", function()
		local result = service.list_tables()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_tags_for_resource", function()
		local result = service.list_tags_for_resource()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_types", function()
		local result = service.list_types()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with restore_table", function()
		local result = service.restore_table()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with tag_resource", function()
		local result = service.tag_resource()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with untag_resource", function()
		local result = service.untag_resource()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with update_keyspace", function()
		local result = service.update_keyspace()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with update_table", function()
		local result = service.update_table()
		assert.is_true(result.success)
	end)

end)