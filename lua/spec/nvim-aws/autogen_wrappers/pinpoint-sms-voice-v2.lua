-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: pinpoint-sms-voice-v2

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS pinpoint-sms-voice-v2 service testing", function()
	it("should generate a cli skeleton for associate-origination-identity", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "associate-origination-identity" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for associate-protect-configuration", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "associate-protect-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-configuration-set", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "create-configuration-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-event-destination", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "create-event-destination" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-opt-out-list", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "create-opt-out-list" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-pool", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "create-pool" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-protect-configuration", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "create-protect-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-registration", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "create-registration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-registration-association", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "create-registration-association" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-registration-attachment", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "create-registration-attachment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-registration-version", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "create-registration-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-verified-destination-number", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "create-verified-destination-number" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-account-default-protect-configuration", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "delete-account-default-protect-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-configuration-set", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "delete-configuration-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-default-message-type", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "delete-default-message-type" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-default-sender-id", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "delete-default-sender-id" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-event-destination", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "delete-event-destination" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-keyword", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "delete-keyword" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-media-message-spend-limit-override", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "delete-media-message-spend-limit-override" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-opt-out-list", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "delete-opt-out-list" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-opted-out-number", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "delete-opted-out-number" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-pool", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "delete-pool" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-protect-configuration", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "delete-protect-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-protect-configuration-rule-set-number-override", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "delete-protect-configuration-rule-set-number-override" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-registration", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "delete-registration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-registration-attachment", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "delete-registration-attachment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-registration-field-value", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "delete-registration-field-value" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-resource-policy", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "delete-resource-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-text-message-spend-limit-override", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "delete-text-message-spend-limit-override" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-verified-destination-number", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "delete-verified-destination-number" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-voice-message-spend-limit-override", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "delete-voice-message-spend-limit-override" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-account-attributes", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "describe-account-attributes" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-account-limits", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "describe-account-limits" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-configuration-sets", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "describe-configuration-sets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-keywords", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "describe-keywords" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-opt-out-lists", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "describe-opt-out-lists" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-opted-out-numbers", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "describe-opted-out-numbers" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-phone-numbers", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "describe-phone-numbers" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-pools", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "describe-pools" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-protect-configurations", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "describe-protect-configurations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-registration-attachments", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "describe-registration-attachments" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-registration-field-definitions", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "describe-registration-field-definitions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-registration-field-values", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "describe-registration-field-values" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-registration-section-definitions", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "describe-registration-section-definitions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-registration-type-definitions", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "describe-registration-type-definitions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-registration-versions", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "describe-registration-versions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-registrations", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "describe-registrations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-sender-ids", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "describe-sender-ids" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-spend-limits", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "describe-spend-limits" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-verified-destination-numbers", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "describe-verified-destination-numbers" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-origination-identity", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "disassociate-origination-identity" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-protect-configuration", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "disassociate-protect-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for discard-registration-version", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "discard-registration-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-protect-configuration-country-rule-set", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "get-protect-configuration-country-rule-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-resource-policy", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "get-resource-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-pool-origination-identities", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "list-pool-origination-identities" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-protect-configuration-rule-set-number-overrides", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "list-protect-configuration-rule-set-number-overrides" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-registration-associations", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "list-registration-associations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-keyword", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "put-keyword" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-message-feedback", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "put-message-feedback" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-opted-out-number", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "put-opted-out-number" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-protect-configuration-rule-set-number-override", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "put-protect-configuration-rule-set-number-override" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-registration-field-value", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "put-registration-field-value" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-resource-policy", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "put-resource-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for release-phone-number", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "release-phone-number" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for release-sender-id", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "release-sender-id" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for request-phone-number", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "request-phone-number" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for request-sender-id", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "request-sender-id" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for send-destination-number-verification-code", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "send-destination-number-verification-code" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for send-media-message", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "send-media-message" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for send-text-message", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "send-text-message" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for send-voice-message", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "send-voice-message" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for set-account-default-protect-configuration", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "set-account-default-protect-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for set-default-message-feedback-enabled", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "set-default-message-feedback-enabled" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for set-default-message-type", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "set-default-message-type" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for set-default-sender-id", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "set-default-sender-id" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for set-media-message-spend-limit-override", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "set-media-message-spend-limit-override" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for set-text-message-spend-limit-override", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "set-text-message-spend-limit-override" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for set-voice-message-spend-limit-override", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "set-voice-message-spend-limit-override" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for submit-registration-version", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "submit-registration-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-event-destination", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "update-event-destination" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-phone-number", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "update-phone-number" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-pool", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "update-pool" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-protect-configuration", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "update-protect-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-protect-configuration-country-rule-set", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "update-protect-configuration-country-rule-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-sender-id", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "update-sender-id" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for verify-destination-number", function()
		local result = common.execute_aws_command_with_input({ "pinpoint-sms-voice-v2", "verify-destination-number" })
		assert.is_true(result.success)
	end)

end)