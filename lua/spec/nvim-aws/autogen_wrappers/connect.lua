-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: connect

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS connect service testing", function()
	it("should generate a cli skeleton for activate-evaluation-form", function()
		local result = common.execute_aws_command_with_input({ "connect", "activate-evaluation-form" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for associate-analytics-data-set", function()
		local result = common.execute_aws_command_with_input({ "connect", "associate-analytics-data-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for associate-approved-origin", function()
		local result = common.execute_aws_command_with_input({ "connect", "associate-approved-origin" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for associate-bot", function()
		local result = common.execute_aws_command_with_input({ "connect", "associate-bot" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for associate-default-vocabulary", function()
		local result = common.execute_aws_command_with_input({ "connect", "associate-default-vocabulary" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for associate-flow", function()
		local result = common.execute_aws_command_with_input({ "connect", "associate-flow" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for associate-instance-storage-config", function()
		local result = common.execute_aws_command_with_input({ "connect", "associate-instance-storage-config" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for associate-lambda-function", function()
		local result = common.execute_aws_command_with_input({ "connect", "associate-lambda-function" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for associate-lex-bot", function()
		local result = common.execute_aws_command_with_input({ "connect", "associate-lex-bot" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for associate-phone-number-contact-flow", function()
		local result = common.execute_aws_command_with_input({ "connect", "associate-phone-number-contact-flow" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for associate-queue-quick-connects", function()
		local result = common.execute_aws_command_with_input({ "connect", "associate-queue-quick-connects" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for associate-routing-profile-queues", function()
		local result = common.execute_aws_command_with_input({ "connect", "associate-routing-profile-queues" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for associate-security-key", function()
		local result = common.execute_aws_command_with_input({ "connect", "associate-security-key" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for associate-traffic-distribution-group-user", function()
		local result = common.execute_aws_command_with_input({ "connect", "associate-traffic-distribution-group-user" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for associate-user-proficiencies", function()
		local result = common.execute_aws_command_with_input({ "connect", "associate-user-proficiencies" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-associate-analytics-data-set", function()
		local result = common.execute_aws_command_with_input({ "connect", "batch-associate-analytics-data-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-disassociate-analytics-data-set", function()
		local result = common.execute_aws_command_with_input({ "connect", "batch-disassociate-analytics-data-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-get-attached-file-metadata", function()
		local result = common.execute_aws_command_with_input({ "connect", "batch-get-attached-file-metadata" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-get-flow-association", function()
		local result = common.execute_aws_command_with_input({ "connect", "batch-get-flow-association" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-put-contact", function()
		local result = common.execute_aws_command_with_input({ "connect", "batch-put-contact" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for claim-phone-number", function()
		local result = common.execute_aws_command_with_input({ "connect", "claim-phone-number" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for complete-attached-file-upload", function()
		local result = common.execute_aws_command_with_input({ "connect", "complete-attached-file-upload" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-agent-status", function()
		local result = common.execute_aws_command_with_input({ "connect", "create-agent-status" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-contact", function()
		local result = common.execute_aws_command_with_input({ "connect", "create-contact" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-contact-flow", function()
		local result = common.execute_aws_command_with_input({ "connect", "create-contact-flow" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-contact-flow-module", function()
		local result = common.execute_aws_command_with_input({ "connect", "create-contact-flow-module" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-contact-flow-version", function()
		local result = common.execute_aws_command_with_input({ "connect", "create-contact-flow-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-email-address", function()
		local result = common.execute_aws_command_with_input({ "connect", "create-email-address" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-evaluation-form", function()
		local result = common.execute_aws_command_with_input({ "connect", "create-evaluation-form" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-hours-of-operation", function()
		local result = common.execute_aws_command_with_input({ "connect", "create-hours-of-operation" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-hours-of-operation-override", function()
		local result = common.execute_aws_command_with_input({ "connect", "create-hours-of-operation-override" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-instance", function()
		local result = common.execute_aws_command_with_input({ "connect", "create-instance" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-integration-association", function()
		local result = common.execute_aws_command_with_input({ "connect", "create-integration-association" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-participant", function()
		local result = common.execute_aws_command_with_input({ "connect", "create-participant" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-persistent-contact-association", function()
		local result = common.execute_aws_command_with_input({ "connect", "create-persistent-contact-association" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-predefined-attribute", function()
		local result = common.execute_aws_command_with_input({ "connect", "create-predefined-attribute" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-prompt", function()
		local result = common.execute_aws_command_with_input({ "connect", "create-prompt" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-push-notification-registration", function()
		local result = common.execute_aws_command_with_input({ "connect", "create-push-notification-registration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-queue", function()
		local result = common.execute_aws_command_with_input({ "connect", "create-queue" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-quick-connect", function()
		local result = common.execute_aws_command_with_input({ "connect", "create-quick-connect" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-routing-profile", function()
		local result = common.execute_aws_command_with_input({ "connect", "create-routing-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-rule", function()
		local result = common.execute_aws_command_with_input({ "connect", "create-rule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-security-profile", function()
		local result = common.execute_aws_command_with_input({ "connect", "create-security-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-task-template", function()
		local result = common.execute_aws_command_with_input({ "connect", "create-task-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-traffic-distribution-group", function()
		local result = common.execute_aws_command_with_input({ "connect", "create-traffic-distribution-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-use-case", function()
		local result = common.execute_aws_command_with_input({ "connect", "create-use-case" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-user", function()
		local result = common.execute_aws_command_with_input({ "connect", "create-user" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-user-hierarchy-group", function()
		local result = common.execute_aws_command_with_input({ "connect", "create-user-hierarchy-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-view", function()
		local result = common.execute_aws_command_with_input({ "connect", "create-view" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-view-version", function()
		local result = common.execute_aws_command_with_input({ "connect", "create-view-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-vocabulary", function()
		local result = common.execute_aws_command_with_input({ "connect", "create-vocabulary" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for deactivate-evaluation-form", function()
		local result = common.execute_aws_command_with_input({ "connect", "deactivate-evaluation-form" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-attached-file", function()
		local result = common.execute_aws_command_with_input({ "connect", "delete-attached-file" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-contact-evaluation", function()
		local result = common.execute_aws_command_with_input({ "connect", "delete-contact-evaluation" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-contact-flow", function()
		local result = common.execute_aws_command_with_input({ "connect", "delete-contact-flow" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-contact-flow-module", function()
		local result = common.execute_aws_command_with_input({ "connect", "delete-contact-flow-module" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-contact-flow-version", function()
		local result = common.execute_aws_command_with_input({ "connect", "delete-contact-flow-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-email-address", function()
		local result = common.execute_aws_command_with_input({ "connect", "delete-email-address" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-evaluation-form", function()
		local result = common.execute_aws_command_with_input({ "connect", "delete-evaluation-form" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-hours-of-operation", function()
		local result = common.execute_aws_command_with_input({ "connect", "delete-hours-of-operation" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-hours-of-operation-override", function()
		local result = common.execute_aws_command_with_input({ "connect", "delete-hours-of-operation-override" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-instance", function()
		local result = common.execute_aws_command_with_input({ "connect", "delete-instance" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-integration-association", function()
		local result = common.execute_aws_command_with_input({ "connect", "delete-integration-association" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-predefined-attribute", function()
		local result = common.execute_aws_command_with_input({ "connect", "delete-predefined-attribute" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-prompt", function()
		local result = common.execute_aws_command_with_input({ "connect", "delete-prompt" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-push-notification-registration", function()
		local result = common.execute_aws_command_with_input({ "connect", "delete-push-notification-registration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-queue", function()
		local result = common.execute_aws_command_with_input({ "connect", "delete-queue" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-quick-connect", function()
		local result = common.execute_aws_command_with_input({ "connect", "delete-quick-connect" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-routing-profile", function()
		local result = common.execute_aws_command_with_input({ "connect", "delete-routing-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-rule", function()
		local result = common.execute_aws_command_with_input({ "connect", "delete-rule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-security-profile", function()
		local result = common.execute_aws_command_with_input({ "connect", "delete-security-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-task-template", function()
		local result = common.execute_aws_command_with_input({ "connect", "delete-task-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-traffic-distribution-group", function()
		local result = common.execute_aws_command_with_input({ "connect", "delete-traffic-distribution-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-use-case", function()
		local result = common.execute_aws_command_with_input({ "connect", "delete-use-case" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-user", function()
		local result = common.execute_aws_command_with_input({ "connect", "delete-user" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-user-hierarchy-group", function()
		local result = common.execute_aws_command_with_input({ "connect", "delete-user-hierarchy-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-view", function()
		local result = common.execute_aws_command_with_input({ "connect", "delete-view" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-view-version", function()
		local result = common.execute_aws_command_with_input({ "connect", "delete-view-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-vocabulary", function()
		local result = common.execute_aws_command_with_input({ "connect", "delete-vocabulary" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-agent-status", function()
		local result = common.execute_aws_command_with_input({ "connect", "describe-agent-status" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-authentication-profile", function()
		local result = common.execute_aws_command_with_input({ "connect", "describe-authentication-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-contact", function()
		local result = common.execute_aws_command_with_input({ "connect", "describe-contact" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-contact-evaluation", function()
		local result = common.execute_aws_command_with_input({ "connect", "describe-contact-evaluation" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-contact-flow", function()
		local result = common.execute_aws_command_with_input({ "connect", "describe-contact-flow" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-contact-flow-module", function()
		local result = common.execute_aws_command_with_input({ "connect", "describe-contact-flow-module" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-email-address", function()
		local result = common.execute_aws_command_with_input({ "connect", "describe-email-address" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-evaluation-form", function()
		local result = common.execute_aws_command_with_input({ "connect", "describe-evaluation-form" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-hours-of-operation", function()
		local result = common.execute_aws_command_with_input({ "connect", "describe-hours-of-operation" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-hours-of-operation-override", function()
		local result = common.execute_aws_command_with_input({ "connect", "describe-hours-of-operation-override" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-instance", function()
		local result = common.execute_aws_command_with_input({ "connect", "describe-instance" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-instance-attribute", function()
		local result = common.execute_aws_command_with_input({ "connect", "describe-instance-attribute" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-instance-storage-config", function()
		local result = common.execute_aws_command_with_input({ "connect", "describe-instance-storage-config" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-phone-number", function()
		local result = common.execute_aws_command_with_input({ "connect", "describe-phone-number" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-predefined-attribute", function()
		local result = common.execute_aws_command_with_input({ "connect", "describe-predefined-attribute" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-prompt", function()
		local result = common.execute_aws_command_with_input({ "connect", "describe-prompt" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-queue", function()
		local result = common.execute_aws_command_with_input({ "connect", "describe-queue" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-quick-connect", function()
		local result = common.execute_aws_command_with_input({ "connect", "describe-quick-connect" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-routing-profile", function()
		local result = common.execute_aws_command_with_input({ "connect", "describe-routing-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-rule", function()
		local result = common.execute_aws_command_with_input({ "connect", "describe-rule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-security-profile", function()
		local result = common.execute_aws_command_with_input({ "connect", "describe-security-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-traffic-distribution-group", function()
		local result = common.execute_aws_command_with_input({ "connect", "describe-traffic-distribution-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-user", function()
		local result = common.execute_aws_command_with_input({ "connect", "describe-user" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-user-hierarchy-group", function()
		local result = common.execute_aws_command_with_input({ "connect", "describe-user-hierarchy-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-user-hierarchy-structure", function()
		local result = common.execute_aws_command_with_input({ "connect", "describe-user-hierarchy-structure" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-view", function()
		local result = common.execute_aws_command_with_input({ "connect", "describe-view" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-vocabulary", function()
		local result = common.execute_aws_command_with_input({ "connect", "describe-vocabulary" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-analytics-data-set", function()
		local result = common.execute_aws_command_with_input({ "connect", "disassociate-analytics-data-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-approved-origin", function()
		local result = common.execute_aws_command_with_input({ "connect", "disassociate-approved-origin" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-bot", function()
		local result = common.execute_aws_command_with_input({ "connect", "disassociate-bot" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-flow", function()
		local result = common.execute_aws_command_with_input({ "connect", "disassociate-flow" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-instance-storage-config", function()
		local result = common.execute_aws_command_with_input({ "connect", "disassociate-instance-storage-config" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-lambda-function", function()
		local result = common.execute_aws_command_with_input({ "connect", "disassociate-lambda-function" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-lex-bot", function()
		local result = common.execute_aws_command_with_input({ "connect", "disassociate-lex-bot" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-phone-number-contact-flow", function()
		local result = common.execute_aws_command_with_input({ "connect", "disassociate-phone-number-contact-flow" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-queue-quick-connects", function()
		local result = common.execute_aws_command_with_input({ "connect", "disassociate-queue-quick-connects" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-routing-profile-queues", function()
		local result = common.execute_aws_command_with_input({ "connect", "disassociate-routing-profile-queues" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-security-key", function()
		local result = common.execute_aws_command_with_input({ "connect", "disassociate-security-key" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-traffic-distribution-group-user", function()
		local result = common.execute_aws_command_with_input({ "connect", "disassociate-traffic-distribution-group-user" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-user-proficiencies", function()
		local result = common.execute_aws_command_with_input({ "connect", "disassociate-user-proficiencies" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for dismiss-user-contact", function()
		local result = common.execute_aws_command_with_input({ "connect", "dismiss-user-contact" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-attached-file", function()
		local result = common.execute_aws_command_with_input({ "connect", "get-attached-file" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-contact-attributes", function()
		local result = common.execute_aws_command_with_input({ "connect", "get-contact-attributes" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-current-metric-data", function()
		local result = common.execute_aws_command_with_input({ "connect", "get-current-metric-data" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-current-user-data", function()
		local result = common.execute_aws_command_with_input({ "connect", "get-current-user-data" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-effective-hours-of-operations", function()
		local result = common.execute_aws_command_with_input({ "connect", "get-effective-hours-of-operations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-federation-token", function()
		local result = common.execute_aws_command_with_input({ "connect", "get-federation-token" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-flow-association", function()
		local result = common.execute_aws_command_with_input({ "connect", "get-flow-association" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-metric-data", function()
		local result = common.execute_aws_command_with_input({ "connect", "get-metric-data" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-metric-data-v2", function()
		local result = common.execute_aws_command_with_input({ "connect", "get-metric-data-v2" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-prompt-file", function()
		local result = common.execute_aws_command_with_input({ "connect", "get-prompt-file" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-task-template", function()
		local result = common.execute_aws_command_with_input({ "connect", "get-task-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-traffic-distribution", function()
		local result = common.execute_aws_command_with_input({ "connect", "get-traffic-distribution" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for import-phone-number", function()
		local result = common.execute_aws_command_with_input({ "connect", "import-phone-number" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-agent-statuses", function()
		local result = common.execute_aws_command_with_input({ "connect", "list-agent-statuses" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-analytics-data-associations", function()
		local result = common.execute_aws_command_with_input({ "connect", "list-analytics-data-associations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-analytics-data-lake-data-sets", function()
		local result = common.execute_aws_command_with_input({ "connect", "list-analytics-data-lake-data-sets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-approved-origins", function()
		local result = common.execute_aws_command_with_input({ "connect", "list-approved-origins" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-associated-contacts", function()
		local result = common.execute_aws_command_with_input({ "connect", "list-associated-contacts" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-authentication-profiles", function()
		local result = common.execute_aws_command_with_input({ "connect", "list-authentication-profiles" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-bots", function()
		local result = common.execute_aws_command_with_input({ "connect", "list-bots" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-contact-evaluations", function()
		local result = common.execute_aws_command_with_input({ "connect", "list-contact-evaluations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-contact-flow-modules", function()
		local result = common.execute_aws_command_with_input({ "connect", "list-contact-flow-modules" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-contact-flow-versions", function()
		local result = common.execute_aws_command_with_input({ "connect", "list-contact-flow-versions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-contact-flows", function()
		local result = common.execute_aws_command_with_input({ "connect", "list-contact-flows" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-contact-references", function()
		local result = common.execute_aws_command_with_input({ "connect", "list-contact-references" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-default-vocabularies", function()
		local result = common.execute_aws_command_with_input({ "connect", "list-default-vocabularies" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-evaluation-form-versions", function()
		local result = common.execute_aws_command_with_input({ "connect", "list-evaluation-form-versions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-evaluation-forms", function()
		local result = common.execute_aws_command_with_input({ "connect", "list-evaluation-forms" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-flow-associations", function()
		local result = common.execute_aws_command_with_input({ "connect", "list-flow-associations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-hours-of-operation-overrides", function()
		local result = common.execute_aws_command_with_input({ "connect", "list-hours-of-operation-overrides" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-hours-of-operations", function()
		local result = common.execute_aws_command_with_input({ "connect", "list-hours-of-operations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-instance-attributes", function()
		local result = common.execute_aws_command_with_input({ "connect", "list-instance-attributes" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-instance-storage-configs", function()
		local result = common.execute_aws_command_with_input({ "connect", "list-instance-storage-configs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-instances", function()
		local result = common.execute_aws_command_with_input({ "connect", "list-instances" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-integration-associations", function()
		local result = common.execute_aws_command_with_input({ "connect", "list-integration-associations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-lambda-functions", function()
		local result = common.execute_aws_command_with_input({ "connect", "list-lambda-functions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-lex-bots", function()
		local result = common.execute_aws_command_with_input({ "connect", "list-lex-bots" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-phone-numbers", function()
		local result = common.execute_aws_command_with_input({ "connect", "list-phone-numbers" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-phone-numbers-v2", function()
		local result = common.execute_aws_command_with_input({ "connect", "list-phone-numbers-v2" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-predefined-attributes", function()
		local result = common.execute_aws_command_with_input({ "connect", "list-predefined-attributes" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-prompts", function()
		local result = common.execute_aws_command_with_input({ "connect", "list-prompts" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-queue-quick-connects", function()
		local result = common.execute_aws_command_with_input({ "connect", "list-queue-quick-connects" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-queues", function()
		local result = common.execute_aws_command_with_input({ "connect", "list-queues" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-quick-connects", function()
		local result = common.execute_aws_command_with_input({ "connect", "list-quick-connects" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-realtime-contact-analysis-segments-v2", function()
		local result = common.execute_aws_command_with_input({ "connect", "list-realtime-contact-analysis-segments-v2" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-routing-profile-queues", function()
		local result = common.execute_aws_command_with_input({ "connect", "list-routing-profile-queues" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-routing-profiles", function()
		local result = common.execute_aws_command_with_input({ "connect", "list-routing-profiles" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-rules", function()
		local result = common.execute_aws_command_with_input({ "connect", "list-rules" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-security-keys", function()
		local result = common.execute_aws_command_with_input({ "connect", "list-security-keys" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-security-profile-applications", function()
		local result = common.execute_aws_command_with_input({ "connect", "list-security-profile-applications" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-security-profile-permissions", function()
		local result = common.execute_aws_command_with_input({ "connect", "list-security-profile-permissions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-security-profiles", function()
		local result = common.execute_aws_command_with_input({ "connect", "list-security-profiles" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "connect", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-task-templates", function()
		local result = common.execute_aws_command_with_input({ "connect", "list-task-templates" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-traffic-distribution-group-users", function()
		local result = common.execute_aws_command_with_input({ "connect", "list-traffic-distribution-group-users" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-traffic-distribution-groups", function()
		local result = common.execute_aws_command_with_input({ "connect", "list-traffic-distribution-groups" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-use-cases", function()
		local result = common.execute_aws_command_with_input({ "connect", "list-use-cases" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-user-hierarchy-groups", function()
		local result = common.execute_aws_command_with_input({ "connect", "list-user-hierarchy-groups" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-user-proficiencies", function()
		local result = common.execute_aws_command_with_input({ "connect", "list-user-proficiencies" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-users", function()
		local result = common.execute_aws_command_with_input({ "connect", "list-users" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-view-versions", function()
		local result = common.execute_aws_command_with_input({ "connect", "list-view-versions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-views", function()
		local result = common.execute_aws_command_with_input({ "connect", "list-views" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for monitor-contact", function()
		local result = common.execute_aws_command_with_input({ "connect", "monitor-contact" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for pause-contact", function()
		local result = common.execute_aws_command_with_input({ "connect", "pause-contact" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-user-status", function()
		local result = common.execute_aws_command_with_input({ "connect", "put-user-status" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for release-phone-number", function()
		local result = common.execute_aws_command_with_input({ "connect", "release-phone-number" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for replicate-instance", function()
		local result = common.execute_aws_command_with_input({ "connect", "replicate-instance" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for resume-contact", function()
		local result = common.execute_aws_command_with_input({ "connect", "resume-contact" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for resume-contact-recording", function()
		local result = common.execute_aws_command_with_input({ "connect", "resume-contact-recording" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for search-agent-statuses", function()
		local result = common.execute_aws_command_with_input({ "connect", "search-agent-statuses" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for search-available-phone-numbers", function()
		local result = common.execute_aws_command_with_input({ "connect", "search-available-phone-numbers" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for search-contact-flow-modules", function()
		local result = common.execute_aws_command_with_input({ "connect", "search-contact-flow-modules" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for search-contact-flows", function()
		local result = common.execute_aws_command_with_input({ "connect", "search-contact-flows" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for search-contacts", function()
		local result = common.execute_aws_command_with_input({ "connect", "search-contacts" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for search-email-addresses", function()
		local result = common.execute_aws_command_with_input({ "connect", "search-email-addresses" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for search-hours-of-operation-overrides", function()
		local result = common.execute_aws_command_with_input({ "connect", "search-hours-of-operation-overrides" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for search-hours-of-operations", function()
		local result = common.execute_aws_command_with_input({ "connect", "search-hours-of-operations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for search-predefined-attributes", function()
		local result = common.execute_aws_command_with_input({ "connect", "search-predefined-attributes" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for search-prompts", function()
		local result = common.execute_aws_command_with_input({ "connect", "search-prompts" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for search-queues", function()
		local result = common.execute_aws_command_with_input({ "connect", "search-queues" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for search-quick-connects", function()
		local result = common.execute_aws_command_with_input({ "connect", "search-quick-connects" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for search-resource-tags", function()
		local result = common.execute_aws_command_with_input({ "connect", "search-resource-tags" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for search-routing-profiles", function()
		local result = common.execute_aws_command_with_input({ "connect", "search-routing-profiles" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for search-security-profiles", function()
		local result = common.execute_aws_command_with_input({ "connect", "search-security-profiles" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for search-user-hierarchy-groups", function()
		local result = common.execute_aws_command_with_input({ "connect", "search-user-hierarchy-groups" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for search-users", function()
		local result = common.execute_aws_command_with_input({ "connect", "search-users" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for search-vocabularies", function()
		local result = common.execute_aws_command_with_input({ "connect", "search-vocabularies" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for send-chat-integration-event", function()
		local result = common.execute_aws_command_with_input({ "connect", "send-chat-integration-event" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for send-outbound-email", function()
		local result = common.execute_aws_command_with_input({ "connect", "send-outbound-email" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-attached-file-upload", function()
		local result = common.execute_aws_command_with_input({ "connect", "start-attached-file-upload" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-chat-contact", function()
		local result = common.execute_aws_command_with_input({ "connect", "start-chat-contact" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-contact-evaluation", function()
		local result = common.execute_aws_command_with_input({ "connect", "start-contact-evaluation" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-contact-recording", function()
		local result = common.execute_aws_command_with_input({ "connect", "start-contact-recording" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-contact-streaming", function()
		local result = common.execute_aws_command_with_input({ "connect", "start-contact-streaming" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-email-contact", function()
		local result = common.execute_aws_command_with_input({ "connect", "start-email-contact" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-outbound-chat-contact", function()
		local result = common.execute_aws_command_with_input({ "connect", "start-outbound-chat-contact" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-outbound-email-contact", function()
		local result = common.execute_aws_command_with_input({ "connect", "start-outbound-email-contact" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-outbound-voice-contact", function()
		local result = common.execute_aws_command_with_input({ "connect", "start-outbound-voice-contact" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-screen-sharing", function()
		local result = common.execute_aws_command_with_input({ "connect", "start-screen-sharing" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-task-contact", function()
		local result = common.execute_aws_command_with_input({ "connect", "start-task-contact" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-web-rtc-contact", function()
		local result = common.execute_aws_command_with_input({ "connect", "start-web-rtc-contact" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-contact", function()
		local result = common.execute_aws_command_with_input({ "connect", "stop-contact" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-contact-recording", function()
		local result = common.execute_aws_command_with_input({ "connect", "stop-contact-recording" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-contact-streaming", function()
		local result = common.execute_aws_command_with_input({ "connect", "stop-contact-streaming" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for submit-contact-evaluation", function()
		local result = common.execute_aws_command_with_input({ "connect", "submit-contact-evaluation" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for suspend-contact-recording", function()
		local result = common.execute_aws_command_with_input({ "connect", "suspend-contact-recording" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-contact", function()
		local result = common.execute_aws_command_with_input({ "connect", "tag-contact" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "connect", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for transfer-contact", function()
		local result = common.execute_aws_command_with_input({ "connect", "transfer-contact" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-contact", function()
		local result = common.execute_aws_command_with_input({ "connect", "untag-contact" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "connect", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-agent-status", function()
		local result = common.execute_aws_command_with_input({ "connect", "update-agent-status" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-authentication-profile", function()
		local result = common.execute_aws_command_with_input({ "connect", "update-authentication-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-contact", function()
		local result = common.execute_aws_command_with_input({ "connect", "update-contact" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-contact-attributes", function()
		local result = common.execute_aws_command_with_input({ "connect", "update-contact-attributes" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-contact-evaluation", function()
		local result = common.execute_aws_command_with_input({ "connect", "update-contact-evaluation" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-contact-flow-content", function()
		local result = common.execute_aws_command_with_input({ "connect", "update-contact-flow-content" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-contact-flow-metadata", function()
		local result = common.execute_aws_command_with_input({ "connect", "update-contact-flow-metadata" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-contact-flow-module-content", function()
		local result = common.execute_aws_command_with_input({ "connect", "update-contact-flow-module-content" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-contact-flow-module-metadata", function()
		local result = common.execute_aws_command_with_input({ "connect", "update-contact-flow-module-metadata" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-contact-flow-name", function()
		local result = common.execute_aws_command_with_input({ "connect", "update-contact-flow-name" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-contact-routing-data", function()
		local result = common.execute_aws_command_with_input({ "connect", "update-contact-routing-data" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-contact-schedule", function()
		local result = common.execute_aws_command_with_input({ "connect", "update-contact-schedule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-email-address-metadata", function()
		local result = common.execute_aws_command_with_input({ "connect", "update-email-address-metadata" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-evaluation-form", function()
		local result = common.execute_aws_command_with_input({ "connect", "update-evaluation-form" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-hours-of-operation", function()
		local result = common.execute_aws_command_with_input({ "connect", "update-hours-of-operation" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-hours-of-operation-override", function()
		local result = common.execute_aws_command_with_input({ "connect", "update-hours-of-operation-override" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-instance-attribute", function()
		local result = common.execute_aws_command_with_input({ "connect", "update-instance-attribute" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-instance-storage-config", function()
		local result = common.execute_aws_command_with_input({ "connect", "update-instance-storage-config" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-participant-authentication", function()
		local result = common.execute_aws_command_with_input({ "connect", "update-participant-authentication" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-participant-role-config", function()
		local result = common.execute_aws_command_with_input({ "connect", "update-participant-role-config" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-phone-number", function()
		local result = common.execute_aws_command_with_input({ "connect", "update-phone-number" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-phone-number-metadata", function()
		local result = common.execute_aws_command_with_input({ "connect", "update-phone-number-metadata" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-predefined-attribute", function()
		local result = common.execute_aws_command_with_input({ "connect", "update-predefined-attribute" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-prompt", function()
		local result = common.execute_aws_command_with_input({ "connect", "update-prompt" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-queue-hours-of-operation", function()
		local result = common.execute_aws_command_with_input({ "connect", "update-queue-hours-of-operation" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-queue-max-contacts", function()
		local result = common.execute_aws_command_with_input({ "connect", "update-queue-max-contacts" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-queue-name", function()
		local result = common.execute_aws_command_with_input({ "connect", "update-queue-name" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-queue-outbound-caller-config", function()
		local result = common.execute_aws_command_with_input({ "connect", "update-queue-outbound-caller-config" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-queue-outbound-email-config", function()
		local result = common.execute_aws_command_with_input({ "connect", "update-queue-outbound-email-config" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-queue-status", function()
		local result = common.execute_aws_command_with_input({ "connect", "update-queue-status" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-quick-connect-config", function()
		local result = common.execute_aws_command_with_input({ "connect", "update-quick-connect-config" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-quick-connect-name", function()
		local result = common.execute_aws_command_with_input({ "connect", "update-quick-connect-name" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-routing-profile-agent-availability-timer", function()
		local result = common.execute_aws_command_with_input({ "connect", "update-routing-profile-agent-availability-timer" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-routing-profile-concurrency", function()
		local result = common.execute_aws_command_with_input({ "connect", "update-routing-profile-concurrency" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-routing-profile-default-outbound-queue", function()
		local result = common.execute_aws_command_with_input({ "connect", "update-routing-profile-default-outbound-queue" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-routing-profile-name", function()
		local result = common.execute_aws_command_with_input({ "connect", "update-routing-profile-name" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-routing-profile-queues", function()
		local result = common.execute_aws_command_with_input({ "connect", "update-routing-profile-queues" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-rule", function()
		local result = common.execute_aws_command_with_input({ "connect", "update-rule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-security-profile", function()
		local result = common.execute_aws_command_with_input({ "connect", "update-security-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-task-template", function()
		local result = common.execute_aws_command_with_input({ "connect", "update-task-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-traffic-distribution", function()
		local result = common.execute_aws_command_with_input({ "connect", "update-traffic-distribution" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-user-hierarchy", function()
		local result = common.execute_aws_command_with_input({ "connect", "update-user-hierarchy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-user-hierarchy-group-name", function()
		local result = common.execute_aws_command_with_input({ "connect", "update-user-hierarchy-group-name" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-user-hierarchy-structure", function()
		local result = common.execute_aws_command_with_input({ "connect", "update-user-hierarchy-structure" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-user-identity-info", function()
		local result = common.execute_aws_command_with_input({ "connect", "update-user-identity-info" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-user-phone-config", function()
		local result = common.execute_aws_command_with_input({ "connect", "update-user-phone-config" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-user-proficiencies", function()
		local result = common.execute_aws_command_with_input({ "connect", "update-user-proficiencies" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-user-routing-profile", function()
		local result = common.execute_aws_command_with_input({ "connect", "update-user-routing-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-user-security-profiles", function()
		local result = common.execute_aws_command_with_input({ "connect", "update-user-security-profiles" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-view-content", function()
		local result = common.execute_aws_command_with_input({ "connect", "update-view-content" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-view-metadata", function()
		local result = common.execute_aws_command_with_input({ "connect", "update-view-metadata" })
		assert.is_true(result.success)
	end)

end)