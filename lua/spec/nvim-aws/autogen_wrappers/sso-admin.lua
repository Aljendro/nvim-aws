-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: sso-admin

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS sso-admin service testing", function()
	it("should generate a cli skeleton for attach-customer-managed-policy-reference-to-permission-set", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "attach-customer-managed-policy-reference-to-permission-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for attach-managed-policy-to-permission-set", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "attach-managed-policy-to-permission-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-account-assignment", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "create-account-assignment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-application", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "create-application" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-application-assignment", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "create-application-assignment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-instance", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "create-instance" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-instance-access-control-attribute-configuration", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "create-instance-access-control-attribute-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-permission-set", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "create-permission-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-trusted-token-issuer", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "create-trusted-token-issuer" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-account-assignment", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "delete-account-assignment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-application", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "delete-application" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-application-access-scope", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "delete-application-access-scope" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-application-assignment", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "delete-application-assignment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-application-authentication-method", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "delete-application-authentication-method" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-application-grant", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "delete-application-grant" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-inline-policy-from-permission-set", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "delete-inline-policy-from-permission-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-instance", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "delete-instance" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-instance-access-control-attribute-configuration", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "delete-instance-access-control-attribute-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-permission-set", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "delete-permission-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-permissions-boundary-from-permission-set", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "delete-permissions-boundary-from-permission-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-trusted-token-issuer", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "delete-trusted-token-issuer" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-account-assignment-creation-status", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "describe-account-assignment-creation-status" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-account-assignment-deletion-status", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "describe-account-assignment-deletion-status" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-application", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "describe-application" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-application-assignment", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "describe-application-assignment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-application-provider", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "describe-application-provider" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-instance", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "describe-instance" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-instance-access-control-attribute-configuration", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "describe-instance-access-control-attribute-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-permission-set", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "describe-permission-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-permission-set-provisioning-status", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "describe-permission-set-provisioning-status" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-trusted-token-issuer", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "describe-trusted-token-issuer" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for detach-customer-managed-policy-reference-from-permission-set", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "detach-customer-managed-policy-reference-from-permission-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for detach-managed-policy-from-permission-set", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "detach-managed-policy-from-permission-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-application-access-scope", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "get-application-access-scope" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-application-assignment-configuration", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "get-application-assignment-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-application-authentication-method", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "get-application-authentication-method" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-application-grant", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "get-application-grant" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-inline-policy-for-permission-set", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "get-inline-policy-for-permission-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-permissions-boundary-for-permission-set", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "get-permissions-boundary-for-permission-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-account-assignment-creation-status", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "list-account-assignment-creation-status" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-account-assignment-deletion-status", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "list-account-assignment-deletion-status" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-account-assignments", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "list-account-assignments" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-account-assignments-for-principal", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "list-account-assignments-for-principal" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-accounts-for-provisioned-permission-set", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "list-accounts-for-provisioned-permission-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-application-access-scopes", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "list-application-access-scopes" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-application-assignments", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "list-application-assignments" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-application-assignments-for-principal", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "list-application-assignments-for-principal" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-application-authentication-methods", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "list-application-authentication-methods" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-application-grants", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "list-application-grants" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-application-providers", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "list-application-providers" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-applications", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "list-applications" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-customer-managed-policy-references-in-permission-set", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "list-customer-managed-policy-references-in-permission-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-instances", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "list-instances" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-managed-policies-in-permission-set", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "list-managed-policies-in-permission-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-permission-set-provisioning-status", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "list-permission-set-provisioning-status" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-permission-sets", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "list-permission-sets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-permission-sets-provisioned-to-account", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "list-permission-sets-provisioned-to-account" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-trusted-token-issuers", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "list-trusted-token-issuers" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for provision-permission-set", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "provision-permission-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-application-access-scope", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "put-application-access-scope" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-application-assignment-configuration", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "put-application-assignment-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-application-authentication-method", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "put-application-authentication-method" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-application-grant", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "put-application-grant" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-inline-policy-to-permission-set", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "put-inline-policy-to-permission-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-permissions-boundary-to-permission-set", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "put-permissions-boundary-to-permission-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-application", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "update-application" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-instance", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "update-instance" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-instance-access-control-attribute-configuration", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "update-instance-access-control-attribute-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-permission-set", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "update-permission-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-trusted-token-issuer", function()
		local result = common.execute_aws_command_with_input({ "sso-admin", "update-trusted-token-issuer" })
		assert.is_true(result.success)
	end)

end)