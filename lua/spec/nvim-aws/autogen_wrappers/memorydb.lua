-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: memorydb

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS memorydb service testing", function()
	it("should generate a cli skeleton for batch-update-cluster", function()
		local result = common.execute_aws_command_with_input({ "memorydb", "batch-update-cluster" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for copy-snapshot", function()
		local result = common.execute_aws_command_with_input({ "memorydb", "copy-snapshot" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-acl", function()
		local result = common.execute_aws_command_with_input({ "memorydb", "create-acl" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-cluster", function()
		local result = common.execute_aws_command_with_input({ "memorydb", "create-cluster" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-multi-region-cluster", function()
		local result = common.execute_aws_command_with_input({ "memorydb", "create-multi-region-cluster" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-parameter-group", function()
		local result = common.execute_aws_command_with_input({ "memorydb", "create-parameter-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-snapshot", function()
		local result = common.execute_aws_command_with_input({ "memorydb", "create-snapshot" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-subnet-group", function()
		local result = common.execute_aws_command_with_input({ "memorydb", "create-subnet-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-user", function()
		local result = common.execute_aws_command_with_input({ "memorydb", "create-user" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-acl", function()
		local result = common.execute_aws_command_with_input({ "memorydb", "delete-acl" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-cluster", function()
		local result = common.execute_aws_command_with_input({ "memorydb", "delete-cluster" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-multi-region-cluster", function()
		local result = common.execute_aws_command_with_input({ "memorydb", "delete-multi-region-cluster" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-parameter-group", function()
		local result = common.execute_aws_command_with_input({ "memorydb", "delete-parameter-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-snapshot", function()
		local result = common.execute_aws_command_with_input({ "memorydb", "delete-snapshot" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-subnet-group", function()
		local result = common.execute_aws_command_with_input({ "memorydb", "delete-subnet-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-user", function()
		local result = common.execute_aws_command_with_input({ "memorydb", "delete-user" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-ac-ls", function()
		local result = common.execute_aws_command_with_input({ "memorydb", "describe-ac-ls" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-clusters", function()
		local result = common.execute_aws_command_with_input({ "memorydb", "describe-clusters" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-engine-versions", function()
		local result = common.execute_aws_command_with_input({ "memorydb", "describe-engine-versions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-events", function()
		local result = common.execute_aws_command_with_input({ "memorydb", "describe-events" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-multi-region-clusters", function()
		local result = common.execute_aws_command_with_input({ "memorydb", "describe-multi-region-clusters" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-parameter-groups", function()
		local result = common.execute_aws_command_with_input({ "memorydb", "describe-parameter-groups" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-parameters", function()
		local result = common.execute_aws_command_with_input({ "memorydb", "describe-parameters" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-reserved-nodes", function()
		local result = common.execute_aws_command_with_input({ "memorydb", "describe-reserved-nodes" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-reserved-nodes-offerings", function()
		local result = common.execute_aws_command_with_input({ "memorydb", "describe-reserved-nodes-offerings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-service-updates", function()
		local result = common.execute_aws_command_with_input({ "memorydb", "describe-service-updates" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-snapshots", function()
		local result = common.execute_aws_command_with_input({ "memorydb", "describe-snapshots" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-subnet-groups", function()
		local result = common.execute_aws_command_with_input({ "memorydb", "describe-subnet-groups" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-users", function()
		local result = common.execute_aws_command_with_input({ "memorydb", "describe-users" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for failover-shard", function()
		local result = common.execute_aws_command_with_input({ "memorydb", "failover-shard" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-allowed-multi-region-cluster-updates", function()
		local result = common.execute_aws_command_with_input({ "memorydb", "list-allowed-multi-region-cluster-updates" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-allowed-node-type-updates", function()
		local result = common.execute_aws_command_with_input({ "memorydb", "list-allowed-node-type-updates" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags", function()
		local result = common.execute_aws_command_with_input({ "memorydb", "list-tags" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for purchase-reserved-nodes-offering", function()
		local result = common.execute_aws_command_with_input({ "memorydb", "purchase-reserved-nodes-offering" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for reset-parameter-group", function()
		local result = common.execute_aws_command_with_input({ "memorydb", "reset-parameter-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "memorydb", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "memorydb", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-acl", function()
		local result = common.execute_aws_command_with_input({ "memorydb", "update-acl" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-cluster", function()
		local result = common.execute_aws_command_with_input({ "memorydb", "update-cluster" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-multi-region-cluster", function()
		local result = common.execute_aws_command_with_input({ "memorydb", "update-multi-region-cluster" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-parameter-group", function()
		local result = common.execute_aws_command_with_input({ "memorydb", "update-parameter-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-subnet-group", function()
		local result = common.execute_aws_command_with_input({ "memorydb", "update-subnet-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-user", function()
		local result = common.execute_aws_command_with_input({ "memorydb", "update-user" })
		assert.is_true(result.success)
	end)

end)