-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: customer-profiles

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS customer-profiles service testing", function()
	it("should generate a cli skeleton for add-profile-key", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "add-profile-key" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-get-calculated-attribute-for-profile", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "batch-get-calculated-attribute-for-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-get-profile", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "batch-get-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-calculated-attribute-definition", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "create-calculated-attribute-definition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-domain", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "create-domain" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-event-stream", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "create-event-stream" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-event-trigger", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "create-event-trigger" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-integration-workflow", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "create-integration-workflow" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-profile", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "create-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-segment-definition", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "create-segment-definition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-segment-estimate", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "create-segment-estimate" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-segment-snapshot", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "create-segment-snapshot" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-calculated-attribute-definition", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "delete-calculated-attribute-definition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-domain", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "delete-domain" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-event-stream", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "delete-event-stream" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-event-trigger", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "delete-event-trigger" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-integration", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "delete-integration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-profile", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "delete-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-profile-key", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "delete-profile-key" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-profile-object", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "delete-profile-object" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-profile-object-type", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "delete-profile-object-type" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-segment-definition", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "delete-segment-definition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-workflow", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "delete-workflow" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for detect-profile-object-type", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "detect-profile-object-type" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-auto-merging-preview", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "get-auto-merging-preview" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-calculated-attribute-definition", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "get-calculated-attribute-definition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-calculated-attribute-for-profile", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "get-calculated-attribute-for-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-domain", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "get-domain" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-event-stream", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "get-event-stream" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-event-trigger", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "get-event-trigger" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-identity-resolution-job", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "get-identity-resolution-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-integration", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "get-integration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-matches", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "get-matches" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-profile-object-type", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "get-profile-object-type" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-profile-object-type-template", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "get-profile-object-type-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-segment-definition", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "get-segment-definition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-segment-estimate", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "get-segment-estimate" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-segment-membership", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "get-segment-membership" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-segment-snapshot", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "get-segment-snapshot" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-similar-profiles", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "get-similar-profiles" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-workflow", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "get-workflow" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-workflow-steps", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "get-workflow-steps" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-account-integrations", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "list-account-integrations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-calculated-attribute-definitions", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "list-calculated-attribute-definitions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-calculated-attributes-for-profile", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "list-calculated-attributes-for-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-domains", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "list-domains" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-event-streams", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "list-event-streams" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-event-triggers", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "list-event-triggers" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-identity-resolution-jobs", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "list-identity-resolution-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-integrations", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "list-integrations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-object-type-attributes", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "list-object-type-attributes" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-profile-attribute-values", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "list-profile-attribute-values" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-profile-object-type-templates", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "list-profile-object-type-templates" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-profile-object-types", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "list-profile-object-types" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-profile-objects", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "list-profile-objects" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-rule-based-matches", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "list-rule-based-matches" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-segment-definitions", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "list-segment-definitions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-workflows", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "list-workflows" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for merge-profiles", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "merge-profiles" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-integration", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "put-integration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-profile-object", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "put-profile-object" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-profile-object-type", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "put-profile-object-type" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for search-profiles", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "search-profiles" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-calculated-attribute-definition", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "update-calculated-attribute-definition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-domain", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "update-domain" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-event-trigger", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "update-event-trigger" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-profile", function()
		local result = common.execute_aws_command_with_input({ "customer-profiles", "update-profile" })
		assert.is_true(result.success)
	end)

end)