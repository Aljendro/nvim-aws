-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: clouddirectory

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS clouddirectory service testing", function()
	it("should generate a cli skeleton for add-facet-to-object", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "add-facet-to-object" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for apply-schema", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "apply-schema" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for attach-object", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "attach-object" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for attach-policy", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "attach-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for attach-to-index", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "attach-to-index" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for attach-typed-link", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "attach-typed-link" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-read", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "batch-read" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-write", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "batch-write" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-directory", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "create-directory" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-facet", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "create-facet" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-index", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "create-index" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-object", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "create-object" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-schema", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "create-schema" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-typed-link-facet", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "create-typed-link-facet" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-directory", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "delete-directory" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-facet", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "delete-facet" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-object", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "delete-object" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-schema", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "delete-schema" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-typed-link-facet", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "delete-typed-link-facet" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for detach-from-index", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "detach-from-index" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for detach-object", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "detach-object" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for detach-policy", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "detach-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for detach-typed-link", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "detach-typed-link" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disable-directory", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "disable-directory" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for enable-directory", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "enable-directory" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-applied-schema-version", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "get-applied-schema-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-directory", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "get-directory" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-facet", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "get-facet" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-link-attributes", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "get-link-attributes" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-object-attributes", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "get-object-attributes" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-object-information", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "get-object-information" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-schema-as-json", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "get-schema-as-json" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-typed-link-facet-information", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "get-typed-link-facet-information" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-applied-schema-arns", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "list-applied-schema-arns" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-attached-indices", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "list-attached-indices" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-development-schema-arns", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "list-development-schema-arns" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-directories", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "list-directories" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-facet-attributes", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "list-facet-attributes" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-facet-names", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "list-facet-names" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-incoming-typed-links", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "list-incoming-typed-links" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-index", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "list-index" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-managed-schema-arns", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "list-managed-schema-arns" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-object-attributes", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "list-object-attributes" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-object-children", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "list-object-children" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-object-parent-paths", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "list-object-parent-paths" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-object-parents", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "list-object-parents" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-object-policies", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "list-object-policies" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-outgoing-typed-links", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "list-outgoing-typed-links" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-policy-attachments", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "list-policy-attachments" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-published-schema-arns", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "list-published-schema-arns" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-typed-link-facet-attributes", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "list-typed-link-facet-attributes" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-typed-link-facet-names", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "list-typed-link-facet-names" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for lookup-policy", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "lookup-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for publish-schema", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "publish-schema" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-schema-from-json", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "put-schema-from-json" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for remove-facet-from-object", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "remove-facet-from-object" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-facet", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "update-facet" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-link-attributes", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "update-link-attributes" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-object-attributes", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "update-object-attributes" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-schema", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "update-schema" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-typed-link-facet", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "update-typed-link-facet" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for upgrade-applied-schema", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "upgrade-applied-schema" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for upgrade-published-schema", function()
		local result = common.execute_aws_command_with_input({ "clouddirectory", "upgrade-published-schema" })
		assert.is_true(result.success)
	end)

end)