-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: ivs

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS ivs service testing", function()
	it("should generate a cli skeleton for batch-get-channel", function()
		local result = common.execute_aws_command_with_input({ "ivs", "batch-get-channel" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-get-stream-key", function()
		local result = common.execute_aws_command_with_input({ "ivs", "batch-get-stream-key" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-start-viewer-session-revocation", function()
		local result = common.execute_aws_command_with_input({ "ivs", "batch-start-viewer-session-revocation" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-channel", function()
		local result = common.execute_aws_command_with_input({ "ivs", "create-channel" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-playback-restriction-policy", function()
		local result = common.execute_aws_command_with_input({ "ivs", "create-playback-restriction-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-recording-configuration", function()
		local result = common.execute_aws_command_with_input({ "ivs", "create-recording-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-stream-key", function()
		local result = common.execute_aws_command_with_input({ "ivs", "create-stream-key" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-channel", function()
		local result = common.execute_aws_command_with_input({ "ivs", "delete-channel" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-playback-key-pair", function()
		local result = common.execute_aws_command_with_input({ "ivs", "delete-playback-key-pair" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-playback-restriction-policy", function()
		local result = common.execute_aws_command_with_input({ "ivs", "delete-playback-restriction-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-recording-configuration", function()
		local result = common.execute_aws_command_with_input({ "ivs", "delete-recording-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-stream-key", function()
		local result = common.execute_aws_command_with_input({ "ivs", "delete-stream-key" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-channel", function()
		local result = common.execute_aws_command_with_input({ "ivs", "get-channel" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-playback-key-pair", function()
		local result = common.execute_aws_command_with_input({ "ivs", "get-playback-key-pair" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-playback-restriction-policy", function()
		local result = common.execute_aws_command_with_input({ "ivs", "get-playback-restriction-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-recording-configuration", function()
		local result = common.execute_aws_command_with_input({ "ivs", "get-recording-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-stream", function()
		local result = common.execute_aws_command_with_input({ "ivs", "get-stream" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-stream-key", function()
		local result = common.execute_aws_command_with_input({ "ivs", "get-stream-key" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-stream-session", function()
		local result = common.execute_aws_command_with_input({ "ivs", "get-stream-session" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for import-playback-key-pair", function()
		local result = common.execute_aws_command_with_input({ "ivs", "import-playback-key-pair" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-channels", function()
		local result = common.execute_aws_command_with_input({ "ivs", "list-channels" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-playback-key-pairs", function()
		local result = common.execute_aws_command_with_input({ "ivs", "list-playback-key-pairs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-playback-restriction-policies", function()
		local result = common.execute_aws_command_with_input({ "ivs", "list-playback-restriction-policies" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-recording-configurations", function()
		local result = common.execute_aws_command_with_input({ "ivs", "list-recording-configurations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-stream-keys", function()
		local result = common.execute_aws_command_with_input({ "ivs", "list-stream-keys" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-stream-sessions", function()
		local result = common.execute_aws_command_with_input({ "ivs", "list-stream-sessions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-streams", function()
		local result = common.execute_aws_command_with_input({ "ivs", "list-streams" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "ivs", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-metadata", function()
		local result = common.execute_aws_command_with_input({ "ivs", "put-metadata" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-viewer-session-revocation", function()
		local result = common.execute_aws_command_with_input({ "ivs", "start-viewer-session-revocation" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-stream", function()
		local result = common.execute_aws_command_with_input({ "ivs", "stop-stream" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "ivs", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "ivs", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-channel", function()
		local result = common.execute_aws_command_with_input({ "ivs", "update-channel" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-playback-restriction-policy", function()
		local result = common.execute_aws_command_with_input({ "ivs", "update-playback-restriction-policy" })
		assert.is_true(result.success)
	end)

end)