-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: storage-gateway

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS storage-gateway service testing", function()
	it("should generate a cli skeleton for activate-gateway", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "activate-gateway" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for add-cache", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "add-cache" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for add-tags-to-resource", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "add-tags-to-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for add-upload-buffer", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "add-upload-buffer" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for add-working-storage", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "add-working-storage" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for assign-tape-pool", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "assign-tape-pool" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for associate-file-system", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "associate-file-system" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for attach-volume", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "attach-volume" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for cancel-archival", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "cancel-archival" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for cancel-cache-report", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "cancel-cache-report" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for cancel-retrieval", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "cancel-retrieval" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-cachedi-scsi-volume", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "create-cachedi-scsi-volume" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-nfs-file-share", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "create-nfs-file-share" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-smb-file-share", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "create-smb-file-share" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-snapshot", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "create-snapshot" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-snapshot-from-volume-recovery-point", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "create-snapshot-from-volume-recovery-point" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-storedi-scsi-volume", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "create-storedi-scsi-volume" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-tape-pool", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "create-tape-pool" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-tape-with-barcode", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "create-tape-with-barcode" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-tapes", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "create-tapes" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-automatic-tape-creation-policy", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "delete-automatic-tape-creation-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-bandwidth-rate-limit", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "delete-bandwidth-rate-limit" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-cache-report", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "delete-cache-report" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-chap-credentials", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "delete-chap-credentials" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-file-share", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "delete-file-share" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-gateway", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "delete-gateway" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-snapshot-schedule", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "delete-snapshot-schedule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-tape", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "delete-tape" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-tape-archive", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "delete-tape-archive" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-tape-pool", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "delete-tape-pool" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-volume", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "delete-volume" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-availability-monitor-test", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "describe-availability-monitor-test" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-bandwidth-rate-limit", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "describe-bandwidth-rate-limit" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-bandwidth-rate-limit-schedule", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "describe-bandwidth-rate-limit-schedule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-cache", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "describe-cache" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-cache-report", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "describe-cache-report" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-cachedi-scsi-volumes", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "describe-cachedi-scsi-volumes" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-chap-credentials", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "describe-chap-credentials" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-file-system-associations", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "describe-file-system-associations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-gateway-information", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "describe-gateway-information" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-maintenance-start-time", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "describe-maintenance-start-time" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-nfs-file-shares", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "describe-nfs-file-shares" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-smb-file-shares", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "describe-smb-file-shares" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-smb-settings", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "describe-smb-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-snapshot-schedule", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "describe-snapshot-schedule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-storedi-scsi-volumes", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "describe-storedi-scsi-volumes" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-tape-archives", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "describe-tape-archives" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-tape-recovery-points", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "describe-tape-recovery-points" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-tapes", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "describe-tapes" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-upload-buffer", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "describe-upload-buffer" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-vtl-devices", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "describe-vtl-devices" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-working-storage", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "describe-working-storage" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for detach-volume", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "detach-volume" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disable-gateway", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "disable-gateway" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-file-system", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "disassociate-file-system" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for evict-files-failing-upload", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "evict-files-failing-upload" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for join-domain", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "join-domain" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-automatic-tape-creation-policies", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "list-automatic-tape-creation-policies" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-cache-reports", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "list-cache-reports" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-file-shares", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "list-file-shares" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-file-system-associations", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "list-file-system-associations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-gateways", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "list-gateways" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-local-disks", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "list-local-disks" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tape-pools", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "list-tape-pools" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tapes", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "list-tapes" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-volume-initiators", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "list-volume-initiators" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-volume-recovery-points", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "list-volume-recovery-points" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-volumes", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "list-volumes" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for notify-when-uploaded", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "notify-when-uploaded" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for refresh-cache", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "refresh-cache" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for remove-tags-from-resource", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "remove-tags-from-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for reset-cache", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "reset-cache" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for retrieve-tape-archive", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "retrieve-tape-archive" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for retrieve-tape-recovery-point", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "retrieve-tape-recovery-point" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for set-local-console-password", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "set-local-console-password" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for set-smb-guest-password", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "set-smb-guest-password" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for shutdown-gateway", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "shutdown-gateway" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-availability-monitor-test", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "start-availability-monitor-test" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-cache-report", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "start-cache-report" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-gateway", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "start-gateway" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-automatic-tape-creation-policy", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "update-automatic-tape-creation-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-bandwidth-rate-limit", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "update-bandwidth-rate-limit" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-bandwidth-rate-limit-schedule", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "update-bandwidth-rate-limit-schedule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-chap-credentials", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "update-chap-credentials" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-file-system-association", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "update-file-system-association" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-gateway-information", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "update-gateway-information" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-gateway-software-now", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "update-gateway-software-now" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-maintenance-start-time", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "update-maintenance-start-time" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-nfs-file-share", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "update-nfs-file-share" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-smb-file-share", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "update-smb-file-share" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-smb-file-share-visibility", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "update-smb-file-share-visibility" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-smb-local-groups", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "update-smb-local-groups" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-smb-security-strategy", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "update-smb-security-strategy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-snapshot-schedule", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "update-snapshot-schedule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-vtl-device-type", function()
		local result = common.execute_aws_command_with_input({ "storagegateway", "update-vtl-device-type" })
		assert.is_true(result.success)
	end)

end)