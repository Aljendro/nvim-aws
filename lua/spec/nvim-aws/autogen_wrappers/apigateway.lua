-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: api-gateway

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS api-gateway service testing", function()
	it("should generate a cli skeleton for create-api-key", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "create-api-key" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-authorizer", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "create-authorizer" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-base-path-mapping", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "create-base-path-mapping" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-deployment", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "create-deployment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-documentation-part", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "create-documentation-part" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-documentation-version", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "create-documentation-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-domain-name", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "create-domain-name" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-domain-name-access-association", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "create-domain-name-access-association" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-model", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "create-model" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-request-validator", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "create-request-validator" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-resource", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "create-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-rest-api", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "create-rest-api" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-stage", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "create-stage" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-usage-plan", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "create-usage-plan" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-usage-plan-key", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "create-usage-plan-key" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-vpc-link", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "create-vpc-link" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-api-key", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "delete-api-key" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-authorizer", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "delete-authorizer" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-base-path-mapping", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "delete-base-path-mapping" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-client-certificate", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "delete-client-certificate" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-deployment", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "delete-deployment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-documentation-part", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "delete-documentation-part" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-documentation-version", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "delete-documentation-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-domain-name", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "delete-domain-name" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-domain-name-access-association", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "delete-domain-name-access-association" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-gateway-response", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "delete-gateway-response" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-integration", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "delete-integration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-integration-response", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "delete-integration-response" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-method", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "delete-method" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-method-response", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "delete-method-response" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-model", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "delete-model" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-request-validator", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "delete-request-validator" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-resource", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "delete-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-rest-api", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "delete-rest-api" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-stage", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "delete-stage" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-usage-plan", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "delete-usage-plan" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-usage-plan-key", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "delete-usage-plan-key" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-vpc-link", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "delete-vpc-link" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for flush-stage-authorizers-cache", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "flush-stage-authorizers-cache" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for flush-stage-cache", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "flush-stage-cache" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for generate-client-certificate", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "generate-client-certificate" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-account", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "get-account" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-api-key", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "get-api-key" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-api-keys", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "get-api-keys" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-authorizer", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "get-authorizer" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-authorizers", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "get-authorizers" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-base-path-mapping", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "get-base-path-mapping" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-base-path-mappings", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "get-base-path-mappings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-client-certificate", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "get-client-certificate" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-client-certificates", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "get-client-certificates" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-deployment", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "get-deployment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-deployments", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "get-deployments" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-documentation-part", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "get-documentation-part" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-documentation-parts", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "get-documentation-parts" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-documentation-version", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "get-documentation-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-documentation-versions", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "get-documentation-versions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-domain-name", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "get-domain-name" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-domain-name-access-associations", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "get-domain-name-access-associations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-domain-names", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "get-domain-names" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-export", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "get-export" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-gateway-response", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "get-gateway-response" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-gateway-responses", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "get-gateway-responses" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-integration", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "get-integration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-integration-response", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "get-integration-response" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-method", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "get-method" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-method-response", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "get-method-response" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-model", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "get-model" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-model-template", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "get-model-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-models", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "get-models" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-request-validator", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "get-request-validator" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-request-validators", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "get-request-validators" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-resource", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "get-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-resources", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "get-resources" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-rest-api", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "get-rest-api" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-rest-apis", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "get-rest-apis" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-sdk", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "get-sdk" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-sdk-type", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "get-sdk-type" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-sdk-types", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "get-sdk-types" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-stage", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "get-stage" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-stages", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "get-stages" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-tags", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "get-tags" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-usage", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "get-usage" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-usage-plan", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "get-usage-plan" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-usage-plan-key", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "get-usage-plan-key" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-usage-plan-keys", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "get-usage-plan-keys" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-usage-plans", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "get-usage-plans" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-vpc-link", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "get-vpc-link" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-vpc-links", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "get-vpc-links" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for import-api-keys", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "import-api-keys" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for import-documentation-parts", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "import-documentation-parts" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for import-rest-api", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "import-rest-api" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-gateway-response", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "put-gateway-response" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-integration", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "put-integration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-integration-response", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "put-integration-response" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-method", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "put-method" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-method-response", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "put-method-response" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-rest-api", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "put-rest-api" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for reject-domain-name-access-association", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "reject-domain-name-access-association" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for test-invoke-authorizer", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "test-invoke-authorizer" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for test-invoke-method", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "test-invoke-method" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-account", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "update-account" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-api-key", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "update-api-key" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-authorizer", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "update-authorizer" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-base-path-mapping", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "update-base-path-mapping" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-client-certificate", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "update-client-certificate" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-deployment", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "update-deployment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-documentation-part", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "update-documentation-part" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-documentation-version", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "update-documentation-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-domain-name", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "update-domain-name" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-gateway-response", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "update-gateway-response" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-integration", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "update-integration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-integration-response", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "update-integration-response" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-method", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "update-method" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-method-response", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "update-method-response" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-model", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "update-model" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-request-validator", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "update-request-validator" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-resource", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "update-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-rest-api", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "update-rest-api" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-stage", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "update-stage" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-usage", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "update-usage" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-usage-plan", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "update-usage-plan" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-vpc-link", function()
		local result = common.execute_aws_command_with_input({ "apigateway", "update-vpc-link" })
		assert.is_true(result.success)
	end)

end)