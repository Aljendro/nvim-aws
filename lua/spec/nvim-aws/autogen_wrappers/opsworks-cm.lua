-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: opsworkscm

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS opsworkscm service testing", function()
	it("should generate a cli skeleton for associate-node", function()
		local result = common.execute_aws_command_with_input({ "opsworks-cm", "associate-node" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-backup", function()
		local result = common.execute_aws_command_with_input({ "opsworks-cm", "create-backup" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-server", function()
		local result = common.execute_aws_command_with_input({ "opsworks-cm", "create-server" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-backup", function()
		local result = common.execute_aws_command_with_input({ "opsworks-cm", "delete-backup" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-server", function()
		local result = common.execute_aws_command_with_input({ "opsworks-cm", "delete-server" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-account-attributes", function()
		local result = common.execute_aws_command_with_input({ "opsworks-cm", "describe-account-attributes" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-backups", function()
		local result = common.execute_aws_command_with_input({ "opsworks-cm", "describe-backups" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-events", function()
		local result = common.execute_aws_command_with_input({ "opsworks-cm", "describe-events" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-node-association-status", function()
		local result = common.execute_aws_command_with_input({ "opsworks-cm", "describe-node-association-status" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-servers", function()
		local result = common.execute_aws_command_with_input({ "opsworks-cm", "describe-servers" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-node", function()
		local result = common.execute_aws_command_with_input({ "opsworks-cm", "disassociate-node" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for export-server-engine-attribute", function()
		local result = common.execute_aws_command_with_input({ "opsworks-cm", "export-server-engine-attribute" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "opsworks-cm", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for restore-server", function()
		local result = common.execute_aws_command_with_input({ "opsworks-cm", "restore-server" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-maintenance", function()
		local result = common.execute_aws_command_with_input({ "opsworks-cm", "start-maintenance" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "opsworks-cm", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "opsworks-cm", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-server", function()
		local result = common.execute_aws_command_with_input({ "opsworks-cm", "update-server" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-server-engine-attributes", function()
		local result = common.execute_aws_command_with_input({ "opsworks-cm", "update-server-engine-attributes" })
		assert.is_true(result.success)
	end)

end)