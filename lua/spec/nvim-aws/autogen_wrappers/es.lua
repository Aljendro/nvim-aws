-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: elasticsearch-service

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS elasticsearch-service service testing", function()
	it("should generate a cli skeleton for accept-inbound-cross-cluster-search-connection", function()
		local result = common.execute_aws_command_with_input({ "es", "accept-inbound-cross-cluster-search-connection" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for add-tags", function()
		local result = common.execute_aws_command_with_input({ "es", "add-tags" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for associate-package", function()
		local result = common.execute_aws_command_with_input({ "es", "associate-package" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for authorize-vpc-endpoint-access", function()
		local result = common.execute_aws_command_with_input({ "es", "authorize-vpc-endpoint-access" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for cancel-domain-config-change", function()
		local result = common.execute_aws_command_with_input({ "es", "cancel-domain-config-change" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for cancel-elasticsearch-service-software-update", function()
		local result = common.execute_aws_command_with_input({ "es", "cancel-elasticsearch-service-software-update" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-elasticsearch-domain", function()
		local result = common.execute_aws_command_with_input({ "es", "create-elasticsearch-domain" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-outbound-cross-cluster-search-connection", function()
		local result = common.execute_aws_command_with_input({ "es", "create-outbound-cross-cluster-search-connection" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-package", function()
		local result = common.execute_aws_command_with_input({ "es", "create-package" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-vpc-endpoint", function()
		local result = common.execute_aws_command_with_input({ "es", "create-vpc-endpoint" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-elasticsearch-domain", function()
		local result = common.execute_aws_command_with_input({ "es", "delete-elasticsearch-domain" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-elasticsearch-service-role", function()
		local result = common.execute_aws_command_with_input({ "es", "delete-elasticsearch-service-role" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-inbound-cross-cluster-search-connection", function()
		local result = common.execute_aws_command_with_input({ "es", "delete-inbound-cross-cluster-search-connection" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-outbound-cross-cluster-search-connection", function()
		local result = common.execute_aws_command_with_input({ "es", "delete-outbound-cross-cluster-search-connection" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-package", function()
		local result = common.execute_aws_command_with_input({ "es", "delete-package" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-vpc-endpoint", function()
		local result = common.execute_aws_command_with_input({ "es", "delete-vpc-endpoint" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-domain-auto-tunes", function()
		local result = common.execute_aws_command_with_input({ "es", "describe-domain-auto-tunes" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-domain-change-progress", function()
		local result = common.execute_aws_command_with_input({ "es", "describe-domain-change-progress" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-elasticsearch-domain", function()
		local result = common.execute_aws_command_with_input({ "es", "describe-elasticsearch-domain" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-elasticsearch-domain-config", function()
		local result = common.execute_aws_command_with_input({ "es", "describe-elasticsearch-domain-config" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-elasticsearch-domains", function()
		local result = common.execute_aws_command_with_input({ "es", "describe-elasticsearch-domains" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-elasticsearch-instance-type-limits", function()
		local result = common.execute_aws_command_with_input({ "es", "describe-elasticsearch-instance-type-limits" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-inbound-cross-cluster-search-connections", function()
		local result = common.execute_aws_command_with_input({ "es", "describe-inbound-cross-cluster-search-connections" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-outbound-cross-cluster-search-connections", function()
		local result = common.execute_aws_command_with_input({ "es", "describe-outbound-cross-cluster-search-connections" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-packages", function()
		local result = common.execute_aws_command_with_input({ "es", "describe-packages" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-reserved-elasticsearch-instance-offerings", function()
		local result = common.execute_aws_command_with_input({ "es", "describe-reserved-elasticsearch-instance-offerings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-reserved-elasticsearch-instances", function()
		local result = common.execute_aws_command_with_input({ "es", "describe-reserved-elasticsearch-instances" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-vpc-endpoints", function()
		local result = common.execute_aws_command_with_input({ "es", "describe-vpc-endpoints" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for dissociate-package", function()
		local result = common.execute_aws_command_with_input({ "es", "dissociate-package" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-compatible-elasticsearch-versions", function()
		local result = common.execute_aws_command_with_input({ "es", "get-compatible-elasticsearch-versions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-package-version-history", function()
		local result = common.execute_aws_command_with_input({ "es", "get-package-version-history" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-upgrade-history", function()
		local result = common.execute_aws_command_with_input({ "es", "get-upgrade-history" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-upgrade-status", function()
		local result = common.execute_aws_command_with_input({ "es", "get-upgrade-status" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-domain-names", function()
		local result = common.execute_aws_command_with_input({ "es", "list-domain-names" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-domains-for-package", function()
		local result = common.execute_aws_command_with_input({ "es", "list-domains-for-package" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-elasticsearch-instance-types", function()
		local result = common.execute_aws_command_with_input({ "es", "list-elasticsearch-instance-types" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-elasticsearch-versions", function()
		local result = common.execute_aws_command_with_input({ "es", "list-elasticsearch-versions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-packages-for-domain", function()
		local result = common.execute_aws_command_with_input({ "es", "list-packages-for-domain" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags", function()
		local result = common.execute_aws_command_with_input({ "es", "list-tags" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-vpc-endpoint-access", function()
		local result = common.execute_aws_command_with_input({ "es", "list-vpc-endpoint-access" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-vpc-endpoints", function()
		local result = common.execute_aws_command_with_input({ "es", "list-vpc-endpoints" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-vpc-endpoints-for-domain", function()
		local result = common.execute_aws_command_with_input({ "es", "list-vpc-endpoints-for-domain" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for purchase-reserved-elasticsearch-instance-offering", function()
		local result = common.execute_aws_command_with_input({ "es", "purchase-reserved-elasticsearch-instance-offering" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for reject-inbound-cross-cluster-search-connection", function()
		local result = common.execute_aws_command_with_input({ "es", "reject-inbound-cross-cluster-search-connection" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for remove-tags", function()
		local result = common.execute_aws_command_with_input({ "es", "remove-tags" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for revoke-vpc-endpoint-access", function()
		local result = common.execute_aws_command_with_input({ "es", "revoke-vpc-endpoint-access" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-elasticsearch-service-software-update", function()
		local result = common.execute_aws_command_with_input({ "es", "start-elasticsearch-service-software-update" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-elasticsearch-domain-config", function()
		local result = common.execute_aws_command_with_input({ "es", "update-elasticsearch-domain-config" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-package", function()
		local result = common.execute_aws_command_with_input({ "es", "update-package" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-vpc-endpoint", function()
		local result = common.execute_aws_command_with_input({ "es", "update-vpc-endpoint" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for upgrade-elasticsearch-domain", function()
		local result = common.execute_aws_command_with_input({ "es", "upgrade-elasticsearch-domain" })
		assert.is_true(result.success)
	end)

end)