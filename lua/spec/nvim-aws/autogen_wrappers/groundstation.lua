-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: groundstation

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS groundstation service testing", function()
	it("should generate a cli skeleton for cancel-contact", function()
		local result = common.execute_aws_command_with_input({ "groundstation", "cancel-contact" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-config", function()
		local result = common.execute_aws_command_with_input({ "groundstation", "create-config" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-dataflow-endpoint-group", function()
		local result = common.execute_aws_command_with_input({ "groundstation", "create-dataflow-endpoint-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-ephemeris", function()
		local result = common.execute_aws_command_with_input({ "groundstation", "create-ephemeris" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-mission-profile", function()
		local result = common.execute_aws_command_with_input({ "groundstation", "create-mission-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-config", function()
		local result = common.execute_aws_command_with_input({ "groundstation", "delete-config" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-dataflow-endpoint-group", function()
		local result = common.execute_aws_command_with_input({ "groundstation", "delete-dataflow-endpoint-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-ephemeris", function()
		local result = common.execute_aws_command_with_input({ "groundstation", "delete-ephemeris" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-mission-profile", function()
		local result = common.execute_aws_command_with_input({ "groundstation", "delete-mission-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-contact", function()
		local result = common.execute_aws_command_with_input({ "groundstation", "describe-contact" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-ephemeris", function()
		local result = common.execute_aws_command_with_input({ "groundstation", "describe-ephemeris" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-agent-configuration", function()
		local result = common.execute_aws_command_with_input({ "groundstation", "get-agent-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-config", function()
		local result = common.execute_aws_command_with_input({ "groundstation", "get-config" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-dataflow-endpoint-group", function()
		local result = common.execute_aws_command_with_input({ "groundstation", "get-dataflow-endpoint-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-minute-usage", function()
		local result = common.execute_aws_command_with_input({ "groundstation", "get-minute-usage" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-mission-profile", function()
		local result = common.execute_aws_command_with_input({ "groundstation", "get-mission-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-satellite", function()
		local result = common.execute_aws_command_with_input({ "groundstation", "get-satellite" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-configs", function()
		local result = common.execute_aws_command_with_input({ "groundstation", "list-configs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-contacts", function()
		local result = common.execute_aws_command_with_input({ "groundstation", "list-contacts" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-dataflow-endpoint-groups", function()
		local result = common.execute_aws_command_with_input({ "groundstation", "list-dataflow-endpoint-groups" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-ephemerides", function()
		local result = common.execute_aws_command_with_input({ "groundstation", "list-ephemerides" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-ground-stations", function()
		local result = common.execute_aws_command_with_input({ "groundstation", "list-ground-stations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-mission-profiles", function()
		local result = common.execute_aws_command_with_input({ "groundstation", "list-mission-profiles" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-satellites", function()
		local result = common.execute_aws_command_with_input({ "groundstation", "list-satellites" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "groundstation", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for register-agent", function()
		local result = common.execute_aws_command_with_input({ "groundstation", "register-agent" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for reserve-contact", function()
		local result = common.execute_aws_command_with_input({ "groundstation", "reserve-contact" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "groundstation", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "groundstation", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-agent-status", function()
		local result = common.execute_aws_command_with_input({ "groundstation", "update-agent-status" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-config", function()
		local result = common.execute_aws_command_with_input({ "groundstation", "update-config" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-ephemeris", function()
		local result = common.execute_aws_command_with_input({ "groundstation", "update-ephemeris" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-mission-profile", function()
		local result = common.execute_aws_command_with_input({ "groundstation", "update-mission-profile" })
		assert.is_true(result.success)
	end)

end)