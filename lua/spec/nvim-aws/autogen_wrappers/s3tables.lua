-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: s3tables

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS s3tables service testing", function()
	it("should generate a cli skeleton for create-namespace", function()
		local result = common.execute_aws_command_with_input({ "s3tables", "create-namespace" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-table", function()
		local result = common.execute_aws_command_with_input({ "s3tables", "create-table" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-table-bucket", function()
		local result = common.execute_aws_command_with_input({ "s3tables", "create-table-bucket" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-namespace", function()
		local result = common.execute_aws_command_with_input({ "s3tables", "delete-namespace" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-table", function()
		local result = common.execute_aws_command_with_input({ "s3tables", "delete-table" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-table-bucket", function()
		local result = common.execute_aws_command_with_input({ "s3tables", "delete-table-bucket" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-table-bucket-policy", function()
		local result = common.execute_aws_command_with_input({ "s3tables", "delete-table-bucket-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-table-policy", function()
		local result = common.execute_aws_command_with_input({ "s3tables", "delete-table-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-namespace", function()
		local result = common.execute_aws_command_with_input({ "s3tables", "get-namespace" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-table", function()
		local result = common.execute_aws_command_with_input({ "s3tables", "get-table" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-table-bucket", function()
		local result = common.execute_aws_command_with_input({ "s3tables", "get-table-bucket" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-table-bucket-maintenance-configuration", function()
		local result = common.execute_aws_command_with_input({ "s3tables", "get-table-bucket-maintenance-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-table-bucket-policy", function()
		local result = common.execute_aws_command_with_input({ "s3tables", "get-table-bucket-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-table-maintenance-configuration", function()
		local result = common.execute_aws_command_with_input({ "s3tables", "get-table-maintenance-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-table-maintenance-job-status", function()
		local result = common.execute_aws_command_with_input({ "s3tables", "get-table-maintenance-job-status" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-table-metadata-location", function()
		local result = common.execute_aws_command_with_input({ "s3tables", "get-table-metadata-location" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-table-policy", function()
		local result = common.execute_aws_command_with_input({ "s3tables", "get-table-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-namespaces", function()
		local result = common.execute_aws_command_with_input({ "s3tables", "list-namespaces" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-table-buckets", function()
		local result = common.execute_aws_command_with_input({ "s3tables", "list-table-buckets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tables", function()
		local result = common.execute_aws_command_with_input({ "s3tables", "list-tables" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-table-bucket-maintenance-configuration", function()
		local result = common.execute_aws_command_with_input({ "s3tables", "put-table-bucket-maintenance-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-table-bucket-policy", function()
		local result = common.execute_aws_command_with_input({ "s3tables", "put-table-bucket-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-table-maintenance-configuration", function()
		local result = common.execute_aws_command_with_input({ "s3tables", "put-table-maintenance-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-table-policy", function()
		local result = common.execute_aws_command_with_input({ "s3tables", "put-table-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for rename-table", function()
		local result = common.execute_aws_command_with_input({ "s3tables", "rename-table" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-table-metadata-location", function()
		local result = common.execute_aws_command_with_input({ "s3tables", "update-table-metadata-location" })
		assert.is_true(result.success)
	end)

end)