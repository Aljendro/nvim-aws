-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: swf

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS swf service testing", function()
	it("should generate a cli skeleton for count-closed-workflow-executions", function()
		local result = common.execute_aws_command_with_input({ "swf", "count-closed-workflow-executions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for count-open-workflow-executions", function()
		local result = common.execute_aws_command_with_input({ "swf", "count-open-workflow-executions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for count-pending-activity-tasks", function()
		local result = common.execute_aws_command_with_input({ "swf", "count-pending-activity-tasks" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for count-pending-decision-tasks", function()
		local result = common.execute_aws_command_with_input({ "swf", "count-pending-decision-tasks" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-activity-type", function()
		local result = common.execute_aws_command_with_input({ "swf", "delete-activity-type" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-workflow-type", function()
		local result = common.execute_aws_command_with_input({ "swf", "delete-workflow-type" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for deprecate-activity-type", function()
		local result = common.execute_aws_command_with_input({ "swf", "deprecate-activity-type" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for deprecate-domain", function()
		local result = common.execute_aws_command_with_input({ "swf", "deprecate-domain" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for deprecate-workflow-type", function()
		local result = common.execute_aws_command_with_input({ "swf", "deprecate-workflow-type" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-activity-type", function()
		local result = common.execute_aws_command_with_input({ "swf", "describe-activity-type" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-domain", function()
		local result = common.execute_aws_command_with_input({ "swf", "describe-domain" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-workflow-execution", function()
		local result = common.execute_aws_command_with_input({ "swf", "describe-workflow-execution" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-workflow-type", function()
		local result = common.execute_aws_command_with_input({ "swf", "describe-workflow-type" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-workflow-execution-history", function()
		local result = common.execute_aws_command_with_input({ "swf", "get-workflow-execution-history" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-activity-types", function()
		local result = common.execute_aws_command_with_input({ "swf", "list-activity-types" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-closed-workflow-executions", function()
		local result = common.execute_aws_command_with_input({ "swf", "list-closed-workflow-executions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-domains", function()
		local result = common.execute_aws_command_with_input({ "swf", "list-domains" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-open-workflow-executions", function()
		local result = common.execute_aws_command_with_input({ "swf", "list-open-workflow-executions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "swf", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-workflow-types", function()
		local result = common.execute_aws_command_with_input({ "swf", "list-workflow-types" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for poll-for-activity-task", function()
		local result = common.execute_aws_command_with_input({ "swf", "poll-for-activity-task" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for poll-for-decision-task", function()
		local result = common.execute_aws_command_with_input({ "swf", "poll-for-decision-task" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for record-activity-task-heartbeat", function()
		local result = common.execute_aws_command_with_input({ "swf", "record-activity-task-heartbeat" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for register-activity-type", function()
		local result = common.execute_aws_command_with_input({ "swf", "register-activity-type" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for register-domain", function()
		local result = common.execute_aws_command_with_input({ "swf", "register-domain" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for register-workflow-type", function()
		local result = common.execute_aws_command_with_input({ "swf", "register-workflow-type" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for request-cancel-workflow-execution", function()
		local result = common.execute_aws_command_with_input({ "swf", "request-cancel-workflow-execution" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for respond-activity-task-canceled", function()
		local result = common.execute_aws_command_with_input({ "swf", "respond-activity-task-canceled" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for respond-activity-task-completed", function()
		local result = common.execute_aws_command_with_input({ "swf", "respond-activity-task-completed" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for respond-activity-task-failed", function()
		local result = common.execute_aws_command_with_input({ "swf", "respond-activity-task-failed" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for respond-decision-task-completed", function()
		local result = common.execute_aws_command_with_input({ "swf", "respond-decision-task-completed" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for signal-workflow-execution", function()
		local result = common.execute_aws_command_with_input({ "swf", "signal-workflow-execution" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-workflow-execution", function()
		local result = common.execute_aws_command_with_input({ "swf", "start-workflow-execution" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "swf", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for terminate-workflow-execution", function()
		local result = common.execute_aws_command_with_input({ "swf", "terminate-workflow-execution" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for undeprecate-activity-type", function()
		local result = common.execute_aws_command_with_input({ "swf", "undeprecate-activity-type" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for undeprecate-domain", function()
		local result = common.execute_aws_command_with_input({ "swf", "undeprecate-domain" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for undeprecate-workflow-type", function()
		local result = common.execute_aws_command_with_input({ "swf", "undeprecate-workflow-type" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "swf", "untag-resource" })
		assert.is_true(result.success)
	end)

end)