-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: mgn

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS mgn service testing", function()
	it("should generate a cli skeleton for archive-application", function()
		local result = common.execute_aws_command_with_input({ "mgn", "archive-application" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for archive-wave", function()
		local result = common.execute_aws_command_with_input({ "mgn", "archive-wave" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for associate-applications", function()
		local result = common.execute_aws_command_with_input({ "mgn", "associate-applications" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for associate-source-servers", function()
		local result = common.execute_aws_command_with_input({ "mgn", "associate-source-servers" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for change-server-life-cycle-state", function()
		local result = common.execute_aws_command_with_input({ "mgn", "change-server-life-cycle-state" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-application", function()
		local result = common.execute_aws_command_with_input({ "mgn", "create-application" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-connector", function()
		local result = common.execute_aws_command_with_input({ "mgn", "create-connector" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-launch-configuration-template", function()
		local result = common.execute_aws_command_with_input({ "mgn", "create-launch-configuration-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-replication-configuration-template", function()
		local result = common.execute_aws_command_with_input({ "mgn", "create-replication-configuration-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-wave", function()
		local result = common.execute_aws_command_with_input({ "mgn", "create-wave" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-application", function()
		local result = common.execute_aws_command_with_input({ "mgn", "delete-application" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-connector", function()
		local result = common.execute_aws_command_with_input({ "mgn", "delete-connector" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-job", function()
		local result = common.execute_aws_command_with_input({ "mgn", "delete-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-launch-configuration-template", function()
		local result = common.execute_aws_command_with_input({ "mgn", "delete-launch-configuration-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-replication-configuration-template", function()
		local result = common.execute_aws_command_with_input({ "mgn", "delete-replication-configuration-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-source-server", function()
		local result = common.execute_aws_command_with_input({ "mgn", "delete-source-server" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-vcenter-client", function()
		local result = common.execute_aws_command_with_input({ "mgn", "delete-vcenter-client" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-wave", function()
		local result = common.execute_aws_command_with_input({ "mgn", "delete-wave" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-job-log-items", function()
		local result = common.execute_aws_command_with_input({ "mgn", "describe-job-log-items" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-jobs", function()
		local result = common.execute_aws_command_with_input({ "mgn", "describe-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-launch-configuration-templates", function()
		local result = common.execute_aws_command_with_input({ "mgn", "describe-launch-configuration-templates" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-replication-configuration-templates", function()
		local result = common.execute_aws_command_with_input({ "mgn", "describe-replication-configuration-templates" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-source-servers", function()
		local result = common.execute_aws_command_with_input({ "mgn", "describe-source-servers" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-vcenter-clients", function()
		local result = common.execute_aws_command_with_input({ "mgn", "describe-vcenter-clients" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-applications", function()
		local result = common.execute_aws_command_with_input({ "mgn", "disassociate-applications" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-source-servers", function()
		local result = common.execute_aws_command_with_input({ "mgn", "disassociate-source-servers" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disconnect-from-service", function()
		local result = common.execute_aws_command_with_input({ "mgn", "disconnect-from-service" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for finalize-cutover", function()
		local result = common.execute_aws_command_with_input({ "mgn", "finalize-cutover" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-launch-configuration", function()
		local result = common.execute_aws_command_with_input({ "mgn", "get-launch-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-replication-configuration", function()
		local result = common.execute_aws_command_with_input({ "mgn", "get-replication-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for initialize-service", function()
		local result = common.execute_aws_command_with_input({ "mgn", "initialize-service" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-applications", function()
		local result = common.execute_aws_command_with_input({ "mgn", "list-applications" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-connectors", function()
		local result = common.execute_aws_command_with_input({ "mgn", "list-connectors" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-export-errors", function()
		local result = common.execute_aws_command_with_input({ "mgn", "list-export-errors" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-exports", function()
		local result = common.execute_aws_command_with_input({ "mgn", "list-exports" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-import-errors", function()
		local result = common.execute_aws_command_with_input({ "mgn", "list-import-errors" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-imports", function()
		local result = common.execute_aws_command_with_input({ "mgn", "list-imports" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-managed-accounts", function()
		local result = common.execute_aws_command_with_input({ "mgn", "list-managed-accounts" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-source-server-actions", function()
		local result = common.execute_aws_command_with_input({ "mgn", "list-source-server-actions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "mgn", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-template-actions", function()
		local result = common.execute_aws_command_with_input({ "mgn", "list-template-actions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-waves", function()
		local result = common.execute_aws_command_with_input({ "mgn", "list-waves" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for mark-as-archived", function()
		local result = common.execute_aws_command_with_input({ "mgn", "mark-as-archived" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for pause-replication", function()
		local result = common.execute_aws_command_with_input({ "mgn", "pause-replication" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-source-server-action", function()
		local result = common.execute_aws_command_with_input({ "mgn", "put-source-server-action" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-template-action", function()
		local result = common.execute_aws_command_with_input({ "mgn", "put-template-action" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for remove-source-server-action", function()
		local result = common.execute_aws_command_with_input({ "mgn", "remove-source-server-action" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for remove-template-action", function()
		local result = common.execute_aws_command_with_input({ "mgn", "remove-template-action" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for resume-replication", function()
		local result = common.execute_aws_command_with_input({ "mgn", "resume-replication" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for retry-data-replication", function()
		local result = common.execute_aws_command_with_input({ "mgn", "retry-data-replication" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-export", function()
		local result = common.execute_aws_command_with_input({ "mgn", "start-export" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-import", function()
		local result = common.execute_aws_command_with_input({ "mgn", "start-import" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-replication", function()
		local result = common.execute_aws_command_with_input({ "mgn", "start-replication" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-replication", function()
		local result = common.execute_aws_command_with_input({ "mgn", "stop-replication" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "mgn", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for unarchive-application", function()
		local result = common.execute_aws_command_with_input({ "mgn", "unarchive-application" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for unarchive-wave", function()
		local result = common.execute_aws_command_with_input({ "mgn", "unarchive-wave" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "mgn", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-application", function()
		local result = common.execute_aws_command_with_input({ "mgn", "update-application" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-connector", function()
		local result = common.execute_aws_command_with_input({ "mgn", "update-connector" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-launch-configuration", function()
		local result = common.execute_aws_command_with_input({ "mgn", "update-launch-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-launch-configuration-template", function()
		local result = common.execute_aws_command_with_input({ "mgn", "update-launch-configuration-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-replication-configuration", function()
		local result = common.execute_aws_command_with_input({ "mgn", "update-replication-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-replication-configuration-template", function()
		local result = common.execute_aws_command_with_input({ "mgn", "update-replication-configuration-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-source-server", function()
		local result = common.execute_aws_command_with_input({ "mgn", "update-source-server" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-source-server-replication-type", function()
		local result = common.execute_aws_command_with_input({ "mgn", "update-source-server-replication-type" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-wave", function()
		local result = common.execute_aws_command_with_input({ "mgn", "update-wave" })
		assert.is_true(result.success)
	end)

end)