-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: iotsitewise

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS iotsitewise service testing", function()
	it("should generate a cli skeleton for associate-assets", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "associate-assets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for associate-time-series-to-asset-property", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "associate-time-series-to-asset-property" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-associate-project-assets", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "batch-associate-project-assets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-disassociate-project-assets", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "batch-disassociate-project-assets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-get-asset-property-aggregates", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "batch-get-asset-property-aggregates" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-get-asset-property-value", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "batch-get-asset-property-value" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-get-asset-property-value-history", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "batch-get-asset-property-value-history" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-put-asset-property-value", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "batch-put-asset-property-value" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-access-policy", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "create-access-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-asset", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "create-asset" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-asset-model", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "create-asset-model" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-asset-model-composite-model", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "create-asset-model-composite-model" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-bulk-import-job", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "create-bulk-import-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-dashboard", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "create-dashboard" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-dataset", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "create-dataset" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-gateway", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "create-gateway" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-portal", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "create-portal" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-project", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "create-project" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-access-policy", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "delete-access-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-asset", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "delete-asset" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-asset-model", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "delete-asset-model" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-asset-model-composite-model", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "delete-asset-model-composite-model" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-dashboard", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "delete-dashboard" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-dataset", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "delete-dataset" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-gateway", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "delete-gateway" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-portal", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "delete-portal" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-project", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "delete-project" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-time-series", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "delete-time-series" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-access-policy", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "describe-access-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-action", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "describe-action" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-asset", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "describe-asset" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-asset-composite-model", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "describe-asset-composite-model" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-asset-model", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "describe-asset-model" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-asset-model-composite-model", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "describe-asset-model-composite-model" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-asset-property", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "describe-asset-property" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-bulk-import-job", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "describe-bulk-import-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-dashboard", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "describe-dashboard" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-dataset", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "describe-dataset" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-default-encryption-configuration", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "describe-default-encryption-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-gateway", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "describe-gateway" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-gateway-capability-configuration", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "describe-gateway-capability-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-logging-options", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "describe-logging-options" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-portal", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "describe-portal" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-project", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "describe-project" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-storage-configuration", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "describe-storage-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-time-series", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "describe-time-series" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-assets", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "disassociate-assets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-time-series-from-asset-property", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "disassociate-time-series-from-asset-property" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for execute-action", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "execute-action" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for execute-query", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "execute-query" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-asset-property-aggregates", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "get-asset-property-aggregates" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-asset-property-value", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "get-asset-property-value" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-asset-property-value-history", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "get-asset-property-value-history" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-interpolated-asset-property-values", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "get-interpolated-asset-property-values" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for invoke-assistant", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "invoke-assistant" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-access-policies", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "list-access-policies" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-actions", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "list-actions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-asset-model-composite-models", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "list-asset-model-composite-models" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-asset-model-properties", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "list-asset-model-properties" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-asset-models", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "list-asset-models" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-asset-properties", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "list-asset-properties" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-asset-relationships", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "list-asset-relationships" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-assets", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "list-assets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-associated-assets", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "list-associated-assets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-bulk-import-jobs", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "list-bulk-import-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-composition-relationships", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "list-composition-relationships" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-dashboards", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "list-dashboards" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-datasets", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "list-datasets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-gateways", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "list-gateways" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-portals", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "list-portals" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-project-assets", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "list-project-assets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-projects", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "list-projects" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-time-series", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "list-time-series" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-default-encryption-configuration", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "put-default-encryption-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-logging-options", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "put-logging-options" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-storage-configuration", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "put-storage-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-access-policy", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "update-access-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-asset", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "update-asset" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-asset-model", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "update-asset-model" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-asset-model-composite-model", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "update-asset-model-composite-model" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-asset-property", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "update-asset-property" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-dashboard", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "update-dashboard" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-dataset", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "update-dataset" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-gateway", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "update-gateway" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-gateway-capability-configuration", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "update-gateway-capability-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-portal", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "update-portal" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-project", function()
		local result = common.execute_aws_command_with_input({ "iotsitewise", "update-project" })
		assert.is_true(result.success)
	end)

end)