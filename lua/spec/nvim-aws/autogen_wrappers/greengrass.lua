-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: greengrass

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS greengrass service testing", function()
	it("should generate a cli skeleton for associate-role-to-group", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "associate-role-to-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for associate-service-role-to-account", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "associate-service-role-to-account" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-connector-definition", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "create-connector-definition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-connector-definition-version", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "create-connector-definition-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-core-definition", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "create-core-definition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-core-definition-version", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "create-core-definition-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-deployment", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "create-deployment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-device-definition", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "create-device-definition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-device-definition-version", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "create-device-definition-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-function-definition", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "create-function-definition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-function-definition-version", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "create-function-definition-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-group", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "create-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-group-certificate-authority", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "create-group-certificate-authority" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-group-version", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "create-group-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-logger-definition", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "create-logger-definition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-logger-definition-version", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "create-logger-definition-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-resource-definition", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "create-resource-definition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-resource-definition-version", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "create-resource-definition-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-software-update-job", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "create-software-update-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-subscription-definition", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "create-subscription-definition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-subscription-definition-version", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "create-subscription-definition-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-connector-definition", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "delete-connector-definition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-core-definition", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "delete-core-definition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-device-definition", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "delete-device-definition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-function-definition", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "delete-function-definition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-group", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "delete-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-logger-definition", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "delete-logger-definition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-resource-definition", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "delete-resource-definition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-subscription-definition", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "delete-subscription-definition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-role-from-group", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "disassociate-role-from-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-service-role-from-account", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "disassociate-service-role-from-account" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-associated-role", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "get-associated-role" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-bulk-deployment-status", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "get-bulk-deployment-status" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-connectivity-info", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "get-connectivity-info" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-connector-definition", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "get-connector-definition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-connector-definition-version", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "get-connector-definition-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-core-definition", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "get-core-definition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-core-definition-version", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "get-core-definition-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-deployment-status", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "get-deployment-status" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-device-definition", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "get-device-definition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-device-definition-version", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "get-device-definition-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-function-definition", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "get-function-definition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-function-definition-version", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "get-function-definition-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-group", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "get-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-group-certificate-authority", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "get-group-certificate-authority" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-group-certificate-configuration", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "get-group-certificate-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-group-version", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "get-group-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-logger-definition", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "get-logger-definition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-logger-definition-version", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "get-logger-definition-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-resource-definition", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "get-resource-definition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-resource-definition-version", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "get-resource-definition-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-service-role-for-account", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "get-service-role-for-account" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-subscription-definition", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "get-subscription-definition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-subscription-definition-version", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "get-subscription-definition-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-thing-runtime-configuration", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "get-thing-runtime-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-bulk-deployment-detailed-reports", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "list-bulk-deployment-detailed-reports" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-bulk-deployments", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "list-bulk-deployments" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-connector-definition-versions", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "list-connector-definition-versions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-connector-definitions", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "list-connector-definitions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-core-definition-versions", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "list-core-definition-versions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-core-definitions", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "list-core-definitions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-deployments", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "list-deployments" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-device-definition-versions", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "list-device-definition-versions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-device-definitions", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "list-device-definitions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-function-definition-versions", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "list-function-definition-versions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-function-definitions", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "list-function-definitions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-group-certificate-authorities", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "list-group-certificate-authorities" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-group-versions", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "list-group-versions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-groups", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "list-groups" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-logger-definition-versions", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "list-logger-definition-versions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-logger-definitions", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "list-logger-definitions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-resource-definition-versions", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "list-resource-definition-versions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-resource-definitions", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "list-resource-definitions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-subscription-definition-versions", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "list-subscription-definition-versions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-subscription-definitions", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "list-subscription-definitions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for reset-deployments", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "reset-deployments" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-bulk-deployment", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "start-bulk-deployment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-bulk-deployment", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "stop-bulk-deployment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-connectivity-info", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "update-connectivity-info" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-connector-definition", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "update-connector-definition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-core-definition", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "update-core-definition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-device-definition", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "update-device-definition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-function-definition", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "update-function-definition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-group", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "update-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-group-certificate-configuration", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "update-group-certificate-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-logger-definition", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "update-logger-definition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-resource-definition", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "update-resource-definition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-subscription-definition", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "update-subscription-definition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-thing-runtime-configuration", function()
		local result = common.execute_aws_command_with_input({ "greengrass", "update-thing-runtime-configuration" })
		assert.is_true(result.success)
	end)

end)