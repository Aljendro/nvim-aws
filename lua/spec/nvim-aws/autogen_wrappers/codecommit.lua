-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: codecommit

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS codecommit service testing", function()
	it("should generate a cli skeleton for associate-approval-rule-template-with-repository", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "associate-approval-rule-template-with-repository" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-associate-approval-rule-template-with-repositories", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "batch-associate-approval-rule-template-with-repositories" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-describe-merge-conflicts", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "batch-describe-merge-conflicts" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-disassociate-approval-rule-template-from-repositories", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "batch-disassociate-approval-rule-template-from-repositories" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-get-commits", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "batch-get-commits" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-get-repositories", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "batch-get-repositories" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-approval-rule-template", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "create-approval-rule-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-branch", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "create-branch" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-commit", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "create-commit" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-pull-request", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "create-pull-request" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-pull-request-approval-rule", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "create-pull-request-approval-rule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-repository", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "create-repository" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-unreferenced-merge-commit", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "create-unreferenced-merge-commit" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-approval-rule-template", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "delete-approval-rule-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-branch", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "delete-branch" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-comment-content", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "delete-comment-content" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-file", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "delete-file" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-pull-request-approval-rule", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "delete-pull-request-approval-rule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-repository", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "delete-repository" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-merge-conflicts", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "describe-merge-conflicts" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-pull-request-events", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "describe-pull-request-events" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-approval-rule-template-from-repository", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "disassociate-approval-rule-template-from-repository" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for evaluate-pull-request-approval-rules", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "evaluate-pull-request-approval-rules" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-approval-rule-template", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "get-approval-rule-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-blob", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "get-blob" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-branch", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "get-branch" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-comment", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "get-comment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-comment-reactions", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "get-comment-reactions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-comments-for-compared-commit", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "get-comments-for-compared-commit" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-comments-for-pull-request", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "get-comments-for-pull-request" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-commit", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "get-commit" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-differences", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "get-differences" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-file", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "get-file" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-folder", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "get-folder" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-merge-commit", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "get-merge-commit" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-merge-conflicts", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "get-merge-conflicts" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-merge-options", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "get-merge-options" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-pull-request", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "get-pull-request" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-pull-request-approval-states", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "get-pull-request-approval-states" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-pull-request-override-state", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "get-pull-request-override-state" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-repository", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "get-repository" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-repository-triggers", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "get-repository-triggers" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-approval-rule-templates", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "list-approval-rule-templates" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-associated-approval-rule-templates-for-repository", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "list-associated-approval-rule-templates-for-repository" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-branches", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "list-branches" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-file-commit-history", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "list-file-commit-history" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-pull-requests", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "list-pull-requests" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-repositories", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "list-repositories" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-repositories-for-approval-rule-template", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "list-repositories-for-approval-rule-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for merge-branches-by-fast-forward", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "merge-branches-by-fast-forward" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for merge-branches-by-squash", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "merge-branches-by-squash" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for merge-branches-by-three-way", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "merge-branches-by-three-way" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for merge-pull-request-by-fast-forward", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "merge-pull-request-by-fast-forward" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for merge-pull-request-by-squash", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "merge-pull-request-by-squash" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for merge-pull-request-by-three-way", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "merge-pull-request-by-three-way" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for override-pull-request-approval-rules", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "override-pull-request-approval-rules" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for post-comment-for-compared-commit", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "post-comment-for-compared-commit" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for post-comment-for-pull-request", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "post-comment-for-pull-request" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for post-comment-reply", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "post-comment-reply" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-comment-reaction", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "put-comment-reaction" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-file", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "put-file" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-repository-triggers", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "put-repository-triggers" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for test-repository-triggers", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "test-repository-triggers" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-approval-rule-template-content", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "update-approval-rule-template-content" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-approval-rule-template-description", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "update-approval-rule-template-description" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-approval-rule-template-name", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "update-approval-rule-template-name" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-comment", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "update-comment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-default-branch", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "update-default-branch" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-pull-request-approval-rule-content", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "update-pull-request-approval-rule-content" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-pull-request-approval-state", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "update-pull-request-approval-state" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-pull-request-description", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "update-pull-request-description" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-pull-request-status", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "update-pull-request-status" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-pull-request-title", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "update-pull-request-title" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-repository-description", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "update-repository-description" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-repository-encryption-key", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "update-repository-encryption-key" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-repository-name", function()
		local result = common.execute_aws_command_with_input({ "codecommit", "update-repository-name" })
		assert.is_true(result.success)
	end)

end)