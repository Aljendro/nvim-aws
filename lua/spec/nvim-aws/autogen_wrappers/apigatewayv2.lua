-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: apigatewayv2

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS apigatewayv2 service testing", function()
	it("should generate a cli skeleton for create-api", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "create-api" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-api-mapping", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "create-api-mapping" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-authorizer", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "create-authorizer" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-deployment", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "create-deployment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-domain-name", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "create-domain-name" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-integration", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "create-integration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-integration-response", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "create-integration-response" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-model", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "create-model" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-route", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "create-route" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-route-response", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "create-route-response" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-stage", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "create-stage" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-vpc-link", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "create-vpc-link" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-access-log-settings", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "delete-access-log-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-api", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "delete-api" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-api-mapping", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "delete-api-mapping" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-authorizer", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "delete-authorizer" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-cors-configuration", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "delete-cors-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-deployment", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "delete-deployment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-domain-name", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "delete-domain-name" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-integration", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "delete-integration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-integration-response", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "delete-integration-response" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-model", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "delete-model" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-route", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "delete-route" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-route-request-parameter", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "delete-route-request-parameter" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-route-response", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "delete-route-response" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-route-settings", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "delete-route-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-stage", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "delete-stage" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-vpc-link", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "delete-vpc-link" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for export-api", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "export-api" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-api", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "get-api" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-api-mapping", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "get-api-mapping" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-api-mappings", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "get-api-mappings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-apis", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "get-apis" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-authorizer", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "get-authorizer" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-authorizers", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "get-authorizers" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-deployment", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "get-deployment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-deployments", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "get-deployments" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-domain-name", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "get-domain-name" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-domain-names", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "get-domain-names" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-integration", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "get-integration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-integration-response", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "get-integration-response" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-integration-responses", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "get-integration-responses" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-integrations", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "get-integrations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-model", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "get-model" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-model-template", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "get-model-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-models", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "get-models" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-route", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "get-route" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-route-response", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "get-route-response" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-route-responses", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "get-route-responses" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-routes", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "get-routes" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-stage", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "get-stage" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-stages", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "get-stages" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-tags", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "get-tags" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-vpc-link", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "get-vpc-link" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-vpc-links", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "get-vpc-links" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for import-api", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "import-api" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for reimport-api", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "reimport-api" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for reset-authorizers-cache", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "reset-authorizers-cache" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-api", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "update-api" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-api-mapping", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "update-api-mapping" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-authorizer", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "update-authorizer" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-deployment", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "update-deployment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-domain-name", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "update-domain-name" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-integration", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "update-integration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-integration-response", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "update-integration-response" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-model", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "update-model" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-route", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "update-route" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-route-response", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "update-route-response" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-stage", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "update-stage" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-vpc-link", function()
		local result = common.execute_aws_command_with_input({ "apigatewayv2", "update-vpc-link" })
		assert.is_true(result.success)
	end)

end)