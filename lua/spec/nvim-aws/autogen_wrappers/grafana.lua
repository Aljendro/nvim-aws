-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: grafana

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS grafana service testing", function()
	it("should generate a cli skeleton for associate-license", function()
		local result = common.execute_aws_command_with_input({ "grafana", "associate-license" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-workspace", function()
		local result = common.execute_aws_command_with_input({ "grafana", "create-workspace" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-workspace-api-key", function()
		local result = common.execute_aws_command_with_input({ "grafana", "create-workspace-api-key" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-workspace-service-account", function()
		local result = common.execute_aws_command_with_input({ "grafana", "create-workspace-service-account" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-workspace-service-account-token", function()
		local result = common.execute_aws_command_with_input({ "grafana", "create-workspace-service-account-token" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-workspace", function()
		local result = common.execute_aws_command_with_input({ "grafana", "delete-workspace" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-workspace-api-key", function()
		local result = common.execute_aws_command_with_input({ "grafana", "delete-workspace-api-key" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-workspace-service-account", function()
		local result = common.execute_aws_command_with_input({ "grafana", "delete-workspace-service-account" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-workspace-service-account-token", function()
		local result = common.execute_aws_command_with_input({ "grafana", "delete-workspace-service-account-token" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-workspace", function()
		local result = common.execute_aws_command_with_input({ "grafana", "describe-workspace" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-workspace-authentication", function()
		local result = common.execute_aws_command_with_input({ "grafana", "describe-workspace-authentication" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-workspace-configuration", function()
		local result = common.execute_aws_command_with_input({ "grafana", "describe-workspace-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-license", function()
		local result = common.execute_aws_command_with_input({ "grafana", "disassociate-license" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-permissions", function()
		local result = common.execute_aws_command_with_input({ "grafana", "list-permissions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "grafana", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-versions", function()
		local result = common.execute_aws_command_with_input({ "grafana", "list-versions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-workspace-service-account-tokens", function()
		local result = common.execute_aws_command_with_input({ "grafana", "list-workspace-service-account-tokens" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-workspace-service-accounts", function()
		local result = common.execute_aws_command_with_input({ "grafana", "list-workspace-service-accounts" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-workspaces", function()
		local result = common.execute_aws_command_with_input({ "grafana", "list-workspaces" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "grafana", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "grafana", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-permissions", function()
		local result = common.execute_aws_command_with_input({ "grafana", "update-permissions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-workspace", function()
		local result = common.execute_aws_command_with_input({ "grafana", "update-workspace" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-workspace-authentication", function()
		local result = common.execute_aws_command_with_input({ "grafana", "update-workspace-authentication" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-workspace-configuration", function()
		local result = common.execute_aws_command_with_input({ "grafana", "update-workspace-configuration" })
		assert.is_true(result.success)
	end)

end)