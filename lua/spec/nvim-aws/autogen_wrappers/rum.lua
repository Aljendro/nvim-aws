-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: rum

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS rum service testing", function()
	it("should generate a cli skeleton for batch-create-rum-metric-definitions", function()
		local result = common.execute_aws_command_with_input({ "rum", "batch-create-rum-metric-definitions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-delete-rum-metric-definitions", function()
		local result = common.execute_aws_command_with_input({ "rum", "batch-delete-rum-metric-definitions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-get-rum-metric-definitions", function()
		local result = common.execute_aws_command_with_input({ "rum", "batch-get-rum-metric-definitions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-app-monitor", function()
		local result = common.execute_aws_command_with_input({ "rum", "create-app-monitor" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-app-monitor", function()
		local result = common.execute_aws_command_with_input({ "rum", "delete-app-monitor" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-resource-policy", function()
		local result = common.execute_aws_command_with_input({ "rum", "delete-resource-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-rum-metrics-destination", function()
		local result = common.execute_aws_command_with_input({ "rum", "delete-rum-metrics-destination" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-app-monitor", function()
		local result = common.execute_aws_command_with_input({ "rum", "get-app-monitor" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-app-monitor-data", function()
		local result = common.execute_aws_command_with_input({ "rum", "get-app-monitor-data" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-resource-policy", function()
		local result = common.execute_aws_command_with_input({ "rum", "get-resource-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-app-monitors", function()
		local result = common.execute_aws_command_with_input({ "rum", "list-app-monitors" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-rum-metrics-destinations", function()
		local result = common.execute_aws_command_with_input({ "rum", "list-rum-metrics-destinations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "rum", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-resource-policy", function()
		local result = common.execute_aws_command_with_input({ "rum", "put-resource-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-rum-events", function()
		local result = common.execute_aws_command_with_input({ "rum", "put-rum-events" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-rum-metrics-destination", function()
		local result = common.execute_aws_command_with_input({ "rum", "put-rum-metrics-destination" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "rum", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "rum", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-app-monitor", function()
		local result = common.execute_aws_command_with_input({ "rum", "update-app-monitor" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-rum-metric-definition", function()
		local result = common.execute_aws_command_with_input({ "rum", "update-rum-metric-definition" })
		assert.is_true(result.success)
	end)

end)