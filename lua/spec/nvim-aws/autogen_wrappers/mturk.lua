-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: mturk

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS mturk service testing", function()
	it("should generate a cli skeleton for accept-qualification-request", function()
		local result = common.execute_aws_command_with_input({ "mturk", "accept-qualification-request" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for approve-assignment", function()
		local result = common.execute_aws_command_with_input({ "mturk", "approve-assignment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for associate-qualification-with-worker", function()
		local result = common.execute_aws_command_with_input({ "mturk", "associate-qualification-with-worker" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-additional-assignments-for-hit", function()
		local result = common.execute_aws_command_with_input({ "mturk", "create-additional-assignments-for-hit" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-hit", function()
		local result = common.execute_aws_command_with_input({ "mturk", "create-hit" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-hit-type", function()
		local result = common.execute_aws_command_with_input({ "mturk", "create-hit-type" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-hit-with-hit-type", function()
		local result = common.execute_aws_command_with_input({ "mturk", "create-hit-with-hit-type" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-qualification-type", function()
		local result = common.execute_aws_command_with_input({ "mturk", "create-qualification-type" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-worker-block", function()
		local result = common.execute_aws_command_with_input({ "mturk", "create-worker-block" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-hit", function()
		local result = common.execute_aws_command_with_input({ "mturk", "delete-hit" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-qualification-type", function()
		local result = common.execute_aws_command_with_input({ "mturk", "delete-qualification-type" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-worker-block", function()
		local result = common.execute_aws_command_with_input({ "mturk", "delete-worker-block" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-qualification-from-worker", function()
		local result = common.execute_aws_command_with_input({ "mturk", "disassociate-qualification-from-worker" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-account-balance", function()
		local result = common.execute_aws_command_with_input({ "mturk", "get-account-balance" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-assignment", function()
		local result = common.execute_aws_command_with_input({ "mturk", "get-assignment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-file-upload-url", function()
		local result = common.execute_aws_command_with_input({ "mturk", "get-file-upload-url" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-hit", function()
		local result = common.execute_aws_command_with_input({ "mturk", "get-hit" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-qualification-score", function()
		local result = common.execute_aws_command_with_input({ "mturk", "get-qualification-score" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-qualification-type", function()
		local result = common.execute_aws_command_with_input({ "mturk", "get-qualification-type" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-assignments-for-hit", function()
		local result = common.execute_aws_command_with_input({ "mturk", "list-assignments-for-hit" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-bonus-payments", function()
		local result = common.execute_aws_command_with_input({ "mturk", "list-bonus-payments" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-hi-ts", function()
		local result = common.execute_aws_command_with_input({ "mturk", "list-hi-ts" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-hi-ts-for-qualification-type", function()
		local result = common.execute_aws_command_with_input({ "mturk", "list-hi-ts-for-qualification-type" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-qualification-requests", function()
		local result = common.execute_aws_command_with_input({ "mturk", "list-qualification-requests" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-qualification-types", function()
		local result = common.execute_aws_command_with_input({ "mturk", "list-qualification-types" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-review-policy-results-for-hit", function()
		local result = common.execute_aws_command_with_input({ "mturk", "list-review-policy-results-for-hit" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-reviewable-hi-ts", function()
		local result = common.execute_aws_command_with_input({ "mturk", "list-reviewable-hi-ts" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-worker-blocks", function()
		local result = common.execute_aws_command_with_input({ "mturk", "list-worker-blocks" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-workers-with-qualification-type", function()
		local result = common.execute_aws_command_with_input({ "mturk", "list-workers-with-qualification-type" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for notify-workers", function()
		local result = common.execute_aws_command_with_input({ "mturk", "notify-workers" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for reject-assignment", function()
		local result = common.execute_aws_command_with_input({ "mturk", "reject-assignment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for reject-qualification-request", function()
		local result = common.execute_aws_command_with_input({ "mturk", "reject-qualification-request" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for send-bonus", function()
		local result = common.execute_aws_command_with_input({ "mturk", "send-bonus" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for send-test-event-notification", function()
		local result = common.execute_aws_command_with_input({ "mturk", "send-test-event-notification" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-expiration-for-hit", function()
		local result = common.execute_aws_command_with_input({ "mturk", "update-expiration-for-hit" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-hit-review-status", function()
		local result = common.execute_aws_command_with_input({ "mturk", "update-hit-review-status" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-hit-type-of-hit", function()
		local result = common.execute_aws_command_with_input({ "mturk", "update-hit-type-of-hit" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-notification-settings", function()
		local result = common.execute_aws_command_with_input({ "mturk", "update-notification-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-qualification-type", function()
		local result = common.execute_aws_command_with_input({ "mturk", "update-qualification-type" })
		assert.is_true(result.success)
	end)

end)