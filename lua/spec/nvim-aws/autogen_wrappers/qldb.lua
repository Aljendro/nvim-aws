-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: qldb

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS qldb service testing", function()
	it("should generate a cli skeleton for cancel-journal-kinesis-stream", function()
		local result = common.execute_aws_command_with_input({ "qldb", "cancel-journal-kinesis-stream" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-ledger", function()
		local result = common.execute_aws_command_with_input({ "qldb", "create-ledger" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-ledger", function()
		local result = common.execute_aws_command_with_input({ "qldb", "delete-ledger" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-journal-kinesis-stream", function()
		local result = common.execute_aws_command_with_input({ "qldb", "describe-journal-kinesis-stream" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-journal-s3-export", function()
		local result = common.execute_aws_command_with_input({ "qldb", "describe-journal-s3-export" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-ledger", function()
		local result = common.execute_aws_command_with_input({ "qldb", "describe-ledger" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for export-journal-to-s3", function()
		local result = common.execute_aws_command_with_input({ "qldb", "export-journal-to-s3" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-block", function()
		local result = common.execute_aws_command_with_input({ "qldb", "get-block" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-digest", function()
		local result = common.execute_aws_command_with_input({ "qldb", "get-digest" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-revision", function()
		local result = common.execute_aws_command_with_input({ "qldb", "get-revision" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-journal-kinesis-streams-for-ledger", function()
		local result = common.execute_aws_command_with_input({ "qldb", "list-journal-kinesis-streams-for-ledger" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-journal-s3-exports", function()
		local result = common.execute_aws_command_with_input({ "qldb", "list-journal-s3-exports" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-journal-s3-exports-for-ledger", function()
		local result = common.execute_aws_command_with_input({ "qldb", "list-journal-s3-exports-for-ledger" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-ledgers", function()
		local result = common.execute_aws_command_with_input({ "qldb", "list-ledgers" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "qldb", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stream-journal-to-kinesis", function()
		local result = common.execute_aws_command_with_input({ "qldb", "stream-journal-to-kinesis" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "qldb", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "qldb", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-ledger", function()
		local result = common.execute_aws_command_with_input({ "qldb", "update-ledger" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-ledger-permissions-mode", function()
		local result = common.execute_aws_command_with_input({ "qldb", "update-ledger-permissions-mode" })
		assert.is_true(result.success)
	end)

end)