-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: codestar-connections

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS codestar-connections service testing", function()
	it("should generate a cli skeleton for create-connection", function()
		local result = common.execute_aws_command_with_input({ "codestar-connections", "create-connection" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-host", function()
		local result = common.execute_aws_command_with_input({ "codestar-connections", "create-host" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-repository-link", function()
		local result = common.execute_aws_command_with_input({ "codestar-connections", "create-repository-link" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-sync-configuration", function()
		local result = common.execute_aws_command_with_input({ "codestar-connections", "create-sync-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-connection", function()
		local result = common.execute_aws_command_with_input({ "codestar-connections", "delete-connection" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-host", function()
		local result = common.execute_aws_command_with_input({ "codestar-connections", "delete-host" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-repository-link", function()
		local result = common.execute_aws_command_with_input({ "codestar-connections", "delete-repository-link" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-sync-configuration", function()
		local result = common.execute_aws_command_with_input({ "codestar-connections", "delete-sync-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-connection", function()
		local result = common.execute_aws_command_with_input({ "codestar-connections", "get-connection" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-host", function()
		local result = common.execute_aws_command_with_input({ "codestar-connections", "get-host" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-repository-link", function()
		local result = common.execute_aws_command_with_input({ "codestar-connections", "get-repository-link" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-repository-sync-status", function()
		local result = common.execute_aws_command_with_input({ "codestar-connections", "get-repository-sync-status" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-resource-sync-status", function()
		local result = common.execute_aws_command_with_input({ "codestar-connections", "get-resource-sync-status" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-sync-blocker-summary", function()
		local result = common.execute_aws_command_with_input({ "codestar-connections", "get-sync-blocker-summary" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-sync-configuration", function()
		local result = common.execute_aws_command_with_input({ "codestar-connections", "get-sync-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-connections", function()
		local result = common.execute_aws_command_with_input({ "codestar-connections", "list-connections" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-hosts", function()
		local result = common.execute_aws_command_with_input({ "codestar-connections", "list-hosts" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-repository-links", function()
		local result = common.execute_aws_command_with_input({ "codestar-connections", "list-repository-links" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-repository-sync-definitions", function()
		local result = common.execute_aws_command_with_input({ "codestar-connections", "list-repository-sync-definitions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-sync-configurations", function()
		local result = common.execute_aws_command_with_input({ "codestar-connections", "list-sync-configurations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "codestar-connections", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "codestar-connections", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "codestar-connections", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-host", function()
		local result = common.execute_aws_command_with_input({ "codestar-connections", "update-host" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-repository-link", function()
		local result = common.execute_aws_command_with_input({ "codestar-connections", "update-repository-link" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-sync-blocker", function()
		local result = common.execute_aws_command_with_input({ "codestar-connections", "update-sync-blocker" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-sync-configuration", function()
		local result = common.execute_aws_command_with_input({ "codestar-connections", "update-sync-configuration" })
		assert.is_true(result.success)
	end)

end)