-- AUTOGENERATED FILE - DO NOT EDIT
-- AWS Service: iotwireless

require("nvim-aws").setup()
local service = require("nvim-aws.autogen_wrappers.iotwireless")

describe("AWS iotwireless service testing", function()
	it("should generate a cli skeleton with associate_aws_account_with_partner_account", function()
		local result = service.associate_aws_account_with_partner_account()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with associate_multicast_group_with_fuota_task", function()
		local result = service.associate_multicast_group_with_fuota_task()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with associate_wireless_device_with_fuota_task", function()
		local result = service.associate_wireless_device_with_fuota_task()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with associate_wireless_device_with_multicast_group", function()
		local result = service.associate_wireless_device_with_multicast_group()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with associate_wireless_device_with_thing", function()
		local result = service.associate_wireless_device_with_thing()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with associate_wireless_gateway_with_certificate", function()
		local result = service.associate_wireless_gateway_with_certificate()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with associate_wireless_gateway_with_thing", function()
		local result = service.associate_wireless_gateway_with_thing()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with cancel_multicast_group_session", function()
		local result = service.cancel_multicast_group_session()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with create_destination", function()
		local result = service.create_destination()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with create_device_profile", function()
		local result = service.create_device_profile()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with create_fuota_task", function()
		local result = service.create_fuota_task()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with create_multicast_group", function()
		local result = service.create_multicast_group()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with create_network_analyzer_configuration", function()
		local result = service.create_network_analyzer_configuration()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with create_service_profile", function()
		local result = service.create_service_profile()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with create_wireless_device", function()
		local result = service.create_wireless_device()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with create_wireless_gateway", function()
		local result = service.create_wireless_gateway()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with create_wireless_gateway_task", function()
		local result = service.create_wireless_gateway_task()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with create_wireless_gateway_task_definition", function()
		local result = service.create_wireless_gateway_task_definition()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with delete_destination", function()
		local result = service.delete_destination()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with delete_device_profile", function()
		local result = service.delete_device_profile()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with delete_fuota_task", function()
		local result = service.delete_fuota_task()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with delete_multicast_group", function()
		local result = service.delete_multicast_group()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with delete_network_analyzer_configuration", function()
		local result = service.delete_network_analyzer_configuration()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with delete_queued_messages", function()
		local result = service.delete_queued_messages()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with delete_service_profile", function()
		local result = service.delete_service_profile()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with delete_wireless_device", function()
		local result = service.delete_wireless_device()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with delete_wireless_device_import_task", function()
		local result = service.delete_wireless_device_import_task()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with delete_wireless_gateway", function()
		local result = service.delete_wireless_gateway()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with delete_wireless_gateway_task", function()
		local result = service.delete_wireless_gateway_task()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with delete_wireless_gateway_task_definition", function()
		local result = service.delete_wireless_gateway_task_definition()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with deregister_wireless_device", function()
		local result = service.deregister_wireless_device()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with disassociate_aws_account_from_partner_account", function()
		local result = service.disassociate_aws_account_from_partner_account()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with disassociate_multicast_group_from_fuota_task", function()
		local result = service.disassociate_multicast_group_from_fuota_task()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with disassociate_wireless_device_from_fuota_task", function()
		local result = service.disassociate_wireless_device_from_fuota_task()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with disassociate_wireless_device_from_multicast_group", function()
		local result = service.disassociate_wireless_device_from_multicast_group()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with disassociate_wireless_device_from_thing", function()
		local result = service.disassociate_wireless_device_from_thing()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with disassociate_wireless_gateway_from_certificate", function()
		local result = service.disassociate_wireless_gateway_from_certificate()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with disassociate_wireless_gateway_from_thing", function()
		local result = service.disassociate_wireless_gateway_from_thing()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with get_destination", function()
		local result = service.get_destination()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with get_device_profile", function()
		local result = service.get_device_profile()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with get_event_configuration_by_resource_types", function()
		local result = service.get_event_configuration_by_resource_types()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with get_fuota_task", function()
		local result = service.get_fuota_task()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with get_log_levels_by_resource_types", function()
		local result = service.get_log_levels_by_resource_types()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with get_metric_configuration", function()
		local result = service.get_metric_configuration()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with get_metrics", function()
		local result = service.get_metrics()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with get_multicast_group", function()
		local result = service.get_multicast_group()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with get_multicast_group_session", function()
		local result = service.get_multicast_group_session()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with get_network_analyzer_configuration", function()
		local result = service.get_network_analyzer_configuration()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with get_partner_account", function()
		local result = service.get_partner_account()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with get_resource_event_configuration", function()
		local result = service.get_resource_event_configuration()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with get_resource_log_level", function()
		local result = service.get_resource_log_level()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with get_service_endpoint", function()
		local result = service.get_service_endpoint()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with get_service_profile", function()
		local result = service.get_service_profile()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with get_wireless_device", function()
		local result = service.get_wireless_device()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with get_wireless_device_import_task", function()
		local result = service.get_wireless_device_import_task()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with get_wireless_device_statistics", function()
		local result = service.get_wireless_device_statistics()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with get_wireless_gateway", function()
		local result = service.get_wireless_gateway()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with get_wireless_gateway_certificate", function()
		local result = service.get_wireless_gateway_certificate()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with get_wireless_gateway_firmware_information", function()
		local result = service.get_wireless_gateway_firmware_information()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with get_wireless_gateway_statistics", function()
		local result = service.get_wireless_gateway_statistics()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with get_wireless_gateway_task", function()
		local result = service.get_wireless_gateway_task()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with get_wireless_gateway_task_definition", function()
		local result = service.get_wireless_gateway_task_definition()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with list_destinations", function()
		local result = service.list_destinations()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with list_device_profiles", function()
		local result = service.list_device_profiles()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with list_devices_for_wireless_device_import_task", function()
		local result = service.list_devices_for_wireless_device_import_task()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with list_event_configurations", function()
		local result = service.list_event_configurations()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with list_fuota_tasks", function()
		local result = service.list_fuota_tasks()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with list_multicast_groups", function()
		local result = service.list_multicast_groups()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with list_multicast_groups_by_fuota_task", function()
		local result = service.list_multicast_groups_by_fuota_task()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with list_network_analyzer_configurations", function()
		local result = service.list_network_analyzer_configurations()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with list_partner_accounts", function()
		local result = service.list_partner_accounts()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with list_queued_messages", function()
		local result = service.list_queued_messages()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with list_service_profiles", function()
		local result = service.list_service_profiles()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with list_tags_for_resource", function()
		local result = service.list_tags_for_resource()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with list_wireless_device_import_tasks", function()
		local result = service.list_wireless_device_import_tasks()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with list_wireless_devices", function()
		local result = service.list_wireless_devices()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with list_wireless_gateway_task_definitions", function()
		local result = service.list_wireless_gateway_task_definitions()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with list_wireless_gateways", function()
		local result = service.list_wireless_gateways()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with put_resource_log_level", function()
		local result = service.put_resource_log_level()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with reset_all_resource_log_levels", function()
		local result = service.reset_all_resource_log_levels()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with reset_resource_log_level", function()
		local result = service.reset_resource_log_level()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with send_data_to_multicast_group", function()
		local result = service.send_data_to_multicast_group()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with send_data_to_wireless_device", function()
		local result = service.send_data_to_wireless_device()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with start_bulk_associate_wireless_device_with_multicast_group", function()
		local result = service.start_bulk_associate_wireless_device_with_multicast_group()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with start_bulk_disassociate_wireless_device_from_multicast_group", function()
		local result = service.start_bulk_disassociate_wireless_device_from_multicast_group()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with start_fuota_task", function()
		local result = service.start_fuota_task()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with start_multicast_group_session", function()
		local result = service.start_multicast_group_session()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with start_single_wireless_device_import_task", function()
		local result = service.start_single_wireless_device_import_task()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with start_wireless_device_import_task", function()
		local result = service.start_wireless_device_import_task()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with tag_resource", function()
		local result = service.tag_resource()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with test_wireless_device", function()
		local result = service.test_wireless_device()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with untag_resource", function()
		local result = service.untag_resource()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with update_destination", function()
		local result = service.update_destination()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with update_event_configuration_by_resource_types", function()
		local result = service.update_event_configuration_by_resource_types()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with update_fuota_task", function()
		local result = service.update_fuota_task()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with update_log_levels_by_resource_types", function()
		local result = service.update_log_levels_by_resource_types()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with update_metric_configuration", function()
		local result = service.update_metric_configuration()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with update_multicast_group", function()
		local result = service.update_multicast_group()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with update_network_analyzer_configuration", function()
		local result = service.update_network_analyzer_configuration()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with update_partner_account", function()
		local result = service.update_partner_account()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with update_resource_event_configuration", function()
		local result = service.update_resource_event_configuration()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with update_resource_position", function()
		local result = service.update_resource_position()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with update_wireless_device", function()
		local result = service.update_wireless_device()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with update_wireless_device_import_task", function()
		local result = service.update_wireless_device_import_task()
		assert.is_true(result.success)
	end)
	it("should generate a cli skeleton with update_wireless_gateway", function()
		local result = service.update_wireless_gateway()
		assert.is_true(result.success)
	end)
end)