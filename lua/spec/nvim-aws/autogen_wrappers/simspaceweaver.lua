-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: simspaceweaver

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS simspaceweaver service testing", function()
	it("should generate a cli skeleton for create-snapshot", function()
		local result = common.execute_aws_command_with_input({ "simspaceweaver", "create-snapshot" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-app", function()
		local result = common.execute_aws_command_with_input({ "simspaceweaver", "delete-app" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-simulation", function()
		local result = common.execute_aws_command_with_input({ "simspaceweaver", "delete-simulation" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-app", function()
		local result = common.execute_aws_command_with_input({ "simspaceweaver", "describe-app" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-simulation", function()
		local result = common.execute_aws_command_with_input({ "simspaceweaver", "describe-simulation" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-apps", function()
		local result = common.execute_aws_command_with_input({ "simspaceweaver", "list-apps" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-simulations", function()
		local result = common.execute_aws_command_with_input({ "simspaceweaver", "list-simulations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "simspaceweaver", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-app", function()
		local result = common.execute_aws_command_with_input({ "simspaceweaver", "start-app" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-clock", function()
		local result = common.execute_aws_command_with_input({ "simspaceweaver", "start-clock" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-simulation", function()
		local result = common.execute_aws_command_with_input({ "simspaceweaver", "start-simulation" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-app", function()
		local result = common.execute_aws_command_with_input({ "simspaceweaver", "stop-app" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-clock", function()
		local result = common.execute_aws_command_with_input({ "simspaceweaver", "stop-clock" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-simulation", function()
		local result = common.execute_aws_command_with_input({ "simspaceweaver", "stop-simulation" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "simspaceweaver", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "simspaceweaver", "untag-resource" })
		assert.is_true(result.success)
	end)

end)