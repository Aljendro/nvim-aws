-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: workspaces-thin-client

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS workspaces-thin-client service testing", function()
	it("should generate a cli skeleton for create-environment", function()
		local result = common.execute_aws_command_with_input({ "workspaces-thin-client", "create-environment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-device", function()
		local result = common.execute_aws_command_with_input({ "workspaces-thin-client", "delete-device" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-environment", function()
		local result = common.execute_aws_command_with_input({ "workspaces-thin-client", "delete-environment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for deregister-device", function()
		local result = common.execute_aws_command_with_input({ "workspaces-thin-client", "deregister-device" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-device", function()
		local result = common.execute_aws_command_with_input({ "workspaces-thin-client", "get-device" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-environment", function()
		local result = common.execute_aws_command_with_input({ "workspaces-thin-client", "get-environment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-software-set", function()
		local result = common.execute_aws_command_with_input({ "workspaces-thin-client", "get-software-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-devices", function()
		local result = common.execute_aws_command_with_input({ "workspaces-thin-client", "list-devices" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-environments", function()
		local result = common.execute_aws_command_with_input({ "workspaces-thin-client", "list-environments" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-software-sets", function()
		local result = common.execute_aws_command_with_input({ "workspaces-thin-client", "list-software-sets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "workspaces-thin-client", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "workspaces-thin-client", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "workspaces-thin-client", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-device", function()
		local result = common.execute_aws_command_with_input({ "workspaces-thin-client", "update-device" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-environment", function()
		local result = common.execute_aws_command_with_input({ "workspaces-thin-client", "update-environment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-software-set", function()
		local result = common.execute_aws_command_with_input({ "workspaces-thin-client", "update-software-set" })
		assert.is_true(result.success)
	end)

end)