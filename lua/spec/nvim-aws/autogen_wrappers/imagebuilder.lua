-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: imagebuilder

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS imagebuilder service testing", function()
	it("should generate a cli skeleton for cancel-image-creation", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "cancel-image-creation" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for cancel-lifecycle-execution", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "cancel-lifecycle-execution" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-component", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "create-component" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-container-recipe", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "create-container-recipe" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-distribution-configuration", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "create-distribution-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-image", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "create-image" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-image-pipeline", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "create-image-pipeline" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-image-recipe", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "create-image-recipe" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-infrastructure-configuration", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "create-infrastructure-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-lifecycle-policy", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "create-lifecycle-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-workflow", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "create-workflow" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-component", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "delete-component" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-container-recipe", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "delete-container-recipe" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-distribution-configuration", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "delete-distribution-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-image", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "delete-image" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-image-pipeline", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "delete-image-pipeline" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-image-recipe", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "delete-image-recipe" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-infrastructure-configuration", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "delete-infrastructure-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-lifecycle-policy", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "delete-lifecycle-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-workflow", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "delete-workflow" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-component", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "get-component" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-component-policy", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "get-component-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-container-recipe", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "get-container-recipe" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-container-recipe-policy", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "get-container-recipe-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-distribution-configuration", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "get-distribution-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-image", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "get-image" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-image-pipeline", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "get-image-pipeline" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-image-policy", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "get-image-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-image-recipe", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "get-image-recipe" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-image-recipe-policy", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "get-image-recipe-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-infrastructure-configuration", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "get-infrastructure-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-lifecycle-execution", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "get-lifecycle-execution" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-lifecycle-policy", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "get-lifecycle-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-marketplace-resource", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "get-marketplace-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-workflow", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "get-workflow" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-workflow-execution", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "get-workflow-execution" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-workflow-step-execution", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "get-workflow-step-execution" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for import-component", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "import-component" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for import-disk-image", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "import-disk-image" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for import-vm-image", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "import-vm-image" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-component-build-versions", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "list-component-build-versions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-components", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "list-components" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-container-recipes", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "list-container-recipes" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-distribution-configurations", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "list-distribution-configurations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-image-build-versions", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "list-image-build-versions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-image-packages", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "list-image-packages" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-image-pipeline-images", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "list-image-pipeline-images" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-image-pipelines", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "list-image-pipelines" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-image-recipes", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "list-image-recipes" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-image-scan-finding-aggregations", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "list-image-scan-finding-aggregations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-image-scan-findings", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "list-image-scan-findings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-images", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "list-images" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-infrastructure-configurations", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "list-infrastructure-configurations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-lifecycle-execution-resources", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "list-lifecycle-execution-resources" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-lifecycle-executions", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "list-lifecycle-executions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-lifecycle-policies", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "list-lifecycle-policies" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-waiting-workflow-steps", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "list-waiting-workflow-steps" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-workflow-build-versions", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "list-workflow-build-versions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-workflow-executions", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "list-workflow-executions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-workflow-step-executions", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "list-workflow-step-executions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-workflows", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "list-workflows" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-component-policy", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "put-component-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-container-recipe-policy", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "put-container-recipe-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-image-policy", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "put-image-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-image-recipe-policy", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "put-image-recipe-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for send-workflow-step-action", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "send-workflow-step-action" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-image-pipeline-execution", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "start-image-pipeline-execution" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-resource-state-update", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "start-resource-state-update" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-distribution-configuration", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "update-distribution-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-image-pipeline", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "update-image-pipeline" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-infrastructure-configuration", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "update-infrastructure-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-lifecycle-policy", function()
		local result = common.execute_aws_command_with_input({ "imagebuilder", "update-lifecycle-policy" })
		assert.is_true(result.success)
	end)

end)