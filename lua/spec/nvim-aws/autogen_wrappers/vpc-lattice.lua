-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: vpc-lattice

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS vpc-lattice service testing", function()
	it("should generate a cli skeleton for batch-update-rule", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "batch-update-rule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-access-log-subscription", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "create-access-log-subscription" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-listener", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "create-listener" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-resource-configuration", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "create-resource-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-resource-gateway", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "create-resource-gateway" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-rule", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "create-rule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-service", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "create-service" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-service-network", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "create-service-network" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-service-network-resource-association", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "create-service-network-resource-association" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-service-network-service-association", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "create-service-network-service-association" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-service-network-vpc-association", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "create-service-network-vpc-association" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-target-group", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "create-target-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-access-log-subscription", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "delete-access-log-subscription" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-auth-policy", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "delete-auth-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-listener", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "delete-listener" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-resource-configuration", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "delete-resource-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-resource-endpoint-association", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "delete-resource-endpoint-association" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-resource-gateway", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "delete-resource-gateway" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-resource-policy", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "delete-resource-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-rule", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "delete-rule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-service", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "delete-service" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-service-network", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "delete-service-network" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-service-network-resource-association", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "delete-service-network-resource-association" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-service-network-service-association", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "delete-service-network-service-association" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-service-network-vpc-association", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "delete-service-network-vpc-association" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-target-group", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "delete-target-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for deregister-targets", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "deregister-targets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-access-log-subscription", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "get-access-log-subscription" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-auth-policy", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "get-auth-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-listener", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "get-listener" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-resource-configuration", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "get-resource-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-resource-gateway", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "get-resource-gateway" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-resource-policy", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "get-resource-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-rule", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "get-rule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-service", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "get-service" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-service-network", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "get-service-network" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-service-network-resource-association", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "get-service-network-resource-association" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-service-network-service-association", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "get-service-network-service-association" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-service-network-vpc-association", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "get-service-network-vpc-association" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-target-group", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "get-target-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-access-log-subscriptions", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "list-access-log-subscriptions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-listeners", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "list-listeners" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-resource-configurations", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "list-resource-configurations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-resource-endpoint-associations", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "list-resource-endpoint-associations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-resource-gateways", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "list-resource-gateways" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-rules", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "list-rules" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-service-network-resource-associations", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "list-service-network-resource-associations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-service-network-service-associations", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "list-service-network-service-associations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-service-network-vpc-associations", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "list-service-network-vpc-associations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-service-network-vpc-endpoint-associations", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "list-service-network-vpc-endpoint-associations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-service-networks", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "list-service-networks" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-services", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "list-services" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-target-groups", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "list-target-groups" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-targets", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "list-targets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-auth-policy", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "put-auth-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-resource-policy", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "put-resource-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for register-targets", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "register-targets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-access-log-subscription", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "update-access-log-subscription" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-listener", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "update-listener" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-resource-configuration", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "update-resource-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-resource-gateway", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "update-resource-gateway" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-rule", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "update-rule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-service", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "update-service" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-service-network", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "update-service-network" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-service-network-vpc-association", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "update-service-network-vpc-association" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-target-group", function()
		local result = common.execute_aws_command_with_input({ "vpc-lattice", "update-target-group" })
		assert.is_true(result.success)
	end)

end)