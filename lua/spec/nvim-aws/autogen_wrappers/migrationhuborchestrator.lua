-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: migrationhuborchestrator

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS migrationhuborchestrator service testing", function()
	it("should generate a cli skeleton for create-template", function()
		local result = common.execute_aws_command_with_input({ "migrationhuborchestrator", "create-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-workflow", function()
		local result = common.execute_aws_command_with_input({ "migrationhuborchestrator", "create-workflow" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-workflow-step", function()
		local result = common.execute_aws_command_with_input({ "migrationhuborchestrator", "create-workflow-step" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-workflow-step-group", function()
		local result = common.execute_aws_command_with_input({ "migrationhuborchestrator", "create-workflow-step-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-template", function()
		local result = common.execute_aws_command_with_input({ "migrationhuborchestrator", "delete-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-workflow", function()
		local result = common.execute_aws_command_with_input({ "migrationhuborchestrator", "delete-workflow" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-workflow-step", function()
		local result = common.execute_aws_command_with_input({ "migrationhuborchestrator", "delete-workflow-step" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-workflow-step-group", function()
		local result = common.execute_aws_command_with_input({ "migrationhuborchestrator", "delete-workflow-step-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-template", function()
		local result = common.execute_aws_command_with_input({ "migrationhuborchestrator", "get-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-template-step", function()
		local result = common.execute_aws_command_with_input({ "migrationhuborchestrator", "get-template-step" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-template-step-group", function()
		local result = common.execute_aws_command_with_input({ "migrationhuborchestrator", "get-template-step-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-workflow", function()
		local result = common.execute_aws_command_with_input({ "migrationhuborchestrator", "get-workflow" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-workflow-step", function()
		local result = common.execute_aws_command_with_input({ "migrationhuborchestrator", "get-workflow-step" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-workflow-step-group", function()
		local result = common.execute_aws_command_with_input({ "migrationhuborchestrator", "get-workflow-step-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-plugins", function()
		local result = common.execute_aws_command_with_input({ "migrationhuborchestrator", "list-plugins" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "migrationhuborchestrator", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-template-step-groups", function()
		local result = common.execute_aws_command_with_input({ "migrationhuborchestrator", "list-template-step-groups" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-template-steps", function()
		local result = common.execute_aws_command_with_input({ "migrationhuborchestrator", "list-template-steps" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-templates", function()
		local result = common.execute_aws_command_with_input({ "migrationhuborchestrator", "list-templates" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-workflow-step-groups", function()
		local result = common.execute_aws_command_with_input({ "migrationhuborchestrator", "list-workflow-step-groups" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-workflow-steps", function()
		local result = common.execute_aws_command_with_input({ "migrationhuborchestrator", "list-workflow-steps" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-workflows", function()
		local result = common.execute_aws_command_with_input({ "migrationhuborchestrator", "list-workflows" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for retry-workflow-step", function()
		local result = common.execute_aws_command_with_input({ "migrationhuborchestrator", "retry-workflow-step" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-workflow", function()
		local result = common.execute_aws_command_with_input({ "migrationhuborchestrator", "start-workflow" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-workflow", function()
		local result = common.execute_aws_command_with_input({ "migrationhuborchestrator", "stop-workflow" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "migrationhuborchestrator", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "migrationhuborchestrator", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-template", function()
		local result = common.execute_aws_command_with_input({ "migrationhuborchestrator", "update-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-workflow", function()
		local result = common.execute_aws_command_with_input({ "migrationhuborchestrator", "update-workflow" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-workflow-step", function()
		local result = common.execute_aws_command_with_input({ "migrationhuborchestrator", "update-workflow-step" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-workflow-step-group", function()
		local result = common.execute_aws_command_with_input({ "migrationhuborchestrator", "update-workflow-step-group" })
		assert.is_true(result.success)
	end)

end)