-- AUTOGENERATED FILE - DO NOT EDIT
-- AWS Service: license-manager-linux-subscriptions

require("nvim-aws").setup()
local service = require("nvim-aws.autogen_wrappers.license-manager-linux-subscriptions")

describe("AWS license-manager-linux-subscriptions service testing", function()
	it("should generate a cli skeleton with deregister_subscription_provider", function()
		local result = service.deregister_subscription_provider()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_registered_subscription_provider", function()
		local result = service.get_registered_subscription_provider()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_service_settings", function()
		local result = service.get_service_settings()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_linux_subscription_instances", function()
		local result = service.list_linux_subscription_instances()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_linux_subscriptions", function()
		local result = service.list_linux_subscriptions()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_registered_subscription_providers", function()
		local result = service.list_registered_subscription_providers()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_tags_for_resource", function()
		local result = service.list_tags_for_resource()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with register_subscription_provider", function()
		local result = service.register_subscription_provider()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with tag_resource", function()
		local result = service.tag_resource()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with untag_resource", function()
		local result = service.untag_resource()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with update_service_settings", function()
		local result = service.update_service_settings()
		assert.is_true(result.success)
	end)

end)
