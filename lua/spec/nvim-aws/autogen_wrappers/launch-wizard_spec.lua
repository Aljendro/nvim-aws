-- AUTOGENERATED FILE - DO NOT EDIT
-- AWS Service: launch-wizard

require("nvim-aws").setup()
local service = require("nvim-aws.autogen_wrappers.launch-wizard")

describe("AWS launch-wizard service testing", function()
	it("should generate a cli skeleton with create_deployment", function()
		local result = service.create_deployment()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with delete_deployment", function()
		local result = service.delete_deployment()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_deployment", function()
		local result = service.get_deployment()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_workload", function()
		local result = service.get_workload()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_workload_deployment_pattern", function()
		local result = service.get_workload_deployment_pattern()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with help", function()
		local result = service.help()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_deployment_events", function()
		local result = service.list_deployment_events()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_deployments", function()
		local result = service.list_deployments()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_tags_for_resource", function()
		local result = service.list_tags_for_resource()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_workload_deployment_patterns", function()
		local result = service.list_workload_deployment_patterns()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_workloads", function()
		local result = service.list_workloads()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with tag_resource", function()
		local result = service.tag_resource()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with untag_resource", function()
		local result = service.untag_resource()
		assert.is_true(result.success)
	end)

end)