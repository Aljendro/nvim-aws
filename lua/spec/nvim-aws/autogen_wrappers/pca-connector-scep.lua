-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: pca-connector-scep

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS pca-connector-scep service testing", function()
	it("should generate a cli skeleton for create-challenge", function()
		local result = common.execute_aws_command_with_input({ "pca-connector-scep", "create-challenge" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-connector", function()
		local result = common.execute_aws_command_with_input({ "pca-connector-scep", "create-connector" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-challenge", function()
		local result = common.execute_aws_command_with_input({ "pca-connector-scep", "delete-challenge" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-connector", function()
		local result = common.execute_aws_command_with_input({ "pca-connector-scep", "delete-connector" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-challenge-metadata", function()
		local result = common.execute_aws_command_with_input({ "pca-connector-scep", "get-challenge-metadata" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-challenge-password", function()
		local result = common.execute_aws_command_with_input({ "pca-connector-scep", "get-challenge-password" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-connector", function()
		local result = common.execute_aws_command_with_input({ "pca-connector-scep", "get-connector" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-challenge-metadata", function()
		local result = common.execute_aws_command_with_input({ "pca-connector-scep", "list-challenge-metadata" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-connectors", function()
		local result = common.execute_aws_command_with_input({ "pca-connector-scep", "list-connectors" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "pca-connector-scep", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "pca-connector-scep", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "pca-connector-scep", "untag-resource" })
		assert.is_true(result.success)
	end)

end)