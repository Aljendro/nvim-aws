-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: ssm-contacts

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS ssm-contacts service testing", function()
	it("should generate a cli skeleton for accept-page", function()
		local result = common.execute_aws_command_with_input({ "ssm-contacts", "accept-page" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for activate-contact-channel", function()
		local result = common.execute_aws_command_with_input({ "ssm-contacts", "activate-contact-channel" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-contact", function()
		local result = common.execute_aws_command_with_input({ "ssm-contacts", "create-contact" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-contact-channel", function()
		local result = common.execute_aws_command_with_input({ "ssm-contacts", "create-contact-channel" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-rotation", function()
		local result = common.execute_aws_command_with_input({ "ssm-contacts", "create-rotation" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-rotation-override", function()
		local result = common.execute_aws_command_with_input({ "ssm-contacts", "create-rotation-override" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for deactivate-contact-channel", function()
		local result = common.execute_aws_command_with_input({ "ssm-contacts", "deactivate-contact-channel" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-contact", function()
		local result = common.execute_aws_command_with_input({ "ssm-contacts", "delete-contact" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-contact-channel", function()
		local result = common.execute_aws_command_with_input({ "ssm-contacts", "delete-contact-channel" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-rotation", function()
		local result = common.execute_aws_command_with_input({ "ssm-contacts", "delete-rotation" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-rotation-override", function()
		local result = common.execute_aws_command_with_input({ "ssm-contacts", "delete-rotation-override" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-engagement", function()
		local result = common.execute_aws_command_with_input({ "ssm-contacts", "describe-engagement" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-page", function()
		local result = common.execute_aws_command_with_input({ "ssm-contacts", "describe-page" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-contact", function()
		local result = common.execute_aws_command_with_input({ "ssm-contacts", "get-contact" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-contact-channel", function()
		local result = common.execute_aws_command_with_input({ "ssm-contacts", "get-contact-channel" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-contact-policy", function()
		local result = common.execute_aws_command_with_input({ "ssm-contacts", "get-contact-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-rotation", function()
		local result = common.execute_aws_command_with_input({ "ssm-contacts", "get-rotation" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-rotation-override", function()
		local result = common.execute_aws_command_with_input({ "ssm-contacts", "get-rotation-override" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-contact-channels", function()
		local result = common.execute_aws_command_with_input({ "ssm-contacts", "list-contact-channels" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-contacts", function()
		local result = common.execute_aws_command_with_input({ "ssm-contacts", "list-contacts" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-engagements", function()
		local result = common.execute_aws_command_with_input({ "ssm-contacts", "list-engagements" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-page-receipts", function()
		local result = common.execute_aws_command_with_input({ "ssm-contacts", "list-page-receipts" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-page-resolutions", function()
		local result = common.execute_aws_command_with_input({ "ssm-contacts", "list-page-resolutions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-pages-by-contact", function()
		local result = common.execute_aws_command_with_input({ "ssm-contacts", "list-pages-by-contact" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-pages-by-engagement", function()
		local result = common.execute_aws_command_with_input({ "ssm-contacts", "list-pages-by-engagement" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-preview-rotation-shifts", function()
		local result = common.execute_aws_command_with_input({ "ssm-contacts", "list-preview-rotation-shifts" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-rotation-overrides", function()
		local result = common.execute_aws_command_with_input({ "ssm-contacts", "list-rotation-overrides" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-rotation-shifts", function()
		local result = common.execute_aws_command_with_input({ "ssm-contacts", "list-rotation-shifts" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-rotations", function()
		local result = common.execute_aws_command_with_input({ "ssm-contacts", "list-rotations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "ssm-contacts", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-contact-policy", function()
		local result = common.execute_aws_command_with_input({ "ssm-contacts", "put-contact-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for send-activation-code", function()
		local result = common.execute_aws_command_with_input({ "ssm-contacts", "send-activation-code" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-engagement", function()
		local result = common.execute_aws_command_with_input({ "ssm-contacts", "start-engagement" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-engagement", function()
		local result = common.execute_aws_command_with_input({ "ssm-contacts", "stop-engagement" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "ssm-contacts", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "ssm-contacts", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-contact", function()
		local result = common.execute_aws_command_with_input({ "ssm-contacts", "update-contact" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-contact-channel", function()
		local result = common.execute_aws_command_with_input({ "ssm-contacts", "update-contact-channel" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-rotation", function()
		local result = common.execute_aws_command_with_input({ "ssm-contacts", "update-rotation" })
		assert.is_true(result.success)
	end)

end)