-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: bedrock-agent

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS bedrock-agent service testing", function()
	it("should generate a cli skeleton for associate-agent-collaborator", function()
		local result = common.execute_aws_command_with_input({ "bedrock-agent", "associate-agent-collaborator" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for associate-agent-knowledge-base", function()
		local result = common.execute_aws_command_with_input({ "bedrock-agent", "associate-agent-knowledge-base" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-agent", function()
		local result = common.execute_aws_command_with_input({ "bedrock-agent", "create-agent" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-agent-action-group", function()
		local result = common.execute_aws_command_with_input({ "bedrock-agent", "create-agent-action-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-agent-alias", function()
		local result = common.execute_aws_command_with_input({ "bedrock-agent", "create-agent-alias" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-data-source", function()
		local result = common.execute_aws_command_with_input({ "bedrock-agent", "create-data-source" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-flow", function()
		local result = common.execute_aws_command_with_input({ "bedrock-agent", "create-flow" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-knowledge-base", function()
		local result = common.execute_aws_command_with_input({ "bedrock-agent", "create-knowledge-base" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-prompt", function()
		local result = common.execute_aws_command_with_input({ "bedrock-agent", "create-prompt" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-prompt-version", function()
		local result = common.execute_aws_command_with_input({ "bedrock-agent", "create-prompt-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-agent", function()
		local result = common.execute_aws_command_with_input({ "bedrock-agent", "delete-agent" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-agent-action-group", function()
		local result = common.execute_aws_command_with_input({ "bedrock-agent", "delete-agent-action-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-agent-alias", function()
		local result = common.execute_aws_command_with_input({ "bedrock-agent", "delete-agent-alias" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-agent-version", function()
		local result = common.execute_aws_command_with_input({ "bedrock-agent", "delete-agent-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-data-source", function()
		local result = common.execute_aws_command_with_input({ "bedrock-agent", "delete-data-source" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-flow", function()
		local result = common.execute_aws_command_with_input({ "bedrock-agent", "delete-flow" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-knowledge-base", function()
		local result = common.execute_aws_command_with_input({ "bedrock-agent", "delete-knowledge-base" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-knowledge-base-documents", function()
		local result = common.execute_aws_command_with_input({ "bedrock-agent", "delete-knowledge-base-documents" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-prompt", function()
		local result = common.execute_aws_command_with_input({ "bedrock-agent", "delete-prompt" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-agent-collaborator", function()
		local result = common.execute_aws_command_with_input({ "bedrock-agent", "disassociate-agent-collaborator" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-agent-knowledge-base", function()
		local result = common.execute_aws_command_with_input({ "bedrock-agent", "disassociate-agent-knowledge-base" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-agent", function()
		local result = common.execute_aws_command_with_input({ "bedrock-agent", "get-agent" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-agent-action-group", function()
		local result = common.execute_aws_command_with_input({ "bedrock-agent", "get-agent-action-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-agent-alias", function()
		local result = common.execute_aws_command_with_input({ "bedrock-agent", "get-agent-alias" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-agent-collaborator", function()
		local result = common.execute_aws_command_with_input({ "bedrock-agent", "get-agent-collaborator" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-agent-knowledge-base", function()
		local result = common.execute_aws_command_with_input({ "bedrock-agent", "get-agent-knowledge-base" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-agent-version", function()
		local result = common.execute_aws_command_with_input({ "bedrock-agent", "get-agent-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-data-source", function()
		local result = common.execute_aws_command_with_input({ "bedrock-agent", "get-data-source" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-flow", function()
		local result = common.execute_aws_command_with_input({ "bedrock-agent", "get-flow" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-ingestion-job", function()
		local result = common.execute_aws_command_with_input({ "bedrock-agent", "get-ingestion-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-knowledge-base", function()
		local result = common.execute_aws_command_with_input({ "bedrock-agent", "get-knowledge-base" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-knowledge-base-documents", function()
		local result = common.execute_aws_command_with_input({ "bedrock-agent", "get-knowledge-base-documents" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-prompt", function()
		local result = common.execute_aws_command_with_input({ "bedrock-agent", "get-prompt" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for ingest-knowledge-base-documents", function()
		local result = common.execute_aws_command_with_input({ "bedrock-agent", "ingest-knowledge-base-documents" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-agent-action-groups", function()
		local result = common.execute_aws_command_with_input({ "bedrock-agent", "list-agent-action-groups" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-agent-aliases", function()
		local result = common.execute_aws_command_with_input({ "bedrock-agent", "list-agent-aliases" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-agent-collaborators", function()
		local result = common.execute_aws_command_with_input({ "bedrock-agent", "list-agent-collaborators" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-agent-knowledge-bases", function()
		local result = common.execute_aws_command_with_input({ "bedrock-agent", "list-agent-knowledge-bases" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-agent-versions", function()
		local result = common.execute_aws_command_with_input({ "bedrock-agent", "list-agent-versions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-agents", function()
		local result = common.execute_aws_command_with_input({ "bedrock-agent", "list-agents" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-data-sources", function()
		local result = common.execute_aws_command_with_input({ "bedrock-agent", "list-data-sources" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-flows", function()
		local result = common.execute_aws_command_with_input({ "bedrock-agent", "list-flows" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-ingestion-jobs", function()
		local result = common.execute_aws_command_with_input({ "bedrock-agent", "list-ingestion-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-knowledge-base-documents", function()
		local result = common.execute_aws_command_with_input({ "bedrock-agent", "list-knowledge-base-documents" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-knowledge-bases", function()
		local result = common.execute_aws_command_with_input({ "bedrock-agent", "list-knowledge-bases" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-prompts", function()
		local result = common.execute_aws_command_with_input({ "bedrock-agent", "list-prompts" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "bedrock-agent", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for prepare-agent", function()
		local result = common.execute_aws_command_with_input({ "bedrock-agent", "prepare-agent" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for prepare-flow", function()
		local result = common.execute_aws_command_with_input({ "bedrock-agent", "prepare-flow" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-ingestion-job", function()
		local result = common.execute_aws_command_with_input({ "bedrock-agent", "start-ingestion-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-ingestion-job", function()
		local result = common.execute_aws_command_with_input({ "bedrock-agent", "stop-ingestion-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "bedrock-agent", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "bedrock-agent", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-agent", function()
		local result = common.execute_aws_command_with_input({ "bedrock-agent", "update-agent" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-agent-action-group", function()
		local result = common.execute_aws_command_with_input({ "bedrock-agent", "update-agent-action-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-agent-alias", function()
		local result = common.execute_aws_command_with_input({ "bedrock-agent", "update-agent-alias" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-agent-collaborator", function()
		local result = common.execute_aws_command_with_input({ "bedrock-agent", "update-agent-collaborator" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-agent-knowledge-base", function()
		local result = common.execute_aws_command_with_input({ "bedrock-agent", "update-agent-knowledge-base" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-data-source", function()
		local result = common.execute_aws_command_with_input({ "bedrock-agent", "update-data-source" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-flow", function()
		local result = common.execute_aws_command_with_input({ "bedrock-agent", "update-flow" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-knowledge-base", function()
		local result = common.execute_aws_command_with_input({ "bedrock-agent", "update-knowledge-base" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-prompt", function()
		local result = common.execute_aws_command_with_input({ "bedrock-agent", "update-prompt" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for validate-flow-definition", function()
		local result = common.execute_aws_command_with_input({ "bedrock-agent", "validate-flow-definition" })
		assert.is_true(result.success)
	end)

end)