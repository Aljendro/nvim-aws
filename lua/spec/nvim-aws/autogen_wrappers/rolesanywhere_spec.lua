-- AUTOGENERATED FILE - DO NOT EDIT
-- AWS Service: rolesanywhere

require("nvim-aws").setup()
local service = require("nvim-aws.autogen_wrappers.rolesanywhere")

describe("AWS rolesanywhere service testing", function()
	it("should generate a cli skeleton with create_profile", function()
		local result = service.create_profile()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with create_trust_anchor", function()
		local result = service.create_trust_anchor()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with delete_attribute_mapping", function()
		local result = service.delete_attribute_mapping()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with delete_crl", function()
		local result = service.delete_crl()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with delete_profile", function()
		local result = service.delete_profile()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with delete_trust_anchor", function()
		local result = service.delete_trust_anchor()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with disable_crl", function()
		local result = service.disable_crl()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with disable_profile", function()
		local result = service.disable_profile()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with disable_trust_anchor", function()
		local result = service.disable_trust_anchor()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with enable_crl", function()
		local result = service.enable_crl()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with enable_profile", function()
		local result = service.enable_profile()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with enable_trust_anchor", function()
		local result = service.enable_trust_anchor()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_crl", function()
		local result = service.get_crl()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_profile", function()
		local result = service.get_profile()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_subject", function()
		local result = service.get_subject()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_trust_anchor", function()
		local result = service.get_trust_anchor()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with import_crl", function()
		local result = service.import_crl()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_crls", function()
		local result = service.list_crls()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_profiles", function()
		local result = service.list_profiles()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_subjects", function()
		local result = service.list_subjects()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_tags_for_resource", function()
		local result = service.list_tags_for_resource()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_trust_anchors", function()
		local result = service.list_trust_anchors()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with put_attribute_mapping", function()
		local result = service.put_attribute_mapping()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with put_notification_settings", function()
		local result = service.put_notification_settings()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with reset_notification_settings", function()
		local result = service.reset_notification_settings()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with tag_resource", function()
		local result = service.tag_resource()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with untag_resource", function()
		local result = service.untag_resource()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with update_crl", function()
		local result = service.update_crl()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with update_profile", function()
		local result = service.update_profile()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with update_trust_anchor", function()
		local result = service.update_trust_anchor()
		assert.is_true(result.success)
	end)

end)