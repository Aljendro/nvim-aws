-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: mq

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS mq service testing", function()
	it("should generate a cli skeleton for create-broker", function()
		local result = common.execute_aws_command_with_input({ "mq", "create-broker" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-configuration", function()
		local result = common.execute_aws_command_with_input({ "mq", "create-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-tags", function()
		local result = common.execute_aws_command_with_input({ "mq", "create-tags" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-user", function()
		local result = common.execute_aws_command_with_input({ "mq", "create-user" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-broker", function()
		local result = common.execute_aws_command_with_input({ "mq", "delete-broker" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-tags", function()
		local result = common.execute_aws_command_with_input({ "mq", "delete-tags" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-user", function()
		local result = common.execute_aws_command_with_input({ "mq", "delete-user" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-broker", function()
		local result = common.execute_aws_command_with_input({ "mq", "describe-broker" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-broker-engine-types", function()
		local result = common.execute_aws_command_with_input({ "mq", "describe-broker-engine-types" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-broker-instance-options", function()
		local result = common.execute_aws_command_with_input({ "mq", "describe-broker-instance-options" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-configuration", function()
		local result = common.execute_aws_command_with_input({ "mq", "describe-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-configuration-revision", function()
		local result = common.execute_aws_command_with_input({ "mq", "describe-configuration-revision" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-user", function()
		local result = common.execute_aws_command_with_input({ "mq", "describe-user" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-brokers", function()
		local result = common.execute_aws_command_with_input({ "mq", "list-brokers" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-configuration-revisions", function()
		local result = common.execute_aws_command_with_input({ "mq", "list-configuration-revisions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-configurations", function()
		local result = common.execute_aws_command_with_input({ "mq", "list-configurations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags", function()
		local result = common.execute_aws_command_with_input({ "mq", "list-tags" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-users", function()
		local result = common.execute_aws_command_with_input({ "mq", "list-users" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for promote", function()
		local result = common.execute_aws_command_with_input({ "mq", "promote" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for reboot-broker", function()
		local result = common.execute_aws_command_with_input({ "mq", "reboot-broker" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-broker", function()
		local result = common.execute_aws_command_with_input({ "mq", "update-broker" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-configuration", function()
		local result = common.execute_aws_command_with_input({ "mq", "update-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-user", function()
		local result = common.execute_aws_command_with_input({ "mq", "update-user" })
		assert.is_true(result.success)
	end)

end)