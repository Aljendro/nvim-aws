-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: bcm-pricing-calculator

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS bcm-pricing-calculator service testing", function()
	it("should generate a cli skeleton for create-bill-estimate", function()
		local result = common.execute_aws_command_with_input({ "bcm-pricing-calculator", "create-bill-estimate" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-bill-scenario", function()
		local result = common.execute_aws_command_with_input({ "bcm-pricing-calculator", "create-bill-scenario" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-workload-estimate", function()
		local result = common.execute_aws_command_with_input({ "bcm-pricing-calculator", "create-workload-estimate" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-bill-estimate", function()
		local result = common.execute_aws_command_with_input({ "bcm-pricing-calculator", "delete-bill-estimate" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-bill-scenario", function()
		local result = common.execute_aws_command_with_input({ "bcm-pricing-calculator", "delete-bill-scenario" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-workload-estimate", function()
		local result = common.execute_aws_command_with_input({ "bcm-pricing-calculator", "delete-workload-estimate" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-bill-estimate", function()
		local result = common.execute_aws_command_with_input({ "bcm-pricing-calculator", "get-bill-estimate" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-bill-scenario", function()
		local result = common.execute_aws_command_with_input({ "bcm-pricing-calculator", "get-bill-scenario" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-preferences", function()
		local result = common.execute_aws_command_with_input({ "bcm-pricing-calculator", "get-preferences" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-workload-estimate", function()
		local result = common.execute_aws_command_with_input({ "bcm-pricing-calculator", "get-workload-estimate" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-bill-estimates", function()
		local result = common.execute_aws_command_with_input({ "bcm-pricing-calculator", "list-bill-estimates" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-bill-scenarios", function()
		local result = common.execute_aws_command_with_input({ "bcm-pricing-calculator", "list-bill-scenarios" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "bcm-pricing-calculator", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-workload-estimates", function()
		local result = common.execute_aws_command_with_input({ "bcm-pricing-calculator", "list-workload-estimates" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "bcm-pricing-calculator", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "bcm-pricing-calculator", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-bill-estimate", function()
		local result = common.execute_aws_command_with_input({ "bcm-pricing-calculator", "update-bill-estimate" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-bill-scenario", function()
		local result = common.execute_aws_command_with_input({ "bcm-pricing-calculator", "update-bill-scenario" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-preferences", function()
		local result = common.execute_aws_command_with_input({ "bcm-pricing-calculator", "update-preferences" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-workload-estimate", function()
		local result = common.execute_aws_command_with_input({ "bcm-pricing-calculator", "update-workload-estimate" })
		assert.is_true(result.success)
	end)

end)