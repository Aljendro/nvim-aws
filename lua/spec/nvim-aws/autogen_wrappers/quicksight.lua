-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: quicksight

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS quicksight service testing", function()
	it("should generate a cli skeleton for batch-create-topic-reviewed-answer", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "batch-create-topic-reviewed-answer" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-delete-topic-reviewed-answer", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "batch-delete-topic-reviewed-answer" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for cancel-ingestion", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "cancel-ingestion" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-account-customization", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "create-account-customization" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-account-subscription", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "create-account-subscription" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-analysis", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "create-analysis" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-brand", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "create-brand" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-custom-permissions", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "create-custom-permissions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-dashboard", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "create-dashboard" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-data-set", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "create-data-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-data-source", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "create-data-source" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-folder", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "create-folder" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-folder-membership", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "create-folder-membership" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-group", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "create-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-group-membership", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "create-group-membership" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-iam-policy-assignment", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "create-iam-policy-assignment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-ingestion", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "create-ingestion" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-namespace", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "create-namespace" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-refresh-schedule", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "create-refresh-schedule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-role-membership", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "create-role-membership" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-template", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "create-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-template-alias", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "create-template-alias" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-theme", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "create-theme" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-theme-alias", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "create-theme-alias" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-topic", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "create-topic" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-topic-refresh-schedule", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "create-topic-refresh-schedule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-vpc-connection", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "create-vpc-connection" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-account-customization", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "delete-account-customization" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-account-subscription", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "delete-account-subscription" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-analysis", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "delete-analysis" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-brand", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "delete-brand" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-brand-assignment", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "delete-brand-assignment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-custom-permissions", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "delete-custom-permissions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-dashboard", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "delete-dashboard" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-data-set", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "delete-data-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-data-set-refresh-properties", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "delete-data-set-refresh-properties" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-data-source", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "delete-data-source" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-default-q-business-application", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "delete-default-q-business-application" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-folder", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "delete-folder" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-folder-membership", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "delete-folder-membership" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-group", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "delete-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-group-membership", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "delete-group-membership" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-iam-policy-assignment", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "delete-iam-policy-assignment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-identity-propagation-config", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "delete-identity-propagation-config" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-namespace", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "delete-namespace" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-refresh-schedule", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "delete-refresh-schedule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-role-custom-permission", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "delete-role-custom-permission" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-role-membership", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "delete-role-membership" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-template", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "delete-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-template-alias", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "delete-template-alias" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-theme", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "delete-theme" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-theme-alias", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "delete-theme-alias" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-topic", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "delete-topic" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-topic-refresh-schedule", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "delete-topic-refresh-schedule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-user", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "delete-user" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-user-by-principal-id", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "delete-user-by-principal-id" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-user-custom-permission", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "delete-user-custom-permission" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-vpc-connection", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "delete-vpc-connection" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-account-customization", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "describe-account-customization" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-account-settings", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "describe-account-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-account-subscription", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "describe-account-subscription" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-analysis", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "describe-analysis" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-analysis-definition", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "describe-analysis-definition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-analysis-permissions", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "describe-analysis-permissions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-asset-bundle-export-job", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "describe-asset-bundle-export-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-asset-bundle-import-job", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "describe-asset-bundle-import-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-brand", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "describe-brand" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-brand-assignment", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "describe-brand-assignment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-brand-published-version", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "describe-brand-published-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-custom-permissions", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "describe-custom-permissions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-dashboard", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "describe-dashboard" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-dashboard-definition", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "describe-dashboard-definition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-dashboard-permissions", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "describe-dashboard-permissions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-dashboard-snapshot-job", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "describe-dashboard-snapshot-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-dashboard-snapshot-job-result", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "describe-dashboard-snapshot-job-result" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-dashboards-qa-configuration", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "describe-dashboards-qa-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-data-set", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "describe-data-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-data-set-permissions", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "describe-data-set-permissions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-data-set-refresh-properties", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "describe-data-set-refresh-properties" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-data-source", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "describe-data-source" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-data-source-permissions", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "describe-data-source-permissions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-default-q-business-application", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "describe-default-q-business-application" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-folder", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "describe-folder" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-folder-permissions", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "describe-folder-permissions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-folder-resolved-permissions", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "describe-folder-resolved-permissions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-group", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "describe-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-group-membership", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "describe-group-membership" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-iam-policy-assignment", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "describe-iam-policy-assignment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-ingestion", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "describe-ingestion" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-ip-restriction", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "describe-ip-restriction" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-key-registration", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "describe-key-registration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-namespace", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "describe-namespace" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-q-personalization-configuration", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "describe-q-personalization-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-quick-sight-q-search-configuration", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "describe-quick-sight-q-search-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-refresh-schedule", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "describe-refresh-schedule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-role-custom-permission", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "describe-role-custom-permission" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-template", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "describe-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-template-alias", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "describe-template-alias" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-template-definition", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "describe-template-definition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-template-permissions", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "describe-template-permissions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-theme", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "describe-theme" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-theme-alias", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "describe-theme-alias" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-theme-permissions", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "describe-theme-permissions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-topic", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "describe-topic" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-topic-permissions", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "describe-topic-permissions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-topic-refresh", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "describe-topic-refresh" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-topic-refresh-schedule", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "describe-topic-refresh-schedule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-user", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "describe-user" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-vpc-connection", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "describe-vpc-connection" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for generate-embed-url-for-anonymous-user", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "generate-embed-url-for-anonymous-user" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for generate-embed-url-for-registered-user", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "generate-embed-url-for-registered-user" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for generate-embed-url-for-registered-user-with-identity", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "generate-embed-url-for-registered-user-with-identity" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-dashboard-embed-url", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "get-dashboard-embed-url" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-session-embed-url", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "get-session-embed-url" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-analyses", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "list-analyses" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-asset-bundle-export-jobs", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "list-asset-bundle-export-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-asset-bundle-import-jobs", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "list-asset-bundle-import-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-brands", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "list-brands" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-custom-permissions", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "list-custom-permissions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-dashboard-versions", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "list-dashboard-versions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-dashboards", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "list-dashboards" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-data-sets", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "list-data-sets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-data-sources", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "list-data-sources" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-folder-members", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "list-folder-members" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-folders", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "list-folders" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-folders-for-resource", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "list-folders-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-group-memberships", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "list-group-memberships" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-groups", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "list-groups" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-iam-policy-assignments", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "list-iam-policy-assignments" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-iam-policy-assignments-for-user", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "list-iam-policy-assignments-for-user" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-identity-propagation-configs", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "list-identity-propagation-configs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-ingestions", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "list-ingestions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-namespaces", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "list-namespaces" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-refresh-schedules", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "list-refresh-schedules" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-role-memberships", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "list-role-memberships" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-template-aliases", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "list-template-aliases" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-template-versions", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "list-template-versions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-templates", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "list-templates" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-theme-aliases", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "list-theme-aliases" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-theme-versions", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "list-theme-versions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-themes", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "list-themes" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-topic-refresh-schedules", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "list-topic-refresh-schedules" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-topic-reviewed-answers", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "list-topic-reviewed-answers" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-topics", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "list-topics" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-user-groups", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "list-user-groups" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-users", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "list-users" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-vpc-connections", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "list-vpc-connections" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for predict-qa-results", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "predict-qa-results" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-data-set-refresh-properties", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "put-data-set-refresh-properties" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for register-user", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "register-user" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for restore-analysis", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "restore-analysis" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for search-analyses", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "search-analyses" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for search-dashboards", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "search-dashboards" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for search-data-sets", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "search-data-sets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for search-data-sources", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "search-data-sources" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for search-folders", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "search-folders" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for search-groups", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "search-groups" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for search-topics", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "search-topics" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-asset-bundle-export-job", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "start-asset-bundle-export-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-asset-bundle-import-job", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "start-asset-bundle-import-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-dashboard-snapshot-job", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "start-dashboard-snapshot-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-dashboard-snapshot-job-schedule", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "start-dashboard-snapshot-job-schedule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-account-customization", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "update-account-customization" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-account-settings", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "update-account-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-analysis", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "update-analysis" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-analysis-permissions", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "update-analysis-permissions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-application-with-token-exchange-grant", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "update-application-with-token-exchange-grant" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-brand", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "update-brand" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-brand-assignment", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "update-brand-assignment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-brand-published-version", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "update-brand-published-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-custom-permissions", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "update-custom-permissions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-dashboard", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "update-dashboard" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-dashboard-links", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "update-dashboard-links" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-dashboard-permissions", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "update-dashboard-permissions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-dashboard-published-version", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "update-dashboard-published-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-dashboards-qa-configuration", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "update-dashboards-qa-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-data-set", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "update-data-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-data-set-permissions", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "update-data-set-permissions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-data-source", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "update-data-source" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-data-source-permissions", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "update-data-source-permissions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-default-q-business-application", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "update-default-q-business-application" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-folder", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "update-folder" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-folder-permissions", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "update-folder-permissions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-group", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "update-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-iam-policy-assignment", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "update-iam-policy-assignment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-identity-propagation-config", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "update-identity-propagation-config" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-ip-restriction", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "update-ip-restriction" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-key-registration", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "update-key-registration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-public-sharing-settings", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "update-public-sharing-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-q-personalization-configuration", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "update-q-personalization-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-quick-sight-q-search-configuration", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "update-quick-sight-q-search-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-refresh-schedule", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "update-refresh-schedule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-role-custom-permission", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "update-role-custom-permission" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-spice-capacity-configuration", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "update-spice-capacity-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-template", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "update-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-template-alias", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "update-template-alias" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-template-permissions", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "update-template-permissions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-theme", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "update-theme" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-theme-alias", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "update-theme-alias" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-theme-permissions", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "update-theme-permissions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-topic", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "update-topic" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-topic-permissions", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "update-topic-permissions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-topic-refresh-schedule", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "update-topic-refresh-schedule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-user", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "update-user" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-user-custom-permission", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "update-user-custom-permission" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-vpc-connection", function()
		local result = common.execute_aws_command_with_input({ "quicksight", "update-vpc-connection" })
		assert.is_true(result.success)
	end)

end)