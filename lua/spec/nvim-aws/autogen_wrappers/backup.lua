-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: backup

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS backup service testing", function()
	it("should generate a cli skeleton for cancel-legal-hold", function()
		local result = common.execute_aws_command_with_input({ "backup", "cancel-legal-hold" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-backup-plan", function()
		local result = common.execute_aws_command_with_input({ "backup", "create-backup-plan" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-backup-selection", function()
		local result = common.execute_aws_command_with_input({ "backup", "create-backup-selection" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-backup-vault", function()
		local result = common.execute_aws_command_with_input({ "backup", "create-backup-vault" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-framework", function()
		local result = common.execute_aws_command_with_input({ "backup", "create-framework" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-legal-hold", function()
		local result = common.execute_aws_command_with_input({ "backup", "create-legal-hold" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-logically-air-gapped-backup-vault", function()
		local result = common.execute_aws_command_with_input({ "backup", "create-logically-air-gapped-backup-vault" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-report-plan", function()
		local result = common.execute_aws_command_with_input({ "backup", "create-report-plan" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-restore-testing-plan", function()
		local result = common.execute_aws_command_with_input({ "backup", "create-restore-testing-plan" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-restore-testing-selection", function()
		local result = common.execute_aws_command_with_input({ "backup", "create-restore-testing-selection" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-backup-plan", function()
		local result = common.execute_aws_command_with_input({ "backup", "delete-backup-plan" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-backup-selection", function()
		local result = common.execute_aws_command_with_input({ "backup", "delete-backup-selection" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-backup-vault", function()
		local result = common.execute_aws_command_with_input({ "backup", "delete-backup-vault" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-backup-vault-access-policy", function()
		local result = common.execute_aws_command_with_input({ "backup", "delete-backup-vault-access-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-backup-vault-lock-configuration", function()
		local result = common.execute_aws_command_with_input({ "backup", "delete-backup-vault-lock-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-backup-vault-notifications", function()
		local result = common.execute_aws_command_with_input({ "backup", "delete-backup-vault-notifications" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-framework", function()
		local result = common.execute_aws_command_with_input({ "backup", "delete-framework" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-recovery-point", function()
		local result = common.execute_aws_command_with_input({ "backup", "delete-recovery-point" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-report-plan", function()
		local result = common.execute_aws_command_with_input({ "backup", "delete-report-plan" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-restore-testing-plan", function()
		local result = common.execute_aws_command_with_input({ "backup", "delete-restore-testing-plan" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-restore-testing-selection", function()
		local result = common.execute_aws_command_with_input({ "backup", "delete-restore-testing-selection" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-backup-job", function()
		local result = common.execute_aws_command_with_input({ "backup", "describe-backup-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-backup-vault", function()
		local result = common.execute_aws_command_with_input({ "backup", "describe-backup-vault" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-copy-job", function()
		local result = common.execute_aws_command_with_input({ "backup", "describe-copy-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-framework", function()
		local result = common.execute_aws_command_with_input({ "backup", "describe-framework" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-global-settings", function()
		local result = common.execute_aws_command_with_input({ "backup", "describe-global-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-protected-resource", function()
		local result = common.execute_aws_command_with_input({ "backup", "describe-protected-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-recovery-point", function()
		local result = common.execute_aws_command_with_input({ "backup", "describe-recovery-point" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-region-settings", function()
		local result = common.execute_aws_command_with_input({ "backup", "describe-region-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-report-job", function()
		local result = common.execute_aws_command_with_input({ "backup", "describe-report-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-report-plan", function()
		local result = common.execute_aws_command_with_input({ "backup", "describe-report-plan" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-restore-job", function()
		local result = common.execute_aws_command_with_input({ "backup", "describe-restore-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-recovery-point", function()
		local result = common.execute_aws_command_with_input({ "backup", "disassociate-recovery-point" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-recovery-point-from-parent", function()
		local result = common.execute_aws_command_with_input({ "backup", "disassociate-recovery-point-from-parent" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for export-backup-plan-template", function()
		local result = common.execute_aws_command_with_input({ "backup", "export-backup-plan-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-backup-plan", function()
		local result = common.execute_aws_command_with_input({ "backup", "get-backup-plan" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-backup-plan-from-json", function()
		local result = common.execute_aws_command_with_input({ "backup", "get-backup-plan-from-json" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-backup-plan-from-template", function()
		local result = common.execute_aws_command_with_input({ "backup", "get-backup-plan-from-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-backup-selection", function()
		local result = common.execute_aws_command_with_input({ "backup", "get-backup-selection" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-backup-vault-access-policy", function()
		local result = common.execute_aws_command_with_input({ "backup", "get-backup-vault-access-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-backup-vault-notifications", function()
		local result = common.execute_aws_command_with_input({ "backup", "get-backup-vault-notifications" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-legal-hold", function()
		local result = common.execute_aws_command_with_input({ "backup", "get-legal-hold" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-recovery-point-index-details", function()
		local result = common.execute_aws_command_with_input({ "backup", "get-recovery-point-index-details" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-recovery-point-restore-metadata", function()
		local result = common.execute_aws_command_with_input({ "backup", "get-recovery-point-restore-metadata" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-restore-job-metadata", function()
		local result = common.execute_aws_command_with_input({ "backup", "get-restore-job-metadata" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-restore-testing-inferred-metadata", function()
		local result = common.execute_aws_command_with_input({ "backup", "get-restore-testing-inferred-metadata" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-restore-testing-plan", function()
		local result = common.execute_aws_command_with_input({ "backup", "get-restore-testing-plan" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-restore-testing-selection", function()
		local result = common.execute_aws_command_with_input({ "backup", "get-restore-testing-selection" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-supported-resource-types", function()
		local result = common.execute_aws_command_with_input({ "backup", "get-supported-resource-types" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-backup-job-summaries", function()
		local result = common.execute_aws_command_with_input({ "backup", "list-backup-job-summaries" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-backup-jobs", function()
		local result = common.execute_aws_command_with_input({ "backup", "list-backup-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-backup-plan-templates", function()
		local result = common.execute_aws_command_with_input({ "backup", "list-backup-plan-templates" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-backup-plan-versions", function()
		local result = common.execute_aws_command_with_input({ "backup", "list-backup-plan-versions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-backup-plans", function()
		local result = common.execute_aws_command_with_input({ "backup", "list-backup-plans" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-backup-selections", function()
		local result = common.execute_aws_command_with_input({ "backup", "list-backup-selections" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-backup-vaults", function()
		local result = common.execute_aws_command_with_input({ "backup", "list-backup-vaults" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-copy-job-summaries", function()
		local result = common.execute_aws_command_with_input({ "backup", "list-copy-job-summaries" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-copy-jobs", function()
		local result = common.execute_aws_command_with_input({ "backup", "list-copy-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-frameworks", function()
		local result = common.execute_aws_command_with_input({ "backup", "list-frameworks" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-indexed-recovery-points", function()
		local result = common.execute_aws_command_with_input({ "backup", "list-indexed-recovery-points" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-legal-holds", function()
		local result = common.execute_aws_command_with_input({ "backup", "list-legal-holds" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-protected-resources", function()
		local result = common.execute_aws_command_with_input({ "backup", "list-protected-resources" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-protected-resources-by-backup-vault", function()
		local result = common.execute_aws_command_with_input({ "backup", "list-protected-resources-by-backup-vault" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-recovery-points-by-backup-vault", function()
		local result = common.execute_aws_command_with_input({ "backup", "list-recovery-points-by-backup-vault" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-recovery-points-by-legal-hold", function()
		local result = common.execute_aws_command_with_input({ "backup", "list-recovery-points-by-legal-hold" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-recovery-points-by-resource", function()
		local result = common.execute_aws_command_with_input({ "backup", "list-recovery-points-by-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-report-jobs", function()
		local result = common.execute_aws_command_with_input({ "backup", "list-report-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-report-plans", function()
		local result = common.execute_aws_command_with_input({ "backup", "list-report-plans" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-restore-job-summaries", function()
		local result = common.execute_aws_command_with_input({ "backup", "list-restore-job-summaries" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-restore-jobs", function()
		local result = common.execute_aws_command_with_input({ "backup", "list-restore-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-restore-jobs-by-protected-resource", function()
		local result = common.execute_aws_command_with_input({ "backup", "list-restore-jobs-by-protected-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-restore-testing-plans", function()
		local result = common.execute_aws_command_with_input({ "backup", "list-restore-testing-plans" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-restore-testing-selections", function()
		local result = common.execute_aws_command_with_input({ "backup", "list-restore-testing-selections" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags", function()
		local result = common.execute_aws_command_with_input({ "backup", "list-tags" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-backup-vault-access-policy", function()
		local result = common.execute_aws_command_with_input({ "backup", "put-backup-vault-access-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-backup-vault-lock-configuration", function()
		local result = common.execute_aws_command_with_input({ "backup", "put-backup-vault-lock-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-backup-vault-notifications", function()
		local result = common.execute_aws_command_with_input({ "backup", "put-backup-vault-notifications" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-restore-validation-result", function()
		local result = common.execute_aws_command_with_input({ "backup", "put-restore-validation-result" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-backup-job", function()
		local result = common.execute_aws_command_with_input({ "backup", "start-backup-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-copy-job", function()
		local result = common.execute_aws_command_with_input({ "backup", "start-copy-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-report-job", function()
		local result = common.execute_aws_command_with_input({ "backup", "start-report-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-restore-job", function()
		local result = common.execute_aws_command_with_input({ "backup", "start-restore-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-backup-job", function()
		local result = common.execute_aws_command_with_input({ "backup", "stop-backup-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "backup", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "backup", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-backup-plan", function()
		local result = common.execute_aws_command_with_input({ "backup", "update-backup-plan" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-framework", function()
		local result = common.execute_aws_command_with_input({ "backup", "update-framework" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-global-settings", function()
		local result = common.execute_aws_command_with_input({ "backup", "update-global-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-recovery-point-index-settings", function()
		local result = common.execute_aws_command_with_input({ "backup", "update-recovery-point-index-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-recovery-point-lifecycle", function()
		local result = common.execute_aws_command_with_input({ "backup", "update-recovery-point-lifecycle" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-region-settings", function()
		local result = common.execute_aws_command_with_input({ "backup", "update-region-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-report-plan", function()
		local result = common.execute_aws_command_with_input({ "backup", "update-report-plan" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-restore-testing-plan", function()
		local result = common.execute_aws_command_with_input({ "backup", "update-restore-testing-plan" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-restore-testing-selection", function()
		local result = common.execute_aws_command_with_input({ "backup", "update-restore-testing-selection" })
		assert.is_true(result.success)
	end)

end)