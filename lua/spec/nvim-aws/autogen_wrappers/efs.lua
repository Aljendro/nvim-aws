-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: efs

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS efs service testing", function()
	it("should generate a cli skeleton for create-access-point", function()
		local result = common.execute_aws_command_with_input({ "efs", "create-access-point" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-file-system", function()
		local result = common.execute_aws_command_with_input({ "efs", "create-file-system" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-mount-target", function()
		local result = common.execute_aws_command_with_input({ "efs", "create-mount-target" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-replication-configuration", function()
		local result = common.execute_aws_command_with_input({ "efs", "create-replication-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-tags", function()
		local result = common.execute_aws_command_with_input({ "efs", "create-tags" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-access-point", function()
		local result = common.execute_aws_command_with_input({ "efs", "delete-access-point" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-file-system", function()
		local result = common.execute_aws_command_with_input({ "efs", "delete-file-system" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-file-system-policy", function()
		local result = common.execute_aws_command_with_input({ "efs", "delete-file-system-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-mount-target", function()
		local result = common.execute_aws_command_with_input({ "efs", "delete-mount-target" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-replication-configuration", function()
		local result = common.execute_aws_command_with_input({ "efs", "delete-replication-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-tags", function()
		local result = common.execute_aws_command_with_input({ "efs", "delete-tags" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-access-points", function()
		local result = common.execute_aws_command_with_input({ "efs", "describe-access-points" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-account-preferences", function()
		local result = common.execute_aws_command_with_input({ "efs", "describe-account-preferences" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-backup-policy", function()
		local result = common.execute_aws_command_with_input({ "efs", "describe-backup-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-file-system-policy", function()
		local result = common.execute_aws_command_with_input({ "efs", "describe-file-system-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-file-systems", function()
		local result = common.execute_aws_command_with_input({ "efs", "describe-file-systems" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-lifecycle-configuration", function()
		local result = common.execute_aws_command_with_input({ "efs", "describe-lifecycle-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-mount-target-security-groups", function()
		local result = common.execute_aws_command_with_input({ "efs", "describe-mount-target-security-groups" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-mount-targets", function()
		local result = common.execute_aws_command_with_input({ "efs", "describe-mount-targets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-replication-configurations", function()
		local result = common.execute_aws_command_with_input({ "efs", "describe-replication-configurations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-tags", function()
		local result = common.execute_aws_command_with_input({ "efs", "describe-tags" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "efs", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for modify-mount-target-security-groups", function()
		local result = common.execute_aws_command_with_input({ "efs", "modify-mount-target-security-groups" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-account-preferences", function()
		local result = common.execute_aws_command_with_input({ "efs", "put-account-preferences" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-backup-policy", function()
		local result = common.execute_aws_command_with_input({ "efs", "put-backup-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-file-system-policy", function()
		local result = common.execute_aws_command_with_input({ "efs", "put-file-system-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-lifecycle-configuration", function()
		local result = common.execute_aws_command_with_input({ "efs", "put-lifecycle-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "efs", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "efs", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-file-system", function()
		local result = common.execute_aws_command_with_input({ "efs", "update-file-system" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-file-system-protection", function()
		local result = common.execute_aws_command_with_input({ "efs", "update-file-system-protection" })
		assert.is_true(result.success)
	end)

end)