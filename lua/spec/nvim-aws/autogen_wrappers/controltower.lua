-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: controltower

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS controltower service testing", function()
	it("should generate a cli skeleton for create-landing-zone", function()
		local result = common.execute_aws_command_with_input({ "controltower", "create-landing-zone" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-landing-zone", function()
		local result = common.execute_aws_command_with_input({ "controltower", "delete-landing-zone" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disable-baseline", function()
		local result = common.execute_aws_command_with_input({ "controltower", "disable-baseline" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disable-control", function()
		local result = common.execute_aws_command_with_input({ "controltower", "disable-control" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for enable-baseline", function()
		local result = common.execute_aws_command_with_input({ "controltower", "enable-baseline" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for enable-control", function()
		local result = common.execute_aws_command_with_input({ "controltower", "enable-control" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-baseline", function()
		local result = common.execute_aws_command_with_input({ "controltower", "get-baseline" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-baseline-operation", function()
		local result = common.execute_aws_command_with_input({ "controltower", "get-baseline-operation" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-control-operation", function()
		local result = common.execute_aws_command_with_input({ "controltower", "get-control-operation" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-enabled-baseline", function()
		local result = common.execute_aws_command_with_input({ "controltower", "get-enabled-baseline" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-enabled-control", function()
		local result = common.execute_aws_command_with_input({ "controltower", "get-enabled-control" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-landing-zone", function()
		local result = common.execute_aws_command_with_input({ "controltower", "get-landing-zone" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-landing-zone-operation", function()
		local result = common.execute_aws_command_with_input({ "controltower", "get-landing-zone-operation" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-baselines", function()
		local result = common.execute_aws_command_with_input({ "controltower", "list-baselines" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-control-operations", function()
		local result = common.execute_aws_command_with_input({ "controltower", "list-control-operations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-enabled-baselines", function()
		local result = common.execute_aws_command_with_input({ "controltower", "list-enabled-baselines" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-enabled-controls", function()
		local result = common.execute_aws_command_with_input({ "controltower", "list-enabled-controls" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-landing-zone-operations", function()
		local result = common.execute_aws_command_with_input({ "controltower", "list-landing-zone-operations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-landing-zones", function()
		local result = common.execute_aws_command_with_input({ "controltower", "list-landing-zones" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "controltower", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for reset-enabled-baseline", function()
		local result = common.execute_aws_command_with_input({ "controltower", "reset-enabled-baseline" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for reset-enabled-control", function()
		local result = common.execute_aws_command_with_input({ "controltower", "reset-enabled-control" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for reset-landing-zone", function()
		local result = common.execute_aws_command_with_input({ "controltower", "reset-landing-zone" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-enabled-baseline", function()
		local result = common.execute_aws_command_with_input({ "controltower", "update-enabled-baseline" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-enabled-control", function()
		local result = common.execute_aws_command_with_input({ "controltower", "update-enabled-control" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-landing-zone", function()
		local result = common.execute_aws_command_with_input({ "controltower", "update-landing-zone" })
		assert.is_true(result.success)
	end)

end)