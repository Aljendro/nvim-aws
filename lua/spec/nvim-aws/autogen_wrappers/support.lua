-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: support

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS support service testing", function()
	it("should generate a cli skeleton for add-attachments-to-set", function()
		local result = common.execute_aws_command_with_input({ "support", "add-attachments-to-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for add-communication-to-case", function()
		local result = common.execute_aws_command_with_input({ "support", "add-communication-to-case" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-case", function()
		local result = common.execute_aws_command_with_input({ "support", "create-case" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-attachment", function()
		local result = common.execute_aws_command_with_input({ "support", "describe-attachment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-cases", function()
		local result = common.execute_aws_command_with_input({ "support", "describe-cases" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-communications", function()
		local result = common.execute_aws_command_with_input({ "support", "describe-communications" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-create-case-options", function()
		local result = common.execute_aws_command_with_input({ "support", "describe-create-case-options" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-services", function()
		local result = common.execute_aws_command_with_input({ "support", "describe-services" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-severity-levels", function()
		local result = common.execute_aws_command_with_input({ "support", "describe-severity-levels" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-supported-languages", function()
		local result = common.execute_aws_command_with_input({ "support", "describe-supported-languages" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-trusted-advisor-check-refresh-statuses", function()
		local result = common.execute_aws_command_with_input({ "support", "describe-trusted-advisor-check-refresh-statuses" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-trusted-advisor-check-result", function()
		local result = common.execute_aws_command_with_input({ "support", "describe-trusted-advisor-check-result" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-trusted-advisor-check-summaries", function()
		local result = common.execute_aws_command_with_input({ "support", "describe-trusted-advisor-check-summaries" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-trusted-advisor-checks", function()
		local result = common.execute_aws_command_with_input({ "support", "describe-trusted-advisor-checks" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for refresh-trusted-advisor-check", function()
		local result = common.execute_aws_command_with_input({ "support", "refresh-trusted-advisor-check" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for resolve-case", function()
		local result = common.execute_aws_command_with_input({ "support", "resolve-case" })
		assert.is_true(result.success)
	end)

end)