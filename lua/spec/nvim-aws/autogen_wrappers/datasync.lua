-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: datasync

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS datasync service testing", function()
	it("should generate a cli skeleton for add-storage-system", function()
		local result = common.execute_aws_command_with_input({ "datasync", "add-storage-system" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for cancel-task-execution", function()
		local result = common.execute_aws_command_with_input({ "datasync", "cancel-task-execution" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-agent", function()
		local result = common.execute_aws_command_with_input({ "datasync", "create-agent" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-location-azure-blob", function()
		local result = common.execute_aws_command_with_input({ "datasync", "create-location-azure-blob" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-location-efs", function()
		local result = common.execute_aws_command_with_input({ "datasync", "create-location-efs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-location-fsx-lustre", function()
		local result = common.execute_aws_command_with_input({ "datasync", "create-location-fsx-lustre" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-location-fsx-ontap", function()
		local result = common.execute_aws_command_with_input({ "datasync", "create-location-fsx-ontap" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-location-fsx-open-zfs", function()
		local result = common.execute_aws_command_with_input({ "datasync", "create-location-fsx-open-zfs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-location-fsx-windows", function()
		local result = common.execute_aws_command_with_input({ "datasync", "create-location-fsx-windows" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-location-hdfs", function()
		local result = common.execute_aws_command_with_input({ "datasync", "create-location-hdfs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-location-nfs", function()
		local result = common.execute_aws_command_with_input({ "datasync", "create-location-nfs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-location-object-storage", function()
		local result = common.execute_aws_command_with_input({ "datasync", "create-location-object-storage" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-location-s3", function()
		local result = common.execute_aws_command_with_input({ "datasync", "create-location-s3" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-location-smb", function()
		local result = common.execute_aws_command_with_input({ "datasync", "create-location-smb" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-task", function()
		local result = common.execute_aws_command_with_input({ "datasync", "create-task" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-agent", function()
		local result = common.execute_aws_command_with_input({ "datasync", "delete-agent" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-location", function()
		local result = common.execute_aws_command_with_input({ "datasync", "delete-location" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-task", function()
		local result = common.execute_aws_command_with_input({ "datasync", "delete-task" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-agent", function()
		local result = common.execute_aws_command_with_input({ "datasync", "describe-agent" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-discovery-job", function()
		local result = common.execute_aws_command_with_input({ "datasync", "describe-discovery-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-location-azure-blob", function()
		local result = common.execute_aws_command_with_input({ "datasync", "describe-location-azure-blob" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-location-efs", function()
		local result = common.execute_aws_command_with_input({ "datasync", "describe-location-efs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-location-fsx-lustre", function()
		local result = common.execute_aws_command_with_input({ "datasync", "describe-location-fsx-lustre" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-location-fsx-ontap", function()
		local result = common.execute_aws_command_with_input({ "datasync", "describe-location-fsx-ontap" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-location-fsx-open-zfs", function()
		local result = common.execute_aws_command_with_input({ "datasync", "describe-location-fsx-open-zfs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-location-fsx-windows", function()
		local result = common.execute_aws_command_with_input({ "datasync", "describe-location-fsx-windows" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-location-hdfs", function()
		local result = common.execute_aws_command_with_input({ "datasync", "describe-location-hdfs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-location-nfs", function()
		local result = common.execute_aws_command_with_input({ "datasync", "describe-location-nfs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-location-object-storage", function()
		local result = common.execute_aws_command_with_input({ "datasync", "describe-location-object-storage" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-location-s3", function()
		local result = common.execute_aws_command_with_input({ "datasync", "describe-location-s3" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-location-smb", function()
		local result = common.execute_aws_command_with_input({ "datasync", "describe-location-smb" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-storage-system", function()
		local result = common.execute_aws_command_with_input({ "datasync", "describe-storage-system" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-storage-system-resource-metrics", function()
		local result = common.execute_aws_command_with_input({ "datasync", "describe-storage-system-resource-metrics" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-storage-system-resources", function()
		local result = common.execute_aws_command_with_input({ "datasync", "describe-storage-system-resources" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-task", function()
		local result = common.execute_aws_command_with_input({ "datasync", "describe-task" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-task-execution", function()
		local result = common.execute_aws_command_with_input({ "datasync", "describe-task-execution" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for generate-recommendations", function()
		local result = common.execute_aws_command_with_input({ "datasync", "generate-recommendations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-agents", function()
		local result = common.execute_aws_command_with_input({ "datasync", "list-agents" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-discovery-jobs", function()
		local result = common.execute_aws_command_with_input({ "datasync", "list-discovery-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-locations", function()
		local result = common.execute_aws_command_with_input({ "datasync", "list-locations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-storage-systems", function()
		local result = common.execute_aws_command_with_input({ "datasync", "list-storage-systems" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "datasync", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-task-executions", function()
		local result = common.execute_aws_command_with_input({ "datasync", "list-task-executions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tasks", function()
		local result = common.execute_aws_command_with_input({ "datasync", "list-tasks" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for remove-storage-system", function()
		local result = common.execute_aws_command_with_input({ "datasync", "remove-storage-system" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-discovery-job", function()
		local result = common.execute_aws_command_with_input({ "datasync", "start-discovery-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-task-execution", function()
		local result = common.execute_aws_command_with_input({ "datasync", "start-task-execution" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-discovery-job", function()
		local result = common.execute_aws_command_with_input({ "datasync", "stop-discovery-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "datasync", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "datasync", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-agent", function()
		local result = common.execute_aws_command_with_input({ "datasync", "update-agent" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-discovery-job", function()
		local result = common.execute_aws_command_with_input({ "datasync", "update-discovery-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-location-azure-blob", function()
		local result = common.execute_aws_command_with_input({ "datasync", "update-location-azure-blob" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-location-efs", function()
		local result = common.execute_aws_command_with_input({ "datasync", "update-location-efs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-location-fsx-lustre", function()
		local result = common.execute_aws_command_with_input({ "datasync", "update-location-fsx-lustre" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-location-fsx-ontap", function()
		local result = common.execute_aws_command_with_input({ "datasync", "update-location-fsx-ontap" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-location-fsx-open-zfs", function()
		local result = common.execute_aws_command_with_input({ "datasync", "update-location-fsx-open-zfs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-location-fsx-windows", function()
		local result = common.execute_aws_command_with_input({ "datasync", "update-location-fsx-windows" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-location-hdfs", function()
		local result = common.execute_aws_command_with_input({ "datasync", "update-location-hdfs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-location-nfs", function()
		local result = common.execute_aws_command_with_input({ "datasync", "update-location-nfs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-location-object-storage", function()
		local result = common.execute_aws_command_with_input({ "datasync", "update-location-object-storage" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-location-s3", function()
		local result = common.execute_aws_command_with_input({ "datasync", "update-location-s3" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-location-smb", function()
		local result = common.execute_aws_command_with_input({ "datasync", "update-location-smb" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-storage-system", function()
		local result = common.execute_aws_command_with_input({ "datasync", "update-storage-system" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-task", function()
		local result = common.execute_aws_command_with_input({ "datasync", "update-task" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-task-execution", function()
		local result = common.execute_aws_command_with_input({ "datasync", "update-task-execution" })
		assert.is_true(result.success)
	end)

end)