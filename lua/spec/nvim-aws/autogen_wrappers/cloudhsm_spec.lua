-- AUTOGENERATED FILE - DO NOT EDIT
-- AWS Service: cloudhsm

require("nvim-aws").setup()
local service = require("nvim-aws.autogen_wrappers.cloudhsm")

describe("AWS cloudhsm service testing", function()
	it("should generate a cli skeleton with add_tags_to_resource", function()
		local result = service.add_tags_to_resource()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with create_hapg", function()
		local result = service.create_hapg()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with create_hsm", function()
		local result = service.create_hsm()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with create_luna_client", function()
		local result = service.create_luna_client()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with delete_hapg", function()
		local result = service.delete_hapg()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with delete_hsm", function()
		local result = service.delete_hsm()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with delete_luna_client", function()
		local result = service.delete_luna_client()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with describe_hapg", function()
		local result = service.describe_hapg()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with describe_hsm", function()
		local result = service.describe_hsm()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with describe_luna_client", function()
		local result = service.describe_luna_client()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_config", function()
		local result = service.get_config()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_available_zones", function()
		local result = service.list_available_zones()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_hapgs", function()
		local result = service.list_hapgs()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_hsms", function()
		local result = service.list_hsms()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_luna_clients", function()
		local result = service.list_luna_clients()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_tags_for_resource", function()
		local result = service.list_tags_for_resource()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with modify_hapg", function()
		local result = service.modify_hapg()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with modify_hsm", function()
		local result = service.modify_hsm()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with modify_luna_client", function()
		local result = service.modify_luna_client()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with remove_tags_from_resource", function()
		local result = service.remove_tags_from_resource()
		assert.is_true(result.success)
	end)

end)