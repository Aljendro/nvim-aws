-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: fms

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS fms service testing", function()
	it("should generate a cli skeleton for associate-admin-account", function()
		local result = common.execute_aws_command_with_input({ "fms", "associate-admin-account" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for associate-third-party-firewall", function()
		local result = common.execute_aws_command_with_input({ "fms", "associate-third-party-firewall" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-associate-resource", function()
		local result = common.execute_aws_command_with_input({ "fms", "batch-associate-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-disassociate-resource", function()
		local result = common.execute_aws_command_with_input({ "fms", "batch-disassociate-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-apps-list", function()
		local result = common.execute_aws_command_with_input({ "fms", "delete-apps-list" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-notification-channel", function()
		local result = common.execute_aws_command_with_input({ "fms", "delete-notification-channel" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-policy", function()
		local result = common.execute_aws_command_with_input({ "fms", "delete-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-protocols-list", function()
		local result = common.execute_aws_command_with_input({ "fms", "delete-protocols-list" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-resource-set", function()
		local result = common.execute_aws_command_with_input({ "fms", "delete-resource-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-admin-account", function()
		local result = common.execute_aws_command_with_input({ "fms", "disassociate-admin-account" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-third-party-firewall", function()
		local result = common.execute_aws_command_with_input({ "fms", "disassociate-third-party-firewall" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-admin-account", function()
		local result = common.execute_aws_command_with_input({ "fms", "get-admin-account" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-admin-scope", function()
		local result = common.execute_aws_command_with_input({ "fms", "get-admin-scope" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-apps-list", function()
		local result = common.execute_aws_command_with_input({ "fms", "get-apps-list" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-compliance-detail", function()
		local result = common.execute_aws_command_with_input({ "fms", "get-compliance-detail" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-notification-channel", function()
		local result = common.execute_aws_command_with_input({ "fms", "get-notification-channel" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-policy", function()
		local result = common.execute_aws_command_with_input({ "fms", "get-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-protection-status", function()
		local result = common.execute_aws_command_with_input({ "fms", "get-protection-status" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-protocols-list", function()
		local result = common.execute_aws_command_with_input({ "fms", "get-protocols-list" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-resource-set", function()
		local result = common.execute_aws_command_with_input({ "fms", "get-resource-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-third-party-firewall-association-status", function()
		local result = common.execute_aws_command_with_input({ "fms", "get-third-party-firewall-association-status" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-violation-details", function()
		local result = common.execute_aws_command_with_input({ "fms", "get-violation-details" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-admin-accounts-for-organization", function()
		local result = common.execute_aws_command_with_input({ "fms", "list-admin-accounts-for-organization" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-admins-managing-account", function()
		local result = common.execute_aws_command_with_input({ "fms", "list-admins-managing-account" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-apps-lists", function()
		local result = common.execute_aws_command_with_input({ "fms", "list-apps-lists" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-compliance-status", function()
		local result = common.execute_aws_command_with_input({ "fms", "list-compliance-status" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-discovered-resources", function()
		local result = common.execute_aws_command_with_input({ "fms", "list-discovered-resources" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-member-accounts", function()
		local result = common.execute_aws_command_with_input({ "fms", "list-member-accounts" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-policies", function()
		local result = common.execute_aws_command_with_input({ "fms", "list-policies" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-protocols-lists", function()
		local result = common.execute_aws_command_with_input({ "fms", "list-protocols-lists" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-resource-set-resources", function()
		local result = common.execute_aws_command_with_input({ "fms", "list-resource-set-resources" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-resource-sets", function()
		local result = common.execute_aws_command_with_input({ "fms", "list-resource-sets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "fms", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-third-party-firewall-firewall-policies", function()
		local result = common.execute_aws_command_with_input({ "fms", "list-third-party-firewall-firewall-policies" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-admin-account", function()
		local result = common.execute_aws_command_with_input({ "fms", "put-admin-account" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-apps-list", function()
		local result = common.execute_aws_command_with_input({ "fms", "put-apps-list" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-notification-channel", function()
		local result = common.execute_aws_command_with_input({ "fms", "put-notification-channel" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-policy", function()
		local result = common.execute_aws_command_with_input({ "fms", "put-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-protocols-list", function()
		local result = common.execute_aws_command_with_input({ "fms", "put-protocols-list" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-resource-set", function()
		local result = common.execute_aws_command_with_input({ "fms", "put-resource-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "fms", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "fms", "untag-resource" })
		assert.is_true(result.success)
	end)

end)