-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: privatenetworks

require("nvim-aws").setup()
local service = require("nvim-aws.autogen_wrappers.privatenetworks")

describe("AWS privatenetworks service testing", function()
	it("should generate a cli skeleton with acknowledge_order_receipt", function()
		local result = service.acknowledge_order_receipt()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with activate_device_identifier", function()
		local result = service.activate_device_identifier()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with activate_network_site", function()
		local result = service.activate_network_site()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with configure_access_point", function()
		local result = service.configure_access_point()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with create_network", function()
		local result = service.create_network()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with create_network_site", function()
		local result = service.create_network_site()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with deactivate_device_identifier", function()
		local result = service.deactivate_device_identifier()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with delete_network", function()
		local result = service.delete_network()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with delete_network_site", function()
		local result = service.delete_network_site()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_device_identifier", function()
		local result = service.get_device_identifier()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_network", function()
		local result = service.get_network()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_network_resource", function()
		local result = service.get_network_resource()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_network_site", function()
		local result = service.get_network_site()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_order", function()
		local result = service.get_order()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_device_identifiers", function()
		local result = service.list_device_identifiers()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_network_resources", function()
		local result = service.list_network_resources()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_network_sites", function()
		local result = service.list_network_sites()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_networks", function()
		local result = service.list_networks()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_orders", function()
		local result = service.list_orders()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_tags_for_resource", function()
		local result = service.list_tags_for_resource()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with ping", function()
		local result = service.ping()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with start_network_resource_update", function()
		local result = service.start_network_resource_update()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with tag_resource", function()
		local result = service.tag_resource()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with untag_resource", function()
		local result = service.untag_resource()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with update_network_site", function()
		local result = service.update_network_site()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with update_network_site_plan", function()
		local result = service.update_network_site_plan()
		assert.is_true(result.success)
	end)

end)