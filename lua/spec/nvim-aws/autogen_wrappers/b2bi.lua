-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: b2bi

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS b2bi service testing", function()
	it("should generate a cli skeleton for create-capability", function()
		local result = common.execute_aws_command_with_input({ "b2bi", "create-capability" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-partnership", function()
		local result = common.execute_aws_command_with_input({ "b2bi", "create-partnership" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-profile", function()
		local result = common.execute_aws_command_with_input({ "b2bi", "create-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-starter-mapping-template", function()
		local result = common.execute_aws_command_with_input({ "b2bi", "create-starter-mapping-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-transformer", function()
		local result = common.execute_aws_command_with_input({ "b2bi", "create-transformer" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-capability", function()
		local result = common.execute_aws_command_with_input({ "b2bi", "delete-capability" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-partnership", function()
		local result = common.execute_aws_command_with_input({ "b2bi", "delete-partnership" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-profile", function()
		local result = common.execute_aws_command_with_input({ "b2bi", "delete-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-transformer", function()
		local result = common.execute_aws_command_with_input({ "b2bi", "delete-transformer" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for generate-mapping", function()
		local result = common.execute_aws_command_with_input({ "b2bi", "generate-mapping" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-capability", function()
		local result = common.execute_aws_command_with_input({ "b2bi", "get-capability" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-partnership", function()
		local result = common.execute_aws_command_with_input({ "b2bi", "get-partnership" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-profile", function()
		local result = common.execute_aws_command_with_input({ "b2bi", "get-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-transformer", function()
		local result = common.execute_aws_command_with_input({ "b2bi", "get-transformer" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-transformer-job", function()
		local result = common.execute_aws_command_with_input({ "b2bi", "get-transformer-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-capabilities", function()
		local result = common.execute_aws_command_with_input({ "b2bi", "list-capabilities" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-partnerships", function()
		local result = common.execute_aws_command_with_input({ "b2bi", "list-partnerships" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-profiles", function()
		local result = common.execute_aws_command_with_input({ "b2bi", "list-profiles" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "b2bi", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-transformers", function()
		local result = common.execute_aws_command_with_input({ "b2bi", "list-transformers" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-transformer-job", function()
		local result = common.execute_aws_command_with_input({ "b2bi", "start-transformer-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "b2bi", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for test-conversion", function()
		local result = common.execute_aws_command_with_input({ "b2bi", "test-conversion" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for test-mapping", function()
		local result = common.execute_aws_command_with_input({ "b2bi", "test-mapping" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for test-parsing", function()
		local result = common.execute_aws_command_with_input({ "b2bi", "test-parsing" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "b2bi", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-capability", function()
		local result = common.execute_aws_command_with_input({ "b2bi", "update-capability" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-partnership", function()
		local result = common.execute_aws_command_with_input({ "b2bi", "update-partnership" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-profile", function()
		local result = common.execute_aws_command_with_input({ "b2bi", "update-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-transformer", function()
		local result = common.execute_aws_command_with_input({ "b2bi", "update-transformer" })
		assert.is_true(result.success)
	end)

end)