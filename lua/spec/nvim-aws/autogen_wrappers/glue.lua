-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: glue

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS glue service testing", function()
	it("should generate a cli skeleton for batch-create-partition", function()
		local result = common.execute_aws_command_with_input({ "glue", "batch-create-partition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-delete-connection", function()
		local result = common.execute_aws_command_with_input({ "glue", "batch-delete-connection" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-delete-partition", function()
		local result = common.execute_aws_command_with_input({ "glue", "batch-delete-partition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-delete-table", function()
		local result = common.execute_aws_command_with_input({ "glue", "batch-delete-table" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-delete-table-version", function()
		local result = common.execute_aws_command_with_input({ "glue", "batch-delete-table-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-get-blueprints", function()
		local result = common.execute_aws_command_with_input({ "glue", "batch-get-blueprints" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-get-crawlers", function()
		local result = common.execute_aws_command_with_input({ "glue", "batch-get-crawlers" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-get-custom-entity-types", function()
		local result = common.execute_aws_command_with_input({ "glue", "batch-get-custom-entity-types" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-get-data-quality-result", function()
		local result = common.execute_aws_command_with_input({ "glue", "batch-get-data-quality-result" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-get-dev-endpoints", function()
		local result = common.execute_aws_command_with_input({ "glue", "batch-get-dev-endpoints" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-get-jobs", function()
		local result = common.execute_aws_command_with_input({ "glue", "batch-get-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-get-partition", function()
		local result = common.execute_aws_command_with_input({ "glue", "batch-get-partition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-get-table-optimizer", function()
		local result = common.execute_aws_command_with_input({ "glue", "batch-get-table-optimizer" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-get-triggers", function()
		local result = common.execute_aws_command_with_input({ "glue", "batch-get-triggers" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-get-workflows", function()
		local result = common.execute_aws_command_with_input({ "glue", "batch-get-workflows" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-put-data-quality-statistic-annotation", function()
		local result = common.execute_aws_command_with_input({ "glue", "batch-put-data-quality-statistic-annotation" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-stop-job-run", function()
		local result = common.execute_aws_command_with_input({ "glue", "batch-stop-job-run" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-update-partition", function()
		local result = common.execute_aws_command_with_input({ "glue", "batch-update-partition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for cancel-data-quality-rule-recommendation-run", function()
		local result = common.execute_aws_command_with_input({ "glue", "cancel-data-quality-rule-recommendation-run" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for cancel-data-quality-ruleset-evaluation-run", function()
		local result = common.execute_aws_command_with_input({ "glue", "cancel-data-quality-ruleset-evaluation-run" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for cancel-ml-task-run", function()
		local result = common.execute_aws_command_with_input({ "glue", "cancel-ml-task-run" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for cancel-statement", function()
		local result = common.execute_aws_command_with_input({ "glue", "cancel-statement" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for check-schema-version-validity", function()
		local result = common.execute_aws_command_with_input({ "glue", "check-schema-version-validity" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-blueprint", function()
		local result = common.execute_aws_command_with_input({ "glue", "create-blueprint" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-catalog", function()
		local result = common.execute_aws_command_with_input({ "glue", "create-catalog" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-classifier", function()
		local result = common.execute_aws_command_with_input({ "glue", "create-classifier" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-column-statistics-task-settings", function()
		local result = common.execute_aws_command_with_input({ "glue", "create-column-statistics-task-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-connection", function()
		local result = common.execute_aws_command_with_input({ "glue", "create-connection" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-crawler", function()
		local result = common.execute_aws_command_with_input({ "glue", "create-crawler" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-custom-entity-type", function()
		local result = common.execute_aws_command_with_input({ "glue", "create-custom-entity-type" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-data-quality-ruleset", function()
		local result = common.execute_aws_command_with_input({ "glue", "create-data-quality-ruleset" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-database", function()
		local result = common.execute_aws_command_with_input({ "glue", "create-database" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-dev-endpoint", function()
		local result = common.execute_aws_command_with_input({ "glue", "create-dev-endpoint" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-integration", function()
		local result = common.execute_aws_command_with_input({ "glue", "create-integration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-integration-resource-property", function()
		local result = common.execute_aws_command_with_input({ "glue", "create-integration-resource-property" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-integration-table-properties", function()
		local result = common.execute_aws_command_with_input({ "glue", "create-integration-table-properties" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-job", function()
		local result = common.execute_aws_command_with_input({ "glue", "create-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-ml-transform", function()
		local result = common.execute_aws_command_with_input({ "glue", "create-ml-transform" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-partition", function()
		local result = common.execute_aws_command_with_input({ "glue", "create-partition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-partition-index", function()
		local result = common.execute_aws_command_with_input({ "glue", "create-partition-index" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-registry", function()
		local result = common.execute_aws_command_with_input({ "glue", "create-registry" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-schema", function()
		local result = common.execute_aws_command_with_input({ "glue", "create-schema" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-script", function()
		local result = common.execute_aws_command_with_input({ "glue", "create-script" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-security-configuration", function()
		local result = common.execute_aws_command_with_input({ "glue", "create-security-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-session", function()
		local result = common.execute_aws_command_with_input({ "glue", "create-session" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-table", function()
		local result = common.execute_aws_command_with_input({ "glue", "create-table" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-table-optimizer", function()
		local result = common.execute_aws_command_with_input({ "glue", "create-table-optimizer" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-trigger", function()
		local result = common.execute_aws_command_with_input({ "glue", "create-trigger" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-usage-profile", function()
		local result = common.execute_aws_command_with_input({ "glue", "create-usage-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-user-defined-function", function()
		local result = common.execute_aws_command_with_input({ "glue", "create-user-defined-function" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-workflow", function()
		local result = common.execute_aws_command_with_input({ "glue", "create-workflow" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-blueprint", function()
		local result = common.execute_aws_command_with_input({ "glue", "delete-blueprint" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-catalog", function()
		local result = common.execute_aws_command_with_input({ "glue", "delete-catalog" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-classifier", function()
		local result = common.execute_aws_command_with_input({ "glue", "delete-classifier" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-column-statistics-for-partition", function()
		local result = common.execute_aws_command_with_input({ "glue", "delete-column-statistics-for-partition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-column-statistics-for-table", function()
		local result = common.execute_aws_command_with_input({ "glue", "delete-column-statistics-for-table" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-column-statistics-task-settings", function()
		local result = common.execute_aws_command_with_input({ "glue", "delete-column-statistics-task-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-connection", function()
		local result = common.execute_aws_command_with_input({ "glue", "delete-connection" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-crawler", function()
		local result = common.execute_aws_command_with_input({ "glue", "delete-crawler" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-custom-entity-type", function()
		local result = common.execute_aws_command_with_input({ "glue", "delete-custom-entity-type" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-data-quality-ruleset", function()
		local result = common.execute_aws_command_with_input({ "glue", "delete-data-quality-ruleset" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-database", function()
		local result = common.execute_aws_command_with_input({ "glue", "delete-database" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-dev-endpoint", function()
		local result = common.execute_aws_command_with_input({ "glue", "delete-dev-endpoint" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-integration", function()
		local result = common.execute_aws_command_with_input({ "glue", "delete-integration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-integration-table-properties", function()
		local result = common.execute_aws_command_with_input({ "glue", "delete-integration-table-properties" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-job", function()
		local result = common.execute_aws_command_with_input({ "glue", "delete-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-ml-transform", function()
		local result = common.execute_aws_command_with_input({ "glue", "delete-ml-transform" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-partition", function()
		local result = common.execute_aws_command_with_input({ "glue", "delete-partition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-partition-index", function()
		local result = common.execute_aws_command_with_input({ "glue", "delete-partition-index" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-registry", function()
		local result = common.execute_aws_command_with_input({ "glue", "delete-registry" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-resource-policy", function()
		local result = common.execute_aws_command_with_input({ "glue", "delete-resource-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-schema", function()
		local result = common.execute_aws_command_with_input({ "glue", "delete-schema" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-schema-versions", function()
		local result = common.execute_aws_command_with_input({ "glue", "delete-schema-versions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-security-configuration", function()
		local result = common.execute_aws_command_with_input({ "glue", "delete-security-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-session", function()
		local result = common.execute_aws_command_with_input({ "glue", "delete-session" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-table", function()
		local result = common.execute_aws_command_with_input({ "glue", "delete-table" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-table-optimizer", function()
		local result = common.execute_aws_command_with_input({ "glue", "delete-table-optimizer" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-table-version", function()
		local result = common.execute_aws_command_with_input({ "glue", "delete-table-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-trigger", function()
		local result = common.execute_aws_command_with_input({ "glue", "delete-trigger" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-usage-profile", function()
		local result = common.execute_aws_command_with_input({ "glue", "delete-usage-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-user-defined-function", function()
		local result = common.execute_aws_command_with_input({ "glue", "delete-user-defined-function" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-workflow", function()
		local result = common.execute_aws_command_with_input({ "glue", "delete-workflow" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-connection-type", function()
		local result = common.execute_aws_command_with_input({ "glue", "describe-connection-type" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-entity", function()
		local result = common.execute_aws_command_with_input({ "glue", "describe-entity" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-inbound-integrations", function()
		local result = common.execute_aws_command_with_input({ "glue", "describe-inbound-integrations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-integrations", function()
		local result = common.execute_aws_command_with_input({ "glue", "describe-integrations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-blueprint", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-blueprint" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-blueprint-run", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-blueprint-run" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-blueprint-runs", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-blueprint-runs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-catalog", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-catalog" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-catalog-import-status", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-catalog-import-status" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-catalogs", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-catalogs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-classifier", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-classifier" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-classifiers", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-classifiers" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-column-statistics-for-partition", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-column-statistics-for-partition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-column-statistics-for-table", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-column-statistics-for-table" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-column-statistics-task-run", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-column-statistics-task-run" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-column-statistics-task-runs", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-column-statistics-task-runs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-column-statistics-task-settings", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-column-statistics-task-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-connection", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-connection" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-connections", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-connections" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-crawler", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-crawler" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-crawler-metrics", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-crawler-metrics" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-crawlers", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-crawlers" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-custom-entity-type", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-custom-entity-type" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-data-catalog-encryption-settings", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-data-catalog-encryption-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-data-quality-model", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-data-quality-model" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-data-quality-model-result", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-data-quality-model-result" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-data-quality-result", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-data-quality-result" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-data-quality-rule-recommendation-run", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-data-quality-rule-recommendation-run" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-data-quality-ruleset", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-data-quality-ruleset" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-data-quality-ruleset-evaluation-run", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-data-quality-ruleset-evaluation-run" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-database", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-database" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-databases", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-databases" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-dataflow-graph", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-dataflow-graph" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-dev-endpoint", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-dev-endpoint" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-dev-endpoints", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-dev-endpoints" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-entity-records", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-entity-records" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-integration-resource-property", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-integration-resource-property" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-integration-table-properties", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-integration-table-properties" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-job", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-job-bookmark", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-job-bookmark" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-job-run", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-job-run" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-job-runs", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-job-runs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-jobs", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-ml-task-run", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-ml-task-run" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-ml-task-runs", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-ml-task-runs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-ml-transform", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-ml-transform" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-ml-transforms", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-ml-transforms" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-mapping", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-mapping" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-partition", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-partition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-partition-indexes", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-partition-indexes" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-partitions", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-partitions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-plan", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-plan" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-registry", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-registry" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-resource-policies", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-resource-policies" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-resource-policy", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-resource-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-schema", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-schema" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-schema-by-definition", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-schema-by-definition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-schema-version", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-schema-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-schema-versions-diff", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-schema-versions-diff" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-security-configuration", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-security-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-security-configurations", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-security-configurations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-session", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-session" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-statement", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-statement" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-table", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-table" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-table-optimizer", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-table-optimizer" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-table-version", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-table-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-table-versions", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-table-versions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-tables", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-tables" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-tags", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-tags" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-trigger", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-trigger" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-triggers", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-triggers" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-unfiltered-partition-metadata", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-unfiltered-partition-metadata" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-unfiltered-partitions-metadata", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-unfiltered-partitions-metadata" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-unfiltered-table-metadata", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-unfiltered-table-metadata" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-usage-profile", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-usage-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-user-defined-function", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-user-defined-function" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-user-defined-functions", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-user-defined-functions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-workflow", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-workflow" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-workflow-run", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-workflow-run" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-workflow-run-properties", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-workflow-run-properties" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-workflow-runs", function()
		local result = common.execute_aws_command_with_input({ "glue", "get-workflow-runs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for import-catalog-to-glue", function()
		local result = common.execute_aws_command_with_input({ "glue", "import-catalog-to-glue" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-blueprints", function()
		local result = common.execute_aws_command_with_input({ "glue", "list-blueprints" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-column-statistics-task-runs", function()
		local result = common.execute_aws_command_with_input({ "glue", "list-column-statistics-task-runs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-connection-types", function()
		local result = common.execute_aws_command_with_input({ "glue", "list-connection-types" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-crawlers", function()
		local result = common.execute_aws_command_with_input({ "glue", "list-crawlers" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-crawls", function()
		local result = common.execute_aws_command_with_input({ "glue", "list-crawls" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-custom-entity-types", function()
		local result = common.execute_aws_command_with_input({ "glue", "list-custom-entity-types" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-data-quality-results", function()
		local result = common.execute_aws_command_with_input({ "glue", "list-data-quality-results" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-data-quality-rule-recommendation-runs", function()
		local result = common.execute_aws_command_with_input({ "glue", "list-data-quality-rule-recommendation-runs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-data-quality-ruleset-evaluation-runs", function()
		local result = common.execute_aws_command_with_input({ "glue", "list-data-quality-ruleset-evaluation-runs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-data-quality-rulesets", function()
		local result = common.execute_aws_command_with_input({ "glue", "list-data-quality-rulesets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-data-quality-statistic-annotations", function()
		local result = common.execute_aws_command_with_input({ "glue", "list-data-quality-statistic-annotations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-data-quality-statistics", function()
		local result = common.execute_aws_command_with_input({ "glue", "list-data-quality-statistics" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-dev-endpoints", function()
		local result = common.execute_aws_command_with_input({ "glue", "list-dev-endpoints" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-entities", function()
		local result = common.execute_aws_command_with_input({ "glue", "list-entities" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-jobs", function()
		local result = common.execute_aws_command_with_input({ "glue", "list-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-ml-transforms", function()
		local result = common.execute_aws_command_with_input({ "glue", "list-ml-transforms" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-registries", function()
		local result = common.execute_aws_command_with_input({ "glue", "list-registries" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-schema-versions", function()
		local result = common.execute_aws_command_with_input({ "glue", "list-schema-versions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-schemas", function()
		local result = common.execute_aws_command_with_input({ "glue", "list-schemas" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-sessions", function()
		local result = common.execute_aws_command_with_input({ "glue", "list-sessions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-statements", function()
		local result = common.execute_aws_command_with_input({ "glue", "list-statements" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-table-optimizer-runs", function()
		local result = common.execute_aws_command_with_input({ "glue", "list-table-optimizer-runs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-triggers", function()
		local result = common.execute_aws_command_with_input({ "glue", "list-triggers" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-usage-profiles", function()
		local result = common.execute_aws_command_with_input({ "glue", "list-usage-profiles" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-workflows", function()
		local result = common.execute_aws_command_with_input({ "glue", "list-workflows" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for modify-integration", function()
		local result = common.execute_aws_command_with_input({ "glue", "modify-integration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-data-catalog-encryption-settings", function()
		local result = common.execute_aws_command_with_input({ "glue", "put-data-catalog-encryption-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-data-quality-profile-annotation", function()
		local result = common.execute_aws_command_with_input({ "glue", "put-data-quality-profile-annotation" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-resource-policy", function()
		local result = common.execute_aws_command_with_input({ "glue", "put-resource-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-schema-version-metadata", function()
		local result = common.execute_aws_command_with_input({ "glue", "put-schema-version-metadata" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-workflow-run-properties", function()
		local result = common.execute_aws_command_with_input({ "glue", "put-workflow-run-properties" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for query-schema-version-metadata", function()
		local result = common.execute_aws_command_with_input({ "glue", "query-schema-version-metadata" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for register-schema-version", function()
		local result = common.execute_aws_command_with_input({ "glue", "register-schema-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for remove-schema-version-metadata", function()
		local result = common.execute_aws_command_with_input({ "glue", "remove-schema-version-metadata" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for reset-job-bookmark", function()
		local result = common.execute_aws_command_with_input({ "glue", "reset-job-bookmark" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for resume-workflow-run", function()
		local result = common.execute_aws_command_with_input({ "glue", "resume-workflow-run" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for run-statement", function()
		local result = common.execute_aws_command_with_input({ "glue", "run-statement" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for search-tables", function()
		local result = common.execute_aws_command_with_input({ "glue", "search-tables" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-blueprint-run", function()
		local result = common.execute_aws_command_with_input({ "glue", "start-blueprint-run" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-column-statistics-task-run", function()
		local result = common.execute_aws_command_with_input({ "glue", "start-column-statistics-task-run" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-column-statistics-task-run-schedule", function()
		local result = common.execute_aws_command_with_input({ "glue", "start-column-statistics-task-run-schedule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-crawler", function()
		local result = common.execute_aws_command_with_input({ "glue", "start-crawler" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-crawler-schedule", function()
		local result = common.execute_aws_command_with_input({ "glue", "start-crawler-schedule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-data-quality-rule-recommendation-run", function()
		local result = common.execute_aws_command_with_input({ "glue", "start-data-quality-rule-recommendation-run" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-data-quality-ruleset-evaluation-run", function()
		local result = common.execute_aws_command_with_input({ "glue", "start-data-quality-ruleset-evaluation-run" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-export-labels-task-run", function()
		local result = common.execute_aws_command_with_input({ "glue", "start-export-labels-task-run" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-import-labels-task-run", function()
		local result = common.execute_aws_command_with_input({ "glue", "start-import-labels-task-run" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-job-run", function()
		local result = common.execute_aws_command_with_input({ "glue", "start-job-run" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-ml-evaluation-task-run", function()
		local result = common.execute_aws_command_with_input({ "glue", "start-ml-evaluation-task-run" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-ml-labeling-set-generation-task-run", function()
		local result = common.execute_aws_command_with_input({ "glue", "start-ml-labeling-set-generation-task-run" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-trigger", function()
		local result = common.execute_aws_command_with_input({ "glue", "start-trigger" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-workflow-run", function()
		local result = common.execute_aws_command_with_input({ "glue", "start-workflow-run" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-column-statistics-task-run", function()
		local result = common.execute_aws_command_with_input({ "glue", "stop-column-statistics-task-run" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-column-statistics-task-run-schedule", function()
		local result = common.execute_aws_command_with_input({ "glue", "stop-column-statistics-task-run-schedule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-crawler", function()
		local result = common.execute_aws_command_with_input({ "glue", "stop-crawler" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-crawler-schedule", function()
		local result = common.execute_aws_command_with_input({ "glue", "stop-crawler-schedule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-session", function()
		local result = common.execute_aws_command_with_input({ "glue", "stop-session" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-trigger", function()
		local result = common.execute_aws_command_with_input({ "glue", "stop-trigger" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-workflow-run", function()
		local result = common.execute_aws_command_with_input({ "glue", "stop-workflow-run" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "glue", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for test-connection", function()
		local result = common.execute_aws_command_with_input({ "glue", "test-connection" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "glue", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-blueprint", function()
		local result = common.execute_aws_command_with_input({ "glue", "update-blueprint" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-catalog", function()
		local result = common.execute_aws_command_with_input({ "glue", "update-catalog" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-classifier", function()
		local result = common.execute_aws_command_with_input({ "glue", "update-classifier" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-column-statistics-for-partition", function()
		local result = common.execute_aws_command_with_input({ "glue", "update-column-statistics-for-partition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-column-statistics-for-table", function()
		local result = common.execute_aws_command_with_input({ "glue", "update-column-statistics-for-table" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-column-statistics-task-settings", function()
		local result = common.execute_aws_command_with_input({ "glue", "update-column-statistics-task-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-connection", function()
		local result = common.execute_aws_command_with_input({ "glue", "update-connection" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-crawler", function()
		local result = common.execute_aws_command_with_input({ "glue", "update-crawler" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-crawler-schedule", function()
		local result = common.execute_aws_command_with_input({ "glue", "update-crawler-schedule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-data-quality-ruleset", function()
		local result = common.execute_aws_command_with_input({ "glue", "update-data-quality-ruleset" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-database", function()
		local result = common.execute_aws_command_with_input({ "glue", "update-database" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-dev-endpoint", function()
		local result = common.execute_aws_command_with_input({ "glue", "update-dev-endpoint" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-integration-resource-property", function()
		local result = common.execute_aws_command_with_input({ "glue", "update-integration-resource-property" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-integration-table-properties", function()
		local result = common.execute_aws_command_with_input({ "glue", "update-integration-table-properties" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-job", function()
		local result = common.execute_aws_command_with_input({ "glue", "update-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-job-from-source-control", function()
		local result = common.execute_aws_command_with_input({ "glue", "update-job-from-source-control" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-ml-transform", function()
		local result = common.execute_aws_command_with_input({ "glue", "update-ml-transform" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-partition", function()
		local result = common.execute_aws_command_with_input({ "glue", "update-partition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-registry", function()
		local result = common.execute_aws_command_with_input({ "glue", "update-registry" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-schema", function()
		local result = common.execute_aws_command_with_input({ "glue", "update-schema" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-source-control-from-job", function()
		local result = common.execute_aws_command_with_input({ "glue", "update-source-control-from-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-table", function()
		local result = common.execute_aws_command_with_input({ "glue", "update-table" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-table-optimizer", function()
		local result = common.execute_aws_command_with_input({ "glue", "update-table-optimizer" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-trigger", function()
		local result = common.execute_aws_command_with_input({ "glue", "update-trigger" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-usage-profile", function()
		local result = common.execute_aws_command_with_input({ "glue", "update-usage-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-user-defined-function", function()
		local result = common.execute_aws_command_with_input({ "glue", "update-user-defined-function" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-workflow", function()
		local result = common.execute_aws_command_with_input({ "glue", "update-workflow" })
		assert.is_true(result.success)
	end)

end)