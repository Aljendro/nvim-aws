-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: lookoutmetrics

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS lookoutmetrics service testing", function()
	it("should generate a cli skeleton for activate-anomaly-detector", function()
		local result = common.execute_aws_command_with_input({ "lookoutmetrics", "activate-anomaly-detector" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for back-test-anomaly-detector", function()
		local result = common.execute_aws_command_with_input({ "lookoutmetrics", "back-test-anomaly-detector" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-alert", function()
		local result = common.execute_aws_command_with_input({ "lookoutmetrics", "create-alert" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-anomaly-detector", function()
		local result = common.execute_aws_command_with_input({ "lookoutmetrics", "create-anomaly-detector" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-metric-set", function()
		local result = common.execute_aws_command_with_input({ "lookoutmetrics", "create-metric-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for deactivate-anomaly-detector", function()
		local result = common.execute_aws_command_with_input({ "lookoutmetrics", "deactivate-anomaly-detector" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-alert", function()
		local result = common.execute_aws_command_with_input({ "lookoutmetrics", "delete-alert" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-anomaly-detector", function()
		local result = common.execute_aws_command_with_input({ "lookoutmetrics", "delete-anomaly-detector" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-alert", function()
		local result = common.execute_aws_command_with_input({ "lookoutmetrics", "describe-alert" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-anomaly-detection-executions", function()
		local result = common.execute_aws_command_with_input({ "lookoutmetrics", "describe-anomaly-detection-executions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-anomaly-detector", function()
		local result = common.execute_aws_command_with_input({ "lookoutmetrics", "describe-anomaly-detector" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-metric-set", function()
		local result = common.execute_aws_command_with_input({ "lookoutmetrics", "describe-metric-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for detect-metric-set-config", function()
		local result = common.execute_aws_command_with_input({ "lookoutmetrics", "detect-metric-set-config" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-anomaly-group", function()
		local result = common.execute_aws_command_with_input({ "lookoutmetrics", "get-anomaly-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-data-quality-metrics", function()
		local result = common.execute_aws_command_with_input({ "lookoutmetrics", "get-data-quality-metrics" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-feedback", function()
		local result = common.execute_aws_command_with_input({ "lookoutmetrics", "get-feedback" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-sample-data", function()
		local result = common.execute_aws_command_with_input({ "lookoutmetrics", "get-sample-data" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-alerts", function()
		local result = common.execute_aws_command_with_input({ "lookoutmetrics", "list-alerts" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-anomaly-detectors", function()
		local result = common.execute_aws_command_with_input({ "lookoutmetrics", "list-anomaly-detectors" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-anomaly-group-related-metrics", function()
		local result = common.execute_aws_command_with_input({ "lookoutmetrics", "list-anomaly-group-related-metrics" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-anomaly-group-summaries", function()
		local result = common.execute_aws_command_with_input({ "lookoutmetrics", "list-anomaly-group-summaries" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-anomaly-group-time-series", function()
		local result = common.execute_aws_command_with_input({ "lookoutmetrics", "list-anomaly-group-time-series" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-metric-sets", function()
		local result = common.execute_aws_command_with_input({ "lookoutmetrics", "list-metric-sets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "lookoutmetrics", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-feedback", function()
		local result = common.execute_aws_command_with_input({ "lookoutmetrics", "put-feedback" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "lookoutmetrics", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "lookoutmetrics", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-alert", function()
		local result = common.execute_aws_command_with_input({ "lookoutmetrics", "update-alert" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-anomaly-detector", function()
		local result = common.execute_aws_command_with_input({ "lookoutmetrics", "update-anomaly-detector" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-metric-set", function()
		local result = common.execute_aws_command_with_input({ "lookoutmetrics", "update-metric-set" })
		assert.is_true(result.success)
	end)

end)