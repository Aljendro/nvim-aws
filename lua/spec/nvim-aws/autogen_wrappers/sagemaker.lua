-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: sagemaker

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS sagemaker service testing", function()
	it("should generate a cli skeleton for add-association", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "add-association" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for add-tags", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "add-tags" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for associate-trial-component", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "associate-trial-component" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-delete-cluster-nodes", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "batch-delete-cluster-nodes" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-describe-model-package", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "batch-describe-model-package" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-action", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-action" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-algorithm", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-algorithm" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-app", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-app" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-app-image-config", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-app-image-config" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-artifact", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-artifact" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-auto-ml-job", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-auto-ml-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-auto-ml-job-v2", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-auto-ml-job-v2" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-cluster", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-cluster" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-cluster-scheduler-config", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-cluster-scheduler-config" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-code-repository", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-code-repository" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-compilation-job", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-compilation-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-compute-quota", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-compute-quota" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-context", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-context" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-data-quality-job-definition", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-data-quality-job-definition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-device-fleet", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-device-fleet" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-domain", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-domain" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-edge-deployment-plan", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-edge-deployment-plan" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-edge-deployment-stage", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-edge-deployment-stage" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-edge-packaging-job", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-edge-packaging-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-endpoint", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-endpoint" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-endpoint-config", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-endpoint-config" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-experiment", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-experiment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-feature-group", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-feature-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-flow-definition", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-flow-definition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-hub", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-hub" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-hub-content-reference", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-hub-content-reference" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-human-task-ui", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-human-task-ui" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-hyper-parameter-tuning-job", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-hyper-parameter-tuning-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-image", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-image" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-image-version", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-image-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-inference-component", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-inference-component" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-inference-experiment", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-inference-experiment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-inference-recommendations-job", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-inference-recommendations-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-labeling-job", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-labeling-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-mlflow-tracking-server", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-mlflow-tracking-server" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-model", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-model" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-model-bias-job-definition", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-model-bias-job-definition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-model-card", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-model-card" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-model-card-export-job", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-model-card-export-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-model-explainability-job-definition", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-model-explainability-job-definition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-model-package", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-model-package" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-model-package-group", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-model-package-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-model-quality-job-definition", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-model-quality-job-definition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-monitoring-schedule", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-monitoring-schedule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-notebook-instance", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-notebook-instance" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-notebook-instance-lifecycle-config", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-notebook-instance-lifecycle-config" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-optimization-job", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-optimization-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-partner-app", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-partner-app" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-partner-app-presigned-url", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-partner-app-presigned-url" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-pipeline", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-pipeline" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-presigned-domain-url", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-presigned-domain-url" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-presigned-mlflow-tracking-server-url", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-presigned-mlflow-tracking-server-url" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-presigned-notebook-instance-url", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-presigned-notebook-instance-url" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-processing-job", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-processing-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-project", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-project" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-space", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-space" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-studio-lifecycle-config", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-studio-lifecycle-config" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-training-job", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-training-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-training-plan", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-training-plan" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-transform-job", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-transform-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-trial", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-trial" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-trial-component", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-trial-component" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-user-profile", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-user-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-workforce", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-workforce" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-workteam", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "create-workteam" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-action", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "delete-action" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-algorithm", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "delete-algorithm" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-app", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "delete-app" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-app-image-config", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "delete-app-image-config" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-artifact", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "delete-artifact" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-association", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "delete-association" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-cluster", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "delete-cluster" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-cluster-scheduler-config", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "delete-cluster-scheduler-config" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-code-repository", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "delete-code-repository" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-compilation-job", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "delete-compilation-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-compute-quota", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "delete-compute-quota" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-context", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "delete-context" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-data-quality-job-definition", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "delete-data-quality-job-definition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-device-fleet", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "delete-device-fleet" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-domain", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "delete-domain" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-edge-deployment-plan", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "delete-edge-deployment-plan" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-edge-deployment-stage", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "delete-edge-deployment-stage" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-endpoint", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "delete-endpoint" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-endpoint-config", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "delete-endpoint-config" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-experiment", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "delete-experiment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-feature-group", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "delete-feature-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-flow-definition", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "delete-flow-definition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-hub", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "delete-hub" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-hub-content", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "delete-hub-content" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-hub-content-reference", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "delete-hub-content-reference" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-human-task-ui", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "delete-human-task-ui" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-hyper-parameter-tuning-job", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "delete-hyper-parameter-tuning-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-image", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "delete-image" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-image-version", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "delete-image-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-inference-component", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "delete-inference-component" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-inference-experiment", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "delete-inference-experiment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-mlflow-tracking-server", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "delete-mlflow-tracking-server" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-model", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "delete-model" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-model-bias-job-definition", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "delete-model-bias-job-definition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-model-card", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "delete-model-card" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-model-explainability-job-definition", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "delete-model-explainability-job-definition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-model-package", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "delete-model-package" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-model-package-group", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "delete-model-package-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-model-package-group-policy", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "delete-model-package-group-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-model-quality-job-definition", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "delete-model-quality-job-definition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-monitoring-schedule", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "delete-monitoring-schedule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-notebook-instance", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "delete-notebook-instance" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-notebook-instance-lifecycle-config", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "delete-notebook-instance-lifecycle-config" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-optimization-job", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "delete-optimization-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-partner-app", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "delete-partner-app" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-pipeline", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "delete-pipeline" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-project", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "delete-project" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-space", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "delete-space" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-studio-lifecycle-config", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "delete-studio-lifecycle-config" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-tags", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "delete-tags" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-trial", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "delete-trial" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-trial-component", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "delete-trial-component" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-user-profile", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "delete-user-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-workforce", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "delete-workforce" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-workteam", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "delete-workteam" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for deregister-devices", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "deregister-devices" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-action", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-action" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-algorithm", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-algorithm" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-app", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-app" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-app-image-config", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-app-image-config" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-artifact", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-artifact" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-auto-ml-job", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-auto-ml-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-auto-ml-job-v2", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-auto-ml-job-v2" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-cluster", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-cluster" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-cluster-node", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-cluster-node" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-cluster-scheduler-config", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-cluster-scheduler-config" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-code-repository", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-code-repository" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-compilation-job", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-compilation-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-compute-quota", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-compute-quota" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-context", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-context" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-data-quality-job-definition", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-data-quality-job-definition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-device", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-device" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-device-fleet", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-device-fleet" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-domain", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-domain" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-edge-deployment-plan", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-edge-deployment-plan" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-edge-packaging-job", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-edge-packaging-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-endpoint", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-endpoint" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-endpoint-config", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-endpoint-config" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-experiment", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-experiment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-feature-group", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-feature-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-feature-metadata", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-feature-metadata" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-flow-definition", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-flow-definition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-hub", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-hub" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-hub-content", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-hub-content" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-human-task-ui", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-human-task-ui" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-hyper-parameter-tuning-job", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-hyper-parameter-tuning-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-image", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-image" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-image-version", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-image-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-inference-component", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-inference-component" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-inference-experiment", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-inference-experiment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-inference-recommendations-job", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-inference-recommendations-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-labeling-job", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-labeling-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-lineage-group", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-lineage-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-mlflow-tracking-server", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-mlflow-tracking-server" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-model", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-model" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-model-bias-job-definition", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-model-bias-job-definition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-model-card", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-model-card" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-model-card-export-job", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-model-card-export-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-model-explainability-job-definition", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-model-explainability-job-definition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-model-package", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-model-package" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-model-package-group", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-model-package-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-model-quality-job-definition", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-model-quality-job-definition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-monitoring-schedule", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-monitoring-schedule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-notebook-instance", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-notebook-instance" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-notebook-instance-lifecycle-config", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-notebook-instance-lifecycle-config" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-optimization-job", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-optimization-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-partner-app", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-partner-app" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-pipeline", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-pipeline" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-pipeline-definition-for-execution", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-pipeline-definition-for-execution" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-pipeline-execution", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-pipeline-execution" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-processing-job", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-processing-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-project", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-project" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-space", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-space" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-studio-lifecycle-config", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-studio-lifecycle-config" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-subscribed-workteam", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-subscribed-workteam" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-training-job", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-training-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-training-plan", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-training-plan" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-transform-job", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-transform-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-trial", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-trial" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-trial-component", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-trial-component" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-user-profile", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-user-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-workforce", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-workforce" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-workteam", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "describe-workteam" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disable-sagemaker-servicecatalog-portfolio", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "disable-sagemaker-servicecatalog-portfolio" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-trial-component", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "disassociate-trial-component" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for enable-sagemaker-servicecatalog-portfolio", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "enable-sagemaker-servicecatalog-portfolio" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-device-fleet-report", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "get-device-fleet-report" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-lineage-group-policy", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "get-lineage-group-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-model-package-group-policy", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "get-model-package-group-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-sagemaker-servicecatalog-portfolio-status", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "get-sagemaker-servicecatalog-portfolio-status" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-scaling-configuration-recommendation", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "get-scaling-configuration-recommendation" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-search-suggestions", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "get-search-suggestions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for import-hub-content", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "import-hub-content" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-actions", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-actions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-algorithms", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-algorithms" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-aliases", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-aliases" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-app-image-configs", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-app-image-configs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-apps", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-apps" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-artifacts", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-artifacts" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-associations", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-associations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-auto-ml-jobs", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-auto-ml-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-candidates-for-auto-ml-job", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-candidates-for-auto-ml-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-cluster-nodes", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-cluster-nodes" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-cluster-scheduler-configs", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-cluster-scheduler-configs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-clusters", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-clusters" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-code-repositories", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-code-repositories" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-compilation-jobs", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-compilation-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-compute-quotas", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-compute-quotas" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-contexts", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-contexts" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-data-quality-job-definitions", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-data-quality-job-definitions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-device-fleets", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-device-fleets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-devices", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-devices" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-domains", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-domains" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-edge-deployment-plans", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-edge-deployment-plans" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-edge-packaging-jobs", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-edge-packaging-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-endpoint-configs", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-endpoint-configs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-endpoints", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-endpoints" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-experiments", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-experiments" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-feature-groups", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-feature-groups" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-flow-definitions", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-flow-definitions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-hub-content-versions", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-hub-content-versions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-hub-contents", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-hub-contents" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-hubs", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-hubs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-human-task-uis", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-human-task-uis" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-hyper-parameter-tuning-jobs", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-hyper-parameter-tuning-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-image-versions", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-image-versions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-images", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-images" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-inference-components", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-inference-components" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-inference-experiments", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-inference-experiments" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-inference-recommendations-job-steps", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-inference-recommendations-job-steps" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-inference-recommendations-jobs", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-inference-recommendations-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-labeling-jobs", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-labeling-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-labeling-jobs-for-workteam", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-labeling-jobs-for-workteam" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-lineage-groups", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-lineage-groups" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-mlflow-tracking-servers", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-mlflow-tracking-servers" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-model-bias-job-definitions", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-model-bias-job-definitions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-model-card-export-jobs", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-model-card-export-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-model-card-versions", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-model-card-versions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-model-cards", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-model-cards" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-model-explainability-job-definitions", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-model-explainability-job-definitions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-model-metadata", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-model-metadata" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-model-package-groups", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-model-package-groups" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-model-packages", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-model-packages" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-model-quality-job-definitions", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-model-quality-job-definitions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-models", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-models" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-monitoring-alert-history", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-monitoring-alert-history" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-monitoring-alerts", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-monitoring-alerts" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-monitoring-executions", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-monitoring-executions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-monitoring-schedules", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-monitoring-schedules" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-notebook-instance-lifecycle-configs", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-notebook-instance-lifecycle-configs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-notebook-instances", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-notebook-instances" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-optimization-jobs", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-optimization-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-partner-apps", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-partner-apps" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-pipeline-execution-steps", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-pipeline-execution-steps" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-pipeline-executions", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-pipeline-executions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-pipeline-parameters-for-execution", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-pipeline-parameters-for-execution" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-pipelines", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-pipelines" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-processing-jobs", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-processing-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-projects", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-projects" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-resource-catalogs", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-resource-catalogs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-spaces", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-spaces" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-stage-devices", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-stage-devices" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-studio-lifecycle-configs", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-studio-lifecycle-configs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-subscribed-workteams", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-subscribed-workteams" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-tags" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-training-jobs", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-training-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-training-jobs-for-hyper-parameter-tuning-job", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-training-jobs-for-hyper-parameter-tuning-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-training-plans", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-training-plans" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-transform-jobs", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-transform-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-trial-components", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-trial-components" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-trials", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-trials" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-user-profiles", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-user-profiles" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-workforces", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-workforces" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-workteams", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "list-workteams" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-model-package-group-policy", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "put-model-package-group-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for query-lineage", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "query-lineage" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for register-devices", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "register-devices" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for render-ui-template", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "render-ui-template" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for retry-pipeline-execution", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "retry-pipeline-execution" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for search", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "search" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for search-training-plan-offerings", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "search-training-plan-offerings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for send-pipeline-execution-step-failure", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "send-pipeline-execution-step-failure" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for send-pipeline-execution-step-success", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "send-pipeline-execution-step-success" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-edge-deployment-stage", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "start-edge-deployment-stage" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-inference-experiment", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "start-inference-experiment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-mlflow-tracking-server", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "start-mlflow-tracking-server" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-monitoring-schedule", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "start-monitoring-schedule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-notebook-instance", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "start-notebook-instance" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-pipeline-execution", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "start-pipeline-execution" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-auto-ml-job", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "stop-auto-ml-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-compilation-job", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "stop-compilation-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-edge-deployment-stage", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "stop-edge-deployment-stage" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-edge-packaging-job", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "stop-edge-packaging-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-hyper-parameter-tuning-job", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "stop-hyper-parameter-tuning-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-inference-experiment", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "stop-inference-experiment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-inference-recommendations-job", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "stop-inference-recommendations-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-labeling-job", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "stop-labeling-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-mlflow-tracking-server", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "stop-mlflow-tracking-server" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-monitoring-schedule", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "stop-monitoring-schedule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-notebook-instance", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "stop-notebook-instance" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-optimization-job", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "stop-optimization-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-pipeline-execution", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "stop-pipeline-execution" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-processing-job", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "stop-processing-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-training-job", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "stop-training-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-transform-job", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "stop-transform-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-action", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "update-action" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-app-image-config", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "update-app-image-config" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-artifact", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "update-artifact" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-cluster", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "update-cluster" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-cluster-scheduler-config", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "update-cluster-scheduler-config" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-cluster-software", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "update-cluster-software" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-code-repository", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "update-code-repository" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-compute-quota", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "update-compute-quota" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-context", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "update-context" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-device-fleet", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "update-device-fleet" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-devices", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "update-devices" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-domain", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "update-domain" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-endpoint", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "update-endpoint" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-endpoint-weights-and-capacities", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "update-endpoint-weights-and-capacities" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-experiment", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "update-experiment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-feature-group", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "update-feature-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-feature-metadata", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "update-feature-metadata" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-hub", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "update-hub" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-hub-content", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "update-hub-content" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-hub-content-reference", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "update-hub-content-reference" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-image", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "update-image" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-image-version", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "update-image-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-inference-component", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "update-inference-component" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-inference-component-runtime-config", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "update-inference-component-runtime-config" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-inference-experiment", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "update-inference-experiment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-mlflow-tracking-server", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "update-mlflow-tracking-server" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-model-card", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "update-model-card" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-model-package", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "update-model-package" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-monitoring-alert", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "update-monitoring-alert" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-monitoring-schedule", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "update-monitoring-schedule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-notebook-instance", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "update-notebook-instance" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-notebook-instance-lifecycle-config", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "update-notebook-instance-lifecycle-config" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-partner-app", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "update-partner-app" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-pipeline", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "update-pipeline" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-pipeline-execution", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "update-pipeline-execution" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-project", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "update-project" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-space", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "update-space" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-training-job", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "update-training-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-trial", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "update-trial" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-trial-component", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "update-trial-component" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-user-profile", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "update-user-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-workforce", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "update-workforce" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-workteam", function()
		local result = common.execute_aws_command_with_input({ "sagemaker", "update-workteam" })
		assert.is_true(result.success)
	end)

end)