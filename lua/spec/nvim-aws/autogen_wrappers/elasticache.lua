-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: elasticache

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS elasticache service testing", function()
	it("should generate a cli skeleton for add-tags-to-resource", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "add-tags-to-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for authorize-cache-security-group-ingress", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "authorize-cache-security-group-ingress" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-apply-update-action", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "batch-apply-update-action" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-stop-update-action", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "batch-stop-update-action" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for complete-migration", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "complete-migration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for copy-serverless-cache-snapshot", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "copy-serverless-cache-snapshot" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for copy-snapshot", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "copy-snapshot" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-cache-cluster", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "create-cache-cluster" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-cache-parameter-group", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "create-cache-parameter-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-cache-security-group", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "create-cache-security-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-cache-subnet-group", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "create-cache-subnet-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-global-replication-group", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "create-global-replication-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-replication-group", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "create-replication-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-serverless-cache", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "create-serverless-cache" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-serverless-cache-snapshot", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "create-serverless-cache-snapshot" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-snapshot", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "create-snapshot" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-user", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "create-user" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-user-group", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "create-user-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for decrease-node-groups-in-global-replication-group", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "decrease-node-groups-in-global-replication-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for decrease-replica-count", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "decrease-replica-count" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-cache-cluster", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "delete-cache-cluster" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-cache-parameter-group", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "delete-cache-parameter-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-cache-security-group", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "delete-cache-security-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-cache-subnet-group", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "delete-cache-subnet-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-global-replication-group", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "delete-global-replication-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-replication-group", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "delete-replication-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-serverless-cache", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "delete-serverless-cache" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-serverless-cache-snapshot", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "delete-serverless-cache-snapshot" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-snapshot", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "delete-snapshot" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-user", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "delete-user" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-user-group", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "delete-user-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-cache-clusters", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "describe-cache-clusters" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-cache-engine-versions", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "describe-cache-engine-versions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-cache-parameter-groups", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "describe-cache-parameter-groups" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-cache-parameters", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "describe-cache-parameters" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-cache-security-groups", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "describe-cache-security-groups" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-cache-subnet-groups", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "describe-cache-subnet-groups" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-engine-default-parameters", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "describe-engine-default-parameters" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-events", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "describe-events" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-global-replication-groups", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "describe-global-replication-groups" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-replication-groups", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "describe-replication-groups" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-reserved-cache-nodes", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "describe-reserved-cache-nodes" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-reserved-cache-nodes-offerings", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "describe-reserved-cache-nodes-offerings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-serverless-cache-snapshots", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "describe-serverless-cache-snapshots" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-serverless-caches", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "describe-serverless-caches" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-service-updates", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "describe-service-updates" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-snapshots", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "describe-snapshots" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-update-actions", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "describe-update-actions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-user-groups", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "describe-user-groups" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-users", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "describe-users" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-global-replication-group", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "disassociate-global-replication-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for export-serverless-cache-snapshot", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "export-serverless-cache-snapshot" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for failover-global-replication-group", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "failover-global-replication-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for increase-node-groups-in-global-replication-group", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "increase-node-groups-in-global-replication-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for increase-replica-count", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "increase-replica-count" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-allowed-node-type-modifications", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "list-allowed-node-type-modifications" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for modify-cache-cluster", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "modify-cache-cluster" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for modify-cache-parameter-group", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "modify-cache-parameter-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for modify-cache-subnet-group", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "modify-cache-subnet-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for modify-global-replication-group", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "modify-global-replication-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for modify-replication-group", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "modify-replication-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for modify-replication-group-shard-configuration", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "modify-replication-group-shard-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for modify-serverless-cache", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "modify-serverless-cache" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for modify-user", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "modify-user" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for modify-user-group", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "modify-user-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for purchase-reserved-cache-nodes-offering", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "purchase-reserved-cache-nodes-offering" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for rebalance-slots-in-global-replication-group", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "rebalance-slots-in-global-replication-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for reboot-cache-cluster", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "reboot-cache-cluster" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for remove-tags-from-resource", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "remove-tags-from-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for reset-cache-parameter-group", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "reset-cache-parameter-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for revoke-cache-security-group-ingress", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "revoke-cache-security-group-ingress" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-migration", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "start-migration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for test-failover", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "test-failover" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for test-migration", function()
		local result = common.execute_aws_command_with_input({ "elasticache", "test-migration" })
		assert.is_true(result.success)
	end)

end)