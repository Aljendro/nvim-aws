-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: application-auto-scaling

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS application-auto-scaling service testing", function()
	it("should generate a cli skeleton for delete-scaling-policy", function()
		local result = common.execute_aws_command_with_input({ "application-autoscaling", "delete-scaling-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-scheduled-action", function()
		local result = common.execute_aws_command_with_input({ "application-autoscaling", "delete-scheduled-action" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for deregister-scalable-target", function()
		local result = common.execute_aws_command_with_input({ "application-autoscaling", "deregister-scalable-target" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-scalable-targets", function()
		local result = common.execute_aws_command_with_input({ "application-autoscaling", "describe-scalable-targets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-scaling-activities", function()
		local result = common.execute_aws_command_with_input({ "application-autoscaling", "describe-scaling-activities" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-scaling-policies", function()
		local result = common.execute_aws_command_with_input({ "application-autoscaling", "describe-scaling-policies" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-scheduled-actions", function()
		local result = common.execute_aws_command_with_input({ "application-autoscaling", "describe-scheduled-actions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-predictive-scaling-forecast", function()
		local result = common.execute_aws_command_with_input({ "application-autoscaling", "get-predictive-scaling-forecast" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "application-autoscaling", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-scaling-policy", function()
		local result = common.execute_aws_command_with_input({ "application-autoscaling", "put-scaling-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-scheduled-action", function()
		local result = common.execute_aws_command_with_input({ "application-autoscaling", "put-scheduled-action" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for register-scalable-target", function()
		local result = common.execute_aws_command_with_input({ "application-autoscaling", "register-scalable-target" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "application-autoscaling", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "application-autoscaling", "untag-resource" })
		assert.is_true(result.success)
	end)

end)