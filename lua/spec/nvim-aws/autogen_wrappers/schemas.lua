-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: schemas

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS schemas service testing", function()
	it("should generate a cli skeleton for create-discoverer", function()
		local result = common.execute_aws_command_with_input({ "schemas", "create-discoverer" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-registry", function()
		local result = common.execute_aws_command_with_input({ "schemas", "create-registry" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-schema", function()
		local result = common.execute_aws_command_with_input({ "schemas", "create-schema" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-discoverer", function()
		local result = common.execute_aws_command_with_input({ "schemas", "delete-discoverer" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-registry", function()
		local result = common.execute_aws_command_with_input({ "schemas", "delete-registry" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-resource-policy", function()
		local result = common.execute_aws_command_with_input({ "schemas", "delete-resource-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-schema", function()
		local result = common.execute_aws_command_with_input({ "schemas", "delete-schema" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-schema-version", function()
		local result = common.execute_aws_command_with_input({ "schemas", "delete-schema-version" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-code-binding", function()
		local result = common.execute_aws_command_with_input({ "schemas", "describe-code-binding" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-discoverer", function()
		local result = common.execute_aws_command_with_input({ "schemas", "describe-discoverer" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-registry", function()
		local result = common.execute_aws_command_with_input({ "schemas", "describe-registry" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-schema", function()
		local result = common.execute_aws_command_with_input({ "schemas", "describe-schema" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for export-schema", function()
		local result = common.execute_aws_command_with_input({ "schemas", "export-schema" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-code-binding-source", function()
		local result = common.execute_aws_command_with_input({ "schemas", "get-code-binding-source" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-discovered-schema", function()
		local result = common.execute_aws_command_with_input({ "schemas", "get-discovered-schema" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-resource-policy", function()
		local result = common.execute_aws_command_with_input({ "schemas", "get-resource-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-discoverers", function()
		local result = common.execute_aws_command_with_input({ "schemas", "list-discoverers" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-registries", function()
		local result = common.execute_aws_command_with_input({ "schemas", "list-registries" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-schema-versions", function()
		local result = common.execute_aws_command_with_input({ "schemas", "list-schema-versions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-schemas", function()
		local result = common.execute_aws_command_with_input({ "schemas", "list-schemas" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "schemas", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-code-binding", function()
		local result = common.execute_aws_command_with_input({ "schemas", "put-code-binding" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-resource-policy", function()
		local result = common.execute_aws_command_with_input({ "schemas", "put-resource-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for search-schemas", function()
		local result = common.execute_aws_command_with_input({ "schemas", "search-schemas" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-discoverer", function()
		local result = common.execute_aws_command_with_input({ "schemas", "start-discoverer" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-discoverer", function()
		local result = common.execute_aws_command_with_input({ "schemas", "stop-discoverer" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "schemas", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "schemas", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-discoverer", function()
		local result = common.execute_aws_command_with_input({ "schemas", "update-discoverer" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-registry", function()
		local result = common.execute_aws_command_with_input({ "schemas", "update-registry" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-schema", function()
		local result = common.execute_aws_command_with_input({ "schemas", "update-schema" })
		assert.is_true(result.success)
	end)

end)