-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: datazone

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS datazone service testing", function()
	it("should generate a cli skeleton for accept-predictions", function()
		local result = common.execute_aws_command_with_input({ "datazone", "accept-predictions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for accept-subscription-request", function()
		local result = common.execute_aws_command_with_input({ "datazone", "accept-subscription-request" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for add-entity-owner", function()
		local result = common.execute_aws_command_with_input({ "datazone", "add-entity-owner" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for add-policy-grant", function()
		local result = common.execute_aws_command_with_input({ "datazone", "add-policy-grant" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for associate-environment-role", function()
		local result = common.execute_aws_command_with_input({ "datazone", "associate-environment-role" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for cancel-metadata-generation-run", function()
		local result = common.execute_aws_command_with_input({ "datazone", "cancel-metadata-generation-run" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for cancel-subscription", function()
		local result = common.execute_aws_command_with_input({ "datazone", "cancel-subscription" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-asset", function()
		local result = common.execute_aws_command_with_input({ "datazone", "create-asset" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-asset-filter", function()
		local result = common.execute_aws_command_with_input({ "datazone", "create-asset-filter" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-asset-revision", function()
		local result = common.execute_aws_command_with_input({ "datazone", "create-asset-revision" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-asset-type", function()
		local result = common.execute_aws_command_with_input({ "datazone", "create-asset-type" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-connection", function()
		local result = common.execute_aws_command_with_input({ "datazone", "create-connection" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-data-product", function()
		local result = common.execute_aws_command_with_input({ "datazone", "create-data-product" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-data-product-revision", function()
		local result = common.execute_aws_command_with_input({ "datazone", "create-data-product-revision" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-data-source", function()
		local result = common.execute_aws_command_with_input({ "datazone", "create-data-source" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-domain", function()
		local result = common.execute_aws_command_with_input({ "datazone", "create-domain" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-domain-unit", function()
		local result = common.execute_aws_command_with_input({ "datazone", "create-domain-unit" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-environment", function()
		local result = common.execute_aws_command_with_input({ "datazone", "create-environment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-environment-action", function()
		local result = common.execute_aws_command_with_input({ "datazone", "create-environment-action" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-environment-profile", function()
		local result = common.execute_aws_command_with_input({ "datazone", "create-environment-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-form-type", function()
		local result = common.execute_aws_command_with_input({ "datazone", "create-form-type" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-glossary", function()
		local result = common.execute_aws_command_with_input({ "datazone", "create-glossary" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-glossary-term", function()
		local result = common.execute_aws_command_with_input({ "datazone", "create-glossary-term" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-group-profile", function()
		local result = common.execute_aws_command_with_input({ "datazone", "create-group-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-listing-change-set", function()
		local result = common.execute_aws_command_with_input({ "datazone", "create-listing-change-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-project", function()
		local result = common.execute_aws_command_with_input({ "datazone", "create-project" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-project-membership", function()
		local result = common.execute_aws_command_with_input({ "datazone", "create-project-membership" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-project-profile", function()
		local result = common.execute_aws_command_with_input({ "datazone", "create-project-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-rule", function()
		local result = common.execute_aws_command_with_input({ "datazone", "create-rule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-subscription-grant", function()
		local result = common.execute_aws_command_with_input({ "datazone", "create-subscription-grant" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-subscription-request", function()
		local result = common.execute_aws_command_with_input({ "datazone", "create-subscription-request" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-subscription-target", function()
		local result = common.execute_aws_command_with_input({ "datazone", "create-subscription-target" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-user-profile", function()
		local result = common.execute_aws_command_with_input({ "datazone", "create-user-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-asset", function()
		local result = common.execute_aws_command_with_input({ "datazone", "delete-asset" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-asset-filter", function()
		local result = common.execute_aws_command_with_input({ "datazone", "delete-asset-filter" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-connection", function()
		local result = common.execute_aws_command_with_input({ "datazone", "delete-connection" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-data-product", function()
		local result = common.execute_aws_command_with_input({ "datazone", "delete-data-product" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-data-source", function()
		local result = common.execute_aws_command_with_input({ "datazone", "delete-data-source" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-domain", function()
		local result = common.execute_aws_command_with_input({ "datazone", "delete-domain" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-domain-unit", function()
		local result = common.execute_aws_command_with_input({ "datazone", "delete-domain-unit" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-environment", function()
		local result = common.execute_aws_command_with_input({ "datazone", "delete-environment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-environment-action", function()
		local result = common.execute_aws_command_with_input({ "datazone", "delete-environment-action" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-environment-blueprint-configuration", function()
		local result = common.execute_aws_command_with_input({ "datazone", "delete-environment-blueprint-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-environment-profile", function()
		local result = common.execute_aws_command_with_input({ "datazone", "delete-environment-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-glossary", function()
		local result = common.execute_aws_command_with_input({ "datazone", "delete-glossary" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-glossary-term", function()
		local result = common.execute_aws_command_with_input({ "datazone", "delete-glossary-term" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-listing", function()
		local result = common.execute_aws_command_with_input({ "datazone", "delete-listing" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-project", function()
		local result = common.execute_aws_command_with_input({ "datazone", "delete-project" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-project-membership", function()
		local result = common.execute_aws_command_with_input({ "datazone", "delete-project-membership" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-project-profile", function()
		local result = common.execute_aws_command_with_input({ "datazone", "delete-project-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-rule", function()
		local result = common.execute_aws_command_with_input({ "datazone", "delete-rule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-subscription-grant", function()
		local result = common.execute_aws_command_with_input({ "datazone", "delete-subscription-grant" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-subscription-request", function()
		local result = common.execute_aws_command_with_input({ "datazone", "delete-subscription-request" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-subscription-target", function()
		local result = common.execute_aws_command_with_input({ "datazone", "delete-subscription-target" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-time-series-data-points", function()
		local result = common.execute_aws_command_with_input({ "datazone", "delete-time-series-data-points" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-environment-role", function()
		local result = common.execute_aws_command_with_input({ "datazone", "disassociate-environment-role" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-asset", function()
		local result = common.execute_aws_command_with_input({ "datazone", "get-asset" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-asset-filter", function()
		local result = common.execute_aws_command_with_input({ "datazone", "get-asset-filter" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-connection", function()
		local result = common.execute_aws_command_with_input({ "datazone", "get-connection" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-data-product", function()
		local result = common.execute_aws_command_with_input({ "datazone", "get-data-product" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-data-source", function()
		local result = common.execute_aws_command_with_input({ "datazone", "get-data-source" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-data-source-run", function()
		local result = common.execute_aws_command_with_input({ "datazone", "get-data-source-run" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-domain", function()
		local result = common.execute_aws_command_with_input({ "datazone", "get-domain" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-domain-unit", function()
		local result = common.execute_aws_command_with_input({ "datazone", "get-domain-unit" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-environment", function()
		local result = common.execute_aws_command_with_input({ "datazone", "get-environment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-environment-action", function()
		local result = common.execute_aws_command_with_input({ "datazone", "get-environment-action" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-environment-blueprint", function()
		local result = common.execute_aws_command_with_input({ "datazone", "get-environment-blueprint" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-environment-blueprint-configuration", function()
		local result = common.execute_aws_command_with_input({ "datazone", "get-environment-blueprint-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-environment-credentials", function()
		local result = common.execute_aws_command_with_input({ "datazone", "get-environment-credentials" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-environment-profile", function()
		local result = common.execute_aws_command_with_input({ "datazone", "get-environment-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-glossary", function()
		local result = common.execute_aws_command_with_input({ "datazone", "get-glossary" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-glossary-term", function()
		local result = common.execute_aws_command_with_input({ "datazone", "get-glossary-term" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-group-profile", function()
		local result = common.execute_aws_command_with_input({ "datazone", "get-group-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-iam-portal-login-url", function()
		local result = common.execute_aws_command_with_input({ "datazone", "get-iam-portal-login-url" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-job-run", function()
		local result = common.execute_aws_command_with_input({ "datazone", "get-job-run" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-lineage-event", function()
		local result = common.execute_aws_command_with_input({ "datazone", "get-lineage-event" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-lineage-node", function()
		local result = common.execute_aws_command_with_input({ "datazone", "get-lineage-node" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-listing", function()
		local result = common.execute_aws_command_with_input({ "datazone", "get-listing" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-metadata-generation-run", function()
		local result = common.execute_aws_command_with_input({ "datazone", "get-metadata-generation-run" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-project", function()
		local result = common.execute_aws_command_with_input({ "datazone", "get-project" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-project-profile", function()
		local result = common.execute_aws_command_with_input({ "datazone", "get-project-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-rule", function()
		local result = common.execute_aws_command_with_input({ "datazone", "get-rule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-subscription", function()
		local result = common.execute_aws_command_with_input({ "datazone", "get-subscription" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-subscription-grant", function()
		local result = common.execute_aws_command_with_input({ "datazone", "get-subscription-grant" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-subscription-request-details", function()
		local result = common.execute_aws_command_with_input({ "datazone", "get-subscription-request-details" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-subscription-target", function()
		local result = common.execute_aws_command_with_input({ "datazone", "get-subscription-target" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-time-series-data-point", function()
		local result = common.execute_aws_command_with_input({ "datazone", "get-time-series-data-point" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-user-profile", function()
		local result = common.execute_aws_command_with_input({ "datazone", "get-user-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-asset-filters", function()
		local result = common.execute_aws_command_with_input({ "datazone", "list-asset-filters" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-asset-revisions", function()
		local result = common.execute_aws_command_with_input({ "datazone", "list-asset-revisions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-connections", function()
		local result = common.execute_aws_command_with_input({ "datazone", "list-connections" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-data-product-revisions", function()
		local result = common.execute_aws_command_with_input({ "datazone", "list-data-product-revisions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-data-source-run-activities", function()
		local result = common.execute_aws_command_with_input({ "datazone", "list-data-source-run-activities" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-data-source-runs", function()
		local result = common.execute_aws_command_with_input({ "datazone", "list-data-source-runs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-data-sources", function()
		local result = common.execute_aws_command_with_input({ "datazone", "list-data-sources" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-domain-units-for-parent", function()
		local result = common.execute_aws_command_with_input({ "datazone", "list-domain-units-for-parent" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-domains", function()
		local result = common.execute_aws_command_with_input({ "datazone", "list-domains" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-entity-owners", function()
		local result = common.execute_aws_command_with_input({ "datazone", "list-entity-owners" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-environment-actions", function()
		local result = common.execute_aws_command_with_input({ "datazone", "list-environment-actions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-environment-blueprint-configurations", function()
		local result = common.execute_aws_command_with_input({ "datazone", "list-environment-blueprint-configurations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-environment-blueprints", function()
		local result = common.execute_aws_command_with_input({ "datazone", "list-environment-blueprints" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-environment-profiles", function()
		local result = common.execute_aws_command_with_input({ "datazone", "list-environment-profiles" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-environments", function()
		local result = common.execute_aws_command_with_input({ "datazone", "list-environments" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-job-runs", function()
		local result = common.execute_aws_command_with_input({ "datazone", "list-job-runs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-lineage-events", function()
		local result = common.execute_aws_command_with_input({ "datazone", "list-lineage-events" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-lineage-node-history", function()
		local result = common.execute_aws_command_with_input({ "datazone", "list-lineage-node-history" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-metadata-generation-runs", function()
		local result = common.execute_aws_command_with_input({ "datazone", "list-metadata-generation-runs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-notifications", function()
		local result = common.execute_aws_command_with_input({ "datazone", "list-notifications" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-policy-grants", function()
		local result = common.execute_aws_command_with_input({ "datazone", "list-policy-grants" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-project-memberships", function()
		local result = common.execute_aws_command_with_input({ "datazone", "list-project-memberships" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-project-profiles", function()
		local result = common.execute_aws_command_with_input({ "datazone", "list-project-profiles" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-projects", function()
		local result = common.execute_aws_command_with_input({ "datazone", "list-projects" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-rules", function()
		local result = common.execute_aws_command_with_input({ "datazone", "list-rules" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-subscription-grants", function()
		local result = common.execute_aws_command_with_input({ "datazone", "list-subscription-grants" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-subscription-requests", function()
		local result = common.execute_aws_command_with_input({ "datazone", "list-subscription-requests" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-subscription-targets", function()
		local result = common.execute_aws_command_with_input({ "datazone", "list-subscription-targets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-subscriptions", function()
		local result = common.execute_aws_command_with_input({ "datazone", "list-subscriptions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "datazone", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-time-series-data-points", function()
		local result = common.execute_aws_command_with_input({ "datazone", "list-time-series-data-points" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for post-lineage-event", function()
		local result = common.execute_aws_command_with_input({ "datazone", "post-lineage-event" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for post-time-series-data-points", function()
		local result = common.execute_aws_command_with_input({ "datazone", "post-time-series-data-points" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-environment-blueprint-configuration", function()
		local result = common.execute_aws_command_with_input({ "datazone", "put-environment-blueprint-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for reject-predictions", function()
		local result = common.execute_aws_command_with_input({ "datazone", "reject-predictions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for reject-subscription-request", function()
		local result = common.execute_aws_command_with_input({ "datazone", "reject-subscription-request" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for remove-entity-owner", function()
		local result = common.execute_aws_command_with_input({ "datazone", "remove-entity-owner" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for remove-policy-grant", function()
		local result = common.execute_aws_command_with_input({ "datazone", "remove-policy-grant" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for revoke-subscription", function()
		local result = common.execute_aws_command_with_input({ "datazone", "revoke-subscription" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for search", function()
		local result = common.execute_aws_command_with_input({ "datazone", "search" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for search-group-profiles", function()
		local result = common.execute_aws_command_with_input({ "datazone", "search-group-profiles" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for search-listings", function()
		local result = common.execute_aws_command_with_input({ "datazone", "search-listings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for search-types", function()
		local result = common.execute_aws_command_with_input({ "datazone", "search-types" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for search-user-profiles", function()
		local result = common.execute_aws_command_with_input({ "datazone", "search-user-profiles" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-data-source-run", function()
		local result = common.execute_aws_command_with_input({ "datazone", "start-data-source-run" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-metadata-generation-run", function()
		local result = common.execute_aws_command_with_input({ "datazone", "start-metadata-generation-run" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "datazone", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "datazone", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-asset-filter", function()
		local result = common.execute_aws_command_with_input({ "datazone", "update-asset-filter" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-connection", function()
		local result = common.execute_aws_command_with_input({ "datazone", "update-connection" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-data-source", function()
		local result = common.execute_aws_command_with_input({ "datazone", "update-data-source" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-domain", function()
		local result = common.execute_aws_command_with_input({ "datazone", "update-domain" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-domain-unit", function()
		local result = common.execute_aws_command_with_input({ "datazone", "update-domain-unit" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-environment", function()
		local result = common.execute_aws_command_with_input({ "datazone", "update-environment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-environment-action", function()
		local result = common.execute_aws_command_with_input({ "datazone", "update-environment-action" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-environment-profile", function()
		local result = common.execute_aws_command_with_input({ "datazone", "update-environment-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-glossary", function()
		local result = common.execute_aws_command_with_input({ "datazone", "update-glossary" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-glossary-term", function()
		local result = common.execute_aws_command_with_input({ "datazone", "update-glossary-term" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-group-profile", function()
		local result = common.execute_aws_command_with_input({ "datazone", "update-group-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-project", function()
		local result = common.execute_aws_command_with_input({ "datazone", "update-project" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-project-profile", function()
		local result = common.execute_aws_command_with_input({ "datazone", "update-project-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-rule", function()
		local result = common.execute_aws_command_with_input({ "datazone", "update-rule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-subscription-grant-status", function()
		local result = common.execute_aws_command_with_input({ "datazone", "update-subscription-grant-status" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-subscription-request", function()
		local result = common.execute_aws_command_with_input({ "datazone", "update-subscription-request" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-subscription-target", function()
		local result = common.execute_aws_command_with_input({ "datazone", "update-subscription-target" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-user-profile", function()
		local result = common.execute_aws_command_with_input({ "datazone", "update-user-profile" })
		assert.is_true(result.success)
	end)

end)