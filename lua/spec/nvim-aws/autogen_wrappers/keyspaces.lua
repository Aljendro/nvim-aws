-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: keyspaces

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS keyspaces service testing", function()
	it("should generate a cli skeleton for create-keyspace", function()
		local result = common.execute_aws_command_with_input({ "keyspaces", "create-keyspace" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-table", function()
		local result = common.execute_aws_command_with_input({ "keyspaces", "create-table" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-type", function()
		local result = common.execute_aws_command_with_input({ "keyspaces", "create-type" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-keyspace", function()
		local result = common.execute_aws_command_with_input({ "keyspaces", "delete-keyspace" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-table", function()
		local result = common.execute_aws_command_with_input({ "keyspaces", "delete-table" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-type", function()
		local result = common.execute_aws_command_with_input({ "keyspaces", "delete-type" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-keyspace", function()
		local result = common.execute_aws_command_with_input({ "keyspaces", "get-keyspace" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-table", function()
		local result = common.execute_aws_command_with_input({ "keyspaces", "get-table" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-table-auto-scaling-settings", function()
		local result = common.execute_aws_command_with_input({ "keyspaces", "get-table-auto-scaling-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-type", function()
		local result = common.execute_aws_command_with_input({ "keyspaces", "get-type" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-keyspaces", function()
		local result = common.execute_aws_command_with_input({ "keyspaces", "list-keyspaces" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tables", function()
		local result = common.execute_aws_command_with_input({ "keyspaces", "list-tables" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "keyspaces", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-types", function()
		local result = common.execute_aws_command_with_input({ "keyspaces", "list-types" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for restore-table", function()
		local result = common.execute_aws_command_with_input({ "keyspaces", "restore-table" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "keyspaces", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "keyspaces", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-keyspace", function()
		local result = common.execute_aws_command_with_input({ "keyspaces", "update-keyspace" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-table", function()
		local result = common.execute_aws_command_with_input({ "keyspaces", "update-table" })
		assert.is_true(result.success)
	end)

end)