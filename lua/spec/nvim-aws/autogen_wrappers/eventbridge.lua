-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: eventbridge

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS eventbridge service testing", function()
	it("should generate a cli skeleton for activate-event-source", function()
		local result = common.execute_aws_command_with_input({ "eventbridge", "activate-event-source" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for cancel-replay", function()
		local result = common.execute_aws_command_with_input({ "eventbridge", "cancel-replay" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-api-destination", function()
		local result = common.execute_aws_command_with_input({ "eventbridge", "create-api-destination" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-archive", function()
		local result = common.execute_aws_command_with_input({ "eventbridge", "create-archive" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-connection", function()
		local result = common.execute_aws_command_with_input({ "eventbridge", "create-connection" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-endpoint", function()
		local result = common.execute_aws_command_with_input({ "eventbridge", "create-endpoint" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-event-bus", function()
		local result = common.execute_aws_command_with_input({ "eventbridge", "create-event-bus" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-partner-event-source", function()
		local result = common.execute_aws_command_with_input({ "eventbridge", "create-partner-event-source" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for deactivate-event-source", function()
		local result = common.execute_aws_command_with_input({ "eventbridge", "deactivate-event-source" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for deauthorize-connection", function()
		local result = common.execute_aws_command_with_input({ "eventbridge", "deauthorize-connection" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-api-destination", function()
		local result = common.execute_aws_command_with_input({ "eventbridge", "delete-api-destination" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-archive", function()
		local result = common.execute_aws_command_with_input({ "eventbridge", "delete-archive" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-connection", function()
		local result = common.execute_aws_command_with_input({ "eventbridge", "delete-connection" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-endpoint", function()
		local result = common.execute_aws_command_with_input({ "eventbridge", "delete-endpoint" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-event-bus", function()
		local result = common.execute_aws_command_with_input({ "eventbridge", "delete-event-bus" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-partner-event-source", function()
		local result = common.execute_aws_command_with_input({ "eventbridge", "delete-partner-event-source" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-rule", function()
		local result = common.execute_aws_command_with_input({ "eventbridge", "delete-rule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-api-destination", function()
		local result = common.execute_aws_command_with_input({ "eventbridge", "describe-api-destination" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-archive", function()
		local result = common.execute_aws_command_with_input({ "eventbridge", "describe-archive" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-connection", function()
		local result = common.execute_aws_command_with_input({ "eventbridge", "describe-connection" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-endpoint", function()
		local result = common.execute_aws_command_with_input({ "eventbridge", "describe-endpoint" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-event-bus", function()
		local result = common.execute_aws_command_with_input({ "eventbridge", "describe-event-bus" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-event-source", function()
		local result = common.execute_aws_command_with_input({ "eventbridge", "describe-event-source" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-partner-event-source", function()
		local result = common.execute_aws_command_with_input({ "eventbridge", "describe-partner-event-source" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-replay", function()
		local result = common.execute_aws_command_with_input({ "eventbridge", "describe-replay" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-rule", function()
		local result = common.execute_aws_command_with_input({ "eventbridge", "describe-rule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disable-rule", function()
		local result = common.execute_aws_command_with_input({ "eventbridge", "disable-rule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for enable-rule", function()
		local result = common.execute_aws_command_with_input({ "eventbridge", "enable-rule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-api-destinations", function()
		local result = common.execute_aws_command_with_input({ "eventbridge", "list-api-destinations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-archives", function()
		local result = common.execute_aws_command_with_input({ "eventbridge", "list-archives" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-connections", function()
		local result = common.execute_aws_command_with_input({ "eventbridge", "list-connections" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-endpoints", function()
		local result = common.execute_aws_command_with_input({ "eventbridge", "list-endpoints" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-event-buses", function()
		local result = common.execute_aws_command_with_input({ "eventbridge", "list-event-buses" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-event-sources", function()
		local result = common.execute_aws_command_with_input({ "eventbridge", "list-event-sources" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-partner-event-source-accounts", function()
		local result = common.execute_aws_command_with_input({ "eventbridge", "list-partner-event-source-accounts" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-partner-event-sources", function()
		local result = common.execute_aws_command_with_input({ "eventbridge", "list-partner-event-sources" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-replays", function()
		local result = common.execute_aws_command_with_input({ "eventbridge", "list-replays" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-rule-names-by-target", function()
		local result = common.execute_aws_command_with_input({ "eventbridge", "list-rule-names-by-target" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-rules", function()
		local result = common.execute_aws_command_with_input({ "eventbridge", "list-rules" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "eventbridge", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-targets-by-rule", function()
		local result = common.execute_aws_command_with_input({ "eventbridge", "list-targets-by-rule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-events", function()
		local result = common.execute_aws_command_with_input({ "eventbridge", "put-events" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-partner-events", function()
		local result = common.execute_aws_command_with_input({ "eventbridge", "put-partner-events" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-permission", function()
		local result = common.execute_aws_command_with_input({ "eventbridge", "put-permission" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-rule", function()
		local result = common.execute_aws_command_with_input({ "eventbridge", "put-rule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-targets", function()
		local result = common.execute_aws_command_with_input({ "eventbridge", "put-targets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for remove-permission", function()
		local result = common.execute_aws_command_with_input({ "eventbridge", "remove-permission" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for remove-targets", function()
		local result = common.execute_aws_command_with_input({ "eventbridge", "remove-targets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-replay", function()
		local result = common.execute_aws_command_with_input({ "eventbridge", "start-replay" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "eventbridge", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for test-event-pattern", function()
		local result = common.execute_aws_command_with_input({ "eventbridge", "test-event-pattern" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "eventbridge", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-api-destination", function()
		local result = common.execute_aws_command_with_input({ "eventbridge", "update-api-destination" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-archive", function()
		local result = common.execute_aws_command_with_input({ "eventbridge", "update-archive" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-connection", function()
		local result = common.execute_aws_command_with_input({ "eventbridge", "update-connection" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-endpoint", function()
		local result = common.execute_aws_command_with_input({ "eventbridge", "update-endpoint" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-event-bus", function()
		local result = common.execute_aws_command_with_input({ "eventbridge", "update-event-bus" })
		assert.is_true(result.success)
	end)

end)