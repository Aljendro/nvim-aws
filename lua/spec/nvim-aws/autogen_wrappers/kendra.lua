-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: kendra

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS kendra service testing", function()
	it("should generate a cli skeleton for associate-entities-to-experience", function()
		local result = common.execute_aws_command_with_input({ "kendra", "associate-entities-to-experience" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for associate-personas-to-entities", function()
		local result = common.execute_aws_command_with_input({ "kendra", "associate-personas-to-entities" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-delete-document", function()
		local result = common.execute_aws_command_with_input({ "kendra", "batch-delete-document" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-delete-featured-results-set", function()
		local result = common.execute_aws_command_with_input({ "kendra", "batch-delete-featured-results-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-get-document-status", function()
		local result = common.execute_aws_command_with_input({ "kendra", "batch-get-document-status" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-put-document", function()
		local result = common.execute_aws_command_with_input({ "kendra", "batch-put-document" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for clear-query-suggestions", function()
		local result = common.execute_aws_command_with_input({ "kendra", "clear-query-suggestions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-access-control-configuration", function()
		local result = common.execute_aws_command_with_input({ "kendra", "create-access-control-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-data-source", function()
		local result = common.execute_aws_command_with_input({ "kendra", "create-data-source" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-experience", function()
		local result = common.execute_aws_command_with_input({ "kendra", "create-experience" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-faq", function()
		local result = common.execute_aws_command_with_input({ "kendra", "create-faq" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-featured-results-set", function()
		local result = common.execute_aws_command_with_input({ "kendra", "create-featured-results-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-index", function()
		local result = common.execute_aws_command_with_input({ "kendra", "create-index" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-query-suggestions-block-list", function()
		local result = common.execute_aws_command_with_input({ "kendra", "create-query-suggestions-block-list" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-thesaurus", function()
		local result = common.execute_aws_command_with_input({ "kendra", "create-thesaurus" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-access-control-configuration", function()
		local result = common.execute_aws_command_with_input({ "kendra", "delete-access-control-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-data-source", function()
		local result = common.execute_aws_command_with_input({ "kendra", "delete-data-source" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-experience", function()
		local result = common.execute_aws_command_with_input({ "kendra", "delete-experience" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-faq", function()
		local result = common.execute_aws_command_with_input({ "kendra", "delete-faq" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-index", function()
		local result = common.execute_aws_command_with_input({ "kendra", "delete-index" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-principal-mapping", function()
		local result = common.execute_aws_command_with_input({ "kendra", "delete-principal-mapping" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-query-suggestions-block-list", function()
		local result = common.execute_aws_command_with_input({ "kendra", "delete-query-suggestions-block-list" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-thesaurus", function()
		local result = common.execute_aws_command_with_input({ "kendra", "delete-thesaurus" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-access-control-configuration", function()
		local result = common.execute_aws_command_with_input({ "kendra", "describe-access-control-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-data-source", function()
		local result = common.execute_aws_command_with_input({ "kendra", "describe-data-source" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-experience", function()
		local result = common.execute_aws_command_with_input({ "kendra", "describe-experience" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-faq", function()
		local result = common.execute_aws_command_with_input({ "kendra", "describe-faq" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-featured-results-set", function()
		local result = common.execute_aws_command_with_input({ "kendra", "describe-featured-results-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-index", function()
		local result = common.execute_aws_command_with_input({ "kendra", "describe-index" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-principal-mapping", function()
		local result = common.execute_aws_command_with_input({ "kendra", "describe-principal-mapping" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-query-suggestions-block-list", function()
		local result = common.execute_aws_command_with_input({ "kendra", "describe-query-suggestions-block-list" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-query-suggestions-config", function()
		local result = common.execute_aws_command_with_input({ "kendra", "describe-query-suggestions-config" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-thesaurus", function()
		local result = common.execute_aws_command_with_input({ "kendra", "describe-thesaurus" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-entities-from-experience", function()
		local result = common.execute_aws_command_with_input({ "kendra", "disassociate-entities-from-experience" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-personas-from-entities", function()
		local result = common.execute_aws_command_with_input({ "kendra", "disassociate-personas-from-entities" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-query-suggestions", function()
		local result = common.execute_aws_command_with_input({ "kendra", "get-query-suggestions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-snapshots", function()
		local result = common.execute_aws_command_with_input({ "kendra", "get-snapshots" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-access-control-configurations", function()
		local result = common.execute_aws_command_with_input({ "kendra", "list-access-control-configurations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-data-source-sync-jobs", function()
		local result = common.execute_aws_command_with_input({ "kendra", "list-data-source-sync-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-data-sources", function()
		local result = common.execute_aws_command_with_input({ "kendra", "list-data-sources" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-entity-personas", function()
		local result = common.execute_aws_command_with_input({ "kendra", "list-entity-personas" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-experience-entities", function()
		local result = common.execute_aws_command_with_input({ "kendra", "list-experience-entities" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-experiences", function()
		local result = common.execute_aws_command_with_input({ "kendra", "list-experiences" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-faqs", function()
		local result = common.execute_aws_command_with_input({ "kendra", "list-faqs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-featured-results-sets", function()
		local result = common.execute_aws_command_with_input({ "kendra", "list-featured-results-sets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-groups-older-than-ordering-id", function()
		local result = common.execute_aws_command_with_input({ "kendra", "list-groups-older-than-ordering-id" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-indices", function()
		local result = common.execute_aws_command_with_input({ "kendra", "list-indices" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-query-suggestions-block-lists", function()
		local result = common.execute_aws_command_with_input({ "kendra", "list-query-suggestions-block-lists" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "kendra", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-thesauri", function()
		local result = common.execute_aws_command_with_input({ "kendra", "list-thesauri" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-principal-mapping", function()
		local result = common.execute_aws_command_with_input({ "kendra", "put-principal-mapping" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for query", function()
		local result = common.execute_aws_command_with_input({ "kendra", "query" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for retrieve", function()
		local result = common.execute_aws_command_with_input({ "kendra", "retrieve" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-data-source-sync-job", function()
		local result = common.execute_aws_command_with_input({ "kendra", "start-data-source-sync-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-data-source-sync-job", function()
		local result = common.execute_aws_command_with_input({ "kendra", "stop-data-source-sync-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for submit-feedback", function()
		local result = common.execute_aws_command_with_input({ "kendra", "submit-feedback" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "kendra", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "kendra", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-access-control-configuration", function()
		local result = common.execute_aws_command_with_input({ "kendra", "update-access-control-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-data-source", function()
		local result = common.execute_aws_command_with_input({ "kendra", "update-data-source" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-experience", function()
		local result = common.execute_aws_command_with_input({ "kendra", "update-experience" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-featured-results-set", function()
		local result = common.execute_aws_command_with_input({ "kendra", "update-featured-results-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-index", function()
		local result = common.execute_aws_command_with_input({ "kendra", "update-index" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-query-suggestions-block-list", function()
		local result = common.execute_aws_command_with_input({ "kendra", "update-query-suggestions-block-list" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-query-suggestions-config", function()
		local result = common.execute_aws_command_with_input({ "kendra", "update-query-suggestions-config" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-thesaurus", function()
		local result = common.execute_aws_command_with_input({ "kendra", "update-thesaurus" })
		assert.is_true(result.success)
	end)

end)