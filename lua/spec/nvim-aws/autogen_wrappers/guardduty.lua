-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: guardduty

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS guardduty service testing", function()
	it("should generate a cli skeleton for accept-administrator-invitation", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "accept-administrator-invitation" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for accept-invitation", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "accept-invitation" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for archive-findings", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "archive-findings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-detector", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "create-detector" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-filter", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "create-filter" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-ip-set", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "create-ip-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-malware-protection-plan", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "create-malware-protection-plan" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-members", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "create-members" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-publishing-destination", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "create-publishing-destination" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-sample-findings", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "create-sample-findings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-threat-intel-set", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "create-threat-intel-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for decline-invitations", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "decline-invitations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-detector", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "delete-detector" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-filter", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "delete-filter" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-ip-set", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "delete-ip-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-invitations", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "delete-invitations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-malware-protection-plan", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "delete-malware-protection-plan" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-members", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "delete-members" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-publishing-destination", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "delete-publishing-destination" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-threat-intel-set", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "delete-threat-intel-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-malware-scans", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "describe-malware-scans" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-organization-configuration", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "describe-organization-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-publishing-destination", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "describe-publishing-destination" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disable-organization-admin-account", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "disable-organization-admin-account" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-from-administrator-account", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "disassociate-from-administrator-account" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-from-master-account", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "disassociate-from-master-account" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-members", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "disassociate-members" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for enable-organization-admin-account", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "enable-organization-admin-account" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-administrator-account", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "get-administrator-account" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-coverage-statistics", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "get-coverage-statistics" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-detector", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "get-detector" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-filter", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "get-filter" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-findings", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "get-findings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-findings-statistics", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "get-findings-statistics" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-ip-set", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "get-ip-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-invitations-count", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "get-invitations-count" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-malware-protection-plan", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "get-malware-protection-plan" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-malware-scan-settings", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "get-malware-scan-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-master-account", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "get-master-account" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-member-detectors", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "get-member-detectors" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-members", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "get-members" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-organization-statistics", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "get-organization-statistics" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-remaining-free-trial-days", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "get-remaining-free-trial-days" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-threat-intel-set", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "get-threat-intel-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-usage-statistics", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "get-usage-statistics" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for invite-members", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "invite-members" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-coverage", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "list-coverage" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-detectors", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "list-detectors" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-filters", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "list-filters" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-findings", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "list-findings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-ip-sets", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "list-ip-sets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-invitations", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "list-invitations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-malware-protection-plans", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "list-malware-protection-plans" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-members", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "list-members" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-organization-admin-accounts", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "list-organization-admin-accounts" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-publishing-destinations", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "list-publishing-destinations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-threat-intel-sets", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "list-threat-intel-sets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-malware-scan", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "start-malware-scan" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-monitoring-members", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "start-monitoring-members" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-monitoring-members", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "stop-monitoring-members" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for unarchive-findings", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "unarchive-findings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-detector", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "update-detector" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-filter", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "update-filter" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-findings-feedback", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "update-findings-feedback" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-ip-set", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "update-ip-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-malware-protection-plan", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "update-malware-protection-plan" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-malware-scan-settings", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "update-malware-scan-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-member-detectors", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "update-member-detectors" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-organization-configuration", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "update-organization-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-publishing-destination", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "update-publishing-destination" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-threat-intel-set", function()
		local result = common.execute_aws_command_with_input({ "guardduty", "update-threat-intel-set" })
		assert.is_true(result.success)
	end)

end)