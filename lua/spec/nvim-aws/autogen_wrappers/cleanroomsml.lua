-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: cleanroomsml

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS cleanroomsml service testing", function()
	it("should generate a cli skeleton for cancel-trained-model", function()
		local result = common.execute_aws_command_with_input({ "cleanroomsml", "cancel-trained-model" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for cancel-trained-model-inference-job", function()
		local result = common.execute_aws_command_with_input({ "cleanroomsml", "cancel-trained-model-inference-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-audience-model", function()
		local result = common.execute_aws_command_with_input({ "cleanroomsml", "create-audience-model" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-configured-audience-model", function()
		local result = common.execute_aws_command_with_input({ "cleanroomsml", "create-configured-audience-model" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-configured-model-algorithm", function()
		local result = common.execute_aws_command_with_input({ "cleanroomsml", "create-configured-model-algorithm" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-configured-model-algorithm-association", function()
		local result = common.execute_aws_command_with_input({ "cleanroomsml", "create-configured-model-algorithm-association" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-ml-input-channel", function()
		local result = common.execute_aws_command_with_input({ "cleanroomsml", "create-ml-input-channel" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-trained-model", function()
		local result = common.execute_aws_command_with_input({ "cleanroomsml", "create-trained-model" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-training-dataset", function()
		local result = common.execute_aws_command_with_input({ "cleanroomsml", "create-training-dataset" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-audience-generation-job", function()
		local result = common.execute_aws_command_with_input({ "cleanroomsml", "delete-audience-generation-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-audience-model", function()
		local result = common.execute_aws_command_with_input({ "cleanroomsml", "delete-audience-model" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-configured-audience-model", function()
		local result = common.execute_aws_command_with_input({ "cleanroomsml", "delete-configured-audience-model" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-configured-audience-model-policy", function()
		local result = common.execute_aws_command_with_input({ "cleanroomsml", "delete-configured-audience-model-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-configured-model-algorithm", function()
		local result = common.execute_aws_command_with_input({ "cleanroomsml", "delete-configured-model-algorithm" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-configured-model-algorithm-association", function()
		local result = common.execute_aws_command_with_input({ "cleanroomsml", "delete-configured-model-algorithm-association" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-ml-configuration", function()
		local result = common.execute_aws_command_with_input({ "cleanroomsml", "delete-ml-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-ml-input-channel-data", function()
		local result = common.execute_aws_command_with_input({ "cleanroomsml", "delete-ml-input-channel-data" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-trained-model-output", function()
		local result = common.execute_aws_command_with_input({ "cleanroomsml", "delete-trained-model-output" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-training-dataset", function()
		local result = common.execute_aws_command_with_input({ "cleanroomsml", "delete-training-dataset" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-audience-generation-job", function()
		local result = common.execute_aws_command_with_input({ "cleanroomsml", "get-audience-generation-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-audience-model", function()
		local result = common.execute_aws_command_with_input({ "cleanroomsml", "get-audience-model" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-collaboration-configured-model-algorithm-association", function()
		local result = common.execute_aws_command_with_input({ "cleanroomsml", "get-collaboration-configured-model-algorithm-association" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-collaboration-ml-input-channel", function()
		local result = common.execute_aws_command_with_input({ "cleanroomsml", "get-collaboration-ml-input-channel" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-collaboration-trained-model", function()
		local result = common.execute_aws_command_with_input({ "cleanroomsml", "get-collaboration-trained-model" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-configured-audience-model", function()
		local result = common.execute_aws_command_with_input({ "cleanroomsml", "get-configured-audience-model" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-configured-audience-model-policy", function()
		local result = common.execute_aws_command_with_input({ "cleanroomsml", "get-configured-audience-model-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-configured-model-algorithm", function()
		local result = common.execute_aws_command_with_input({ "cleanroomsml", "get-configured-model-algorithm" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-configured-model-algorithm-association", function()
		local result = common.execute_aws_command_with_input({ "cleanroomsml", "get-configured-model-algorithm-association" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-ml-configuration", function()
		local result = common.execute_aws_command_with_input({ "cleanroomsml", "get-ml-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-ml-input-channel", function()
		local result = common.execute_aws_command_with_input({ "cleanroomsml", "get-ml-input-channel" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-trained-model", function()
		local result = common.execute_aws_command_with_input({ "cleanroomsml", "get-trained-model" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-trained-model-inference-job", function()
		local result = common.execute_aws_command_with_input({ "cleanroomsml", "get-trained-model-inference-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-training-dataset", function()
		local result = common.execute_aws_command_with_input({ "cleanroomsml", "get-training-dataset" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-audience-export-jobs", function()
		local result = common.execute_aws_command_with_input({ "cleanroomsml", "list-audience-export-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-audience-generation-jobs", function()
		local result = common.execute_aws_command_with_input({ "cleanroomsml", "list-audience-generation-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-audience-models", function()
		local result = common.execute_aws_command_with_input({ "cleanroomsml", "list-audience-models" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-collaboration-configured-model-algorithm-associations", function()
		local result = common.execute_aws_command_with_input({ "cleanroomsml", "list-collaboration-configured-model-algorithm-associations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-collaboration-ml-input-channels", function()
		local result = common.execute_aws_command_with_input({ "cleanroomsml", "list-collaboration-ml-input-channels" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-collaboration-trained-model-export-jobs", function()
		local result = common.execute_aws_command_with_input({ "cleanroomsml", "list-collaboration-trained-model-export-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-collaboration-trained-model-inference-jobs", function()
		local result = common.execute_aws_command_with_input({ "cleanroomsml", "list-collaboration-trained-model-inference-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-collaboration-trained-models", function()
		local result = common.execute_aws_command_with_input({ "cleanroomsml", "list-collaboration-trained-models" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-configured-audience-models", function()
		local result = common.execute_aws_command_with_input({ "cleanroomsml", "list-configured-audience-models" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-configured-model-algorithm-associations", function()
		local result = common.execute_aws_command_with_input({ "cleanroomsml", "list-configured-model-algorithm-associations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-configured-model-algorithms", function()
		local result = common.execute_aws_command_with_input({ "cleanroomsml", "list-configured-model-algorithms" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-ml-input-channels", function()
		local result = common.execute_aws_command_with_input({ "cleanroomsml", "list-ml-input-channels" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "cleanroomsml", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-trained-model-inference-jobs", function()
		local result = common.execute_aws_command_with_input({ "cleanroomsml", "list-trained-model-inference-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-trained-models", function()
		local result = common.execute_aws_command_with_input({ "cleanroomsml", "list-trained-models" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-training-datasets", function()
		local result = common.execute_aws_command_with_input({ "cleanroomsml", "list-training-datasets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-configured-audience-model-policy", function()
		local result = common.execute_aws_command_with_input({ "cleanroomsml", "put-configured-audience-model-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-ml-configuration", function()
		local result = common.execute_aws_command_with_input({ "cleanroomsml", "put-ml-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-audience-export-job", function()
		local result = common.execute_aws_command_with_input({ "cleanroomsml", "start-audience-export-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-audience-generation-job", function()
		local result = common.execute_aws_command_with_input({ "cleanroomsml", "start-audience-generation-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-trained-model-export-job", function()
		local result = common.execute_aws_command_with_input({ "cleanroomsml", "start-trained-model-export-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-trained-model-inference-job", function()
		local result = common.execute_aws_command_with_input({ "cleanroomsml", "start-trained-model-inference-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "cleanroomsml", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "cleanroomsml", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-configured-audience-model", function()
		local result = common.execute_aws_command_with_input({ "cleanroomsml", "update-configured-audience-model" })
		assert.is_true(result.success)
	end)

end)