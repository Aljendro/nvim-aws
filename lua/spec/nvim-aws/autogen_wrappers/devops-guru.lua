-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: devops-guru

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS devops-guru service testing", function()
	it("should generate a cli skeleton for add-notification-channel", function()
		local result = common.execute_aws_command_with_input({ "devops-guru", "add-notification-channel" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-insight", function()
		local result = common.execute_aws_command_with_input({ "devops-guru", "delete-insight" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-account-health", function()
		local result = common.execute_aws_command_with_input({ "devops-guru", "describe-account-health" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-account-overview", function()
		local result = common.execute_aws_command_with_input({ "devops-guru", "describe-account-overview" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-anomaly", function()
		local result = common.execute_aws_command_with_input({ "devops-guru", "describe-anomaly" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-event-sources-config", function()
		local result = common.execute_aws_command_with_input({ "devops-guru", "describe-event-sources-config" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-feedback", function()
		local result = common.execute_aws_command_with_input({ "devops-guru", "describe-feedback" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-insight", function()
		local result = common.execute_aws_command_with_input({ "devops-guru", "describe-insight" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-organization-health", function()
		local result = common.execute_aws_command_with_input({ "devops-guru", "describe-organization-health" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-organization-overview", function()
		local result = common.execute_aws_command_with_input({ "devops-guru", "describe-organization-overview" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-organization-resource-collection-health", function()
		local result = common.execute_aws_command_with_input({ "devops-guru", "describe-organization-resource-collection-health" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-resource-collection-health", function()
		local result = common.execute_aws_command_with_input({ "devops-guru", "describe-resource-collection-health" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-service-integration", function()
		local result = common.execute_aws_command_with_input({ "devops-guru", "describe-service-integration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-cost-estimation", function()
		local result = common.execute_aws_command_with_input({ "devops-guru", "get-cost-estimation" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-resource-collection", function()
		local result = common.execute_aws_command_with_input({ "devops-guru", "get-resource-collection" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-anomalies-for-insight", function()
		local result = common.execute_aws_command_with_input({ "devops-guru", "list-anomalies-for-insight" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-anomalous-log-groups", function()
		local result = common.execute_aws_command_with_input({ "devops-guru", "list-anomalous-log-groups" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-events", function()
		local result = common.execute_aws_command_with_input({ "devops-guru", "list-events" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-insights", function()
		local result = common.execute_aws_command_with_input({ "devops-guru", "list-insights" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-monitored-resources", function()
		local result = common.execute_aws_command_with_input({ "devops-guru", "list-monitored-resources" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-notification-channels", function()
		local result = common.execute_aws_command_with_input({ "devops-guru", "list-notification-channels" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-organization-insights", function()
		local result = common.execute_aws_command_with_input({ "devops-guru", "list-organization-insights" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-recommendations", function()
		local result = common.execute_aws_command_with_input({ "devops-guru", "list-recommendations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-feedback", function()
		local result = common.execute_aws_command_with_input({ "devops-guru", "put-feedback" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for remove-notification-channel", function()
		local result = common.execute_aws_command_with_input({ "devops-guru", "remove-notification-channel" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for search-insights", function()
		local result = common.execute_aws_command_with_input({ "devops-guru", "search-insights" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for search-organization-insights", function()
		local result = common.execute_aws_command_with_input({ "devops-guru", "search-organization-insights" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-cost-estimation", function()
		local result = common.execute_aws_command_with_input({ "devops-guru", "start-cost-estimation" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-event-sources-config", function()
		local result = common.execute_aws_command_with_input({ "devops-guru", "update-event-sources-config" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-resource-collection", function()
		local result = common.execute_aws_command_with_input({ "devops-guru", "update-resource-collection" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-service-integration", function()
		local result = common.execute_aws_command_with_input({ "devops-guru", "update-service-integration" })
		assert.is_true(result.success)
	end)

end)