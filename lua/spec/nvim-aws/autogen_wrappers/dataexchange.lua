-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: dataexchange

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS dataexchange service testing", function()
	it("should generate a cli skeleton for accept-data-grant", function()
		local result = common.execute_aws_command_with_input({ "dataexchange", "accept-data-grant" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for cancel-job", function()
		local result = common.execute_aws_command_with_input({ "dataexchange", "cancel-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-data-grant", function()
		local result = common.execute_aws_command_with_input({ "dataexchange", "create-data-grant" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-data-set", function()
		local result = common.execute_aws_command_with_input({ "dataexchange", "create-data-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-event-action", function()
		local result = common.execute_aws_command_with_input({ "dataexchange", "create-event-action" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-job", function()
		local result = common.execute_aws_command_with_input({ "dataexchange", "create-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-revision", function()
		local result = common.execute_aws_command_with_input({ "dataexchange", "create-revision" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-asset", function()
		local result = common.execute_aws_command_with_input({ "dataexchange", "delete-asset" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-data-grant", function()
		local result = common.execute_aws_command_with_input({ "dataexchange", "delete-data-grant" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-data-set", function()
		local result = common.execute_aws_command_with_input({ "dataexchange", "delete-data-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-event-action", function()
		local result = common.execute_aws_command_with_input({ "dataexchange", "delete-event-action" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-revision", function()
		local result = common.execute_aws_command_with_input({ "dataexchange", "delete-revision" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-asset", function()
		local result = common.execute_aws_command_with_input({ "dataexchange", "get-asset" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-data-grant", function()
		local result = common.execute_aws_command_with_input({ "dataexchange", "get-data-grant" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-data-set", function()
		local result = common.execute_aws_command_with_input({ "dataexchange", "get-data-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-event-action", function()
		local result = common.execute_aws_command_with_input({ "dataexchange", "get-event-action" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-job", function()
		local result = common.execute_aws_command_with_input({ "dataexchange", "get-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-received-data-grant", function()
		local result = common.execute_aws_command_with_input({ "dataexchange", "get-received-data-grant" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-revision", function()
		local result = common.execute_aws_command_with_input({ "dataexchange", "get-revision" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-data-grants", function()
		local result = common.execute_aws_command_with_input({ "dataexchange", "list-data-grants" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-data-set-revisions", function()
		local result = common.execute_aws_command_with_input({ "dataexchange", "list-data-set-revisions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-data-sets", function()
		local result = common.execute_aws_command_with_input({ "dataexchange", "list-data-sets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-event-actions", function()
		local result = common.execute_aws_command_with_input({ "dataexchange", "list-event-actions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-jobs", function()
		local result = common.execute_aws_command_with_input({ "dataexchange", "list-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-received-data-grants", function()
		local result = common.execute_aws_command_with_input({ "dataexchange", "list-received-data-grants" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-revision-assets", function()
		local result = common.execute_aws_command_with_input({ "dataexchange", "list-revision-assets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "dataexchange", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for revoke-revision", function()
		local result = common.execute_aws_command_with_input({ "dataexchange", "revoke-revision" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for send-api-asset", function()
		local result = common.execute_aws_command_with_input({ "dataexchange", "send-api-asset" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for send-data-set-notification", function()
		local result = common.execute_aws_command_with_input({ "dataexchange", "send-data-set-notification" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-job", function()
		local result = common.execute_aws_command_with_input({ "dataexchange", "start-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "dataexchange", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "dataexchange", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-asset", function()
		local result = common.execute_aws_command_with_input({ "dataexchange", "update-asset" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-data-set", function()
		local result = common.execute_aws_command_with_input({ "dataexchange", "update-data-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-event-action", function()
		local result = common.execute_aws_command_with_input({ "dataexchange", "update-event-action" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-revision", function()
		local result = common.execute_aws_command_with_input({ "dataexchange", "update-revision" })
		assert.is_true(result.success)
	end)

end)