-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: invoicing

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS invoicing service testing", function()
	it("should generate a cli skeleton for batch-get-invoice-profile", function()
		local result = common.execute_aws_command_with_input({ "invoicing", "batch-get-invoice-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-invoice-unit", function()
		local result = common.execute_aws_command_with_input({ "invoicing", "create-invoice-unit" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-invoice-unit", function()
		local result = common.execute_aws_command_with_input({ "invoicing", "delete-invoice-unit" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-invoice-unit", function()
		local result = common.execute_aws_command_with_input({ "invoicing", "get-invoice-unit" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-invoice-units", function()
		local result = common.execute_aws_command_with_input({ "invoicing", "list-invoice-units" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "invoicing", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "invoicing", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "invoicing", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-invoice-unit", function()
		local result = common.execute_aws_command_with_input({ "invoicing", "update-invoice-unit" })
		assert.is_true(result.success)
	end)

end)