-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: budgets

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS budgets service testing", function()
	it("should generate a cli skeleton for create-budget", function()
		local result = common.execute_aws_command_with_input({ "budgets", "create-budget" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-budget-action", function()
		local result = common.execute_aws_command_with_input({ "budgets", "create-budget-action" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-notification", function()
		local result = common.execute_aws_command_with_input({ "budgets", "create-notification" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-subscriber", function()
		local result = common.execute_aws_command_with_input({ "budgets", "create-subscriber" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-budget", function()
		local result = common.execute_aws_command_with_input({ "budgets", "delete-budget" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-budget-action", function()
		local result = common.execute_aws_command_with_input({ "budgets", "delete-budget-action" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-notification", function()
		local result = common.execute_aws_command_with_input({ "budgets", "delete-notification" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-subscriber", function()
		local result = common.execute_aws_command_with_input({ "budgets", "delete-subscriber" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-budget", function()
		local result = common.execute_aws_command_with_input({ "budgets", "describe-budget" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-budget-action", function()
		local result = common.execute_aws_command_with_input({ "budgets", "describe-budget-action" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-budget-action-histories", function()
		local result = common.execute_aws_command_with_input({ "budgets", "describe-budget-action-histories" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-budget-actions-for-account", function()
		local result = common.execute_aws_command_with_input({ "budgets", "describe-budget-actions-for-account" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-budget-actions-for-budget", function()
		local result = common.execute_aws_command_with_input({ "budgets", "describe-budget-actions-for-budget" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-budget-notifications-for-account", function()
		local result = common.execute_aws_command_with_input({ "budgets", "describe-budget-notifications-for-account" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-budget-performance-history", function()
		local result = common.execute_aws_command_with_input({ "budgets", "describe-budget-performance-history" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-budgets", function()
		local result = common.execute_aws_command_with_input({ "budgets", "describe-budgets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-notifications-for-budget", function()
		local result = common.execute_aws_command_with_input({ "budgets", "describe-notifications-for-budget" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-subscribers-for-notification", function()
		local result = common.execute_aws_command_with_input({ "budgets", "describe-subscribers-for-notification" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for execute-budget-action", function()
		local result = common.execute_aws_command_with_input({ "budgets", "execute-budget-action" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "budgets", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "budgets", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "budgets", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-budget", function()
		local result = common.execute_aws_command_with_input({ "budgets", "update-budget" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-budget-action", function()
		local result = common.execute_aws_command_with_input({ "budgets", "update-budget-action" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-notification", function()
		local result = common.execute_aws_command_with_input({ "budgets", "update-notification" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-subscriber", function()
		local result = common.execute_aws_command_with_input({ "budgets", "update-subscriber" })
		assert.is_true(result.success)
	end)

end)