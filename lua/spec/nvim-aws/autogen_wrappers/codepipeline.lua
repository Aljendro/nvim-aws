-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: codepipeline

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS codepipeline service testing", function()
	it("should generate a cli skeleton for acknowledge-job", function()
		local result = common.execute_aws_command_with_input({ "codepipeline", "acknowledge-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for acknowledge-third-party-job", function()
		local result = common.execute_aws_command_with_input({ "codepipeline", "acknowledge-third-party-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-custom-action-type", function()
		local result = common.execute_aws_command_with_input({ "codepipeline", "create-custom-action-type" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-pipeline", function()
		local result = common.execute_aws_command_with_input({ "codepipeline", "create-pipeline" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-custom-action-type", function()
		local result = common.execute_aws_command_with_input({ "codepipeline", "delete-custom-action-type" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-pipeline", function()
		local result = common.execute_aws_command_with_input({ "codepipeline", "delete-pipeline" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-webhook", function()
		local result = common.execute_aws_command_with_input({ "codepipeline", "delete-webhook" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for deregister-webhook-with-third-party", function()
		local result = common.execute_aws_command_with_input({ "codepipeline", "deregister-webhook-with-third-party" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disable-stage-transition", function()
		local result = common.execute_aws_command_with_input({ "codepipeline", "disable-stage-transition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for enable-stage-transition", function()
		local result = common.execute_aws_command_with_input({ "codepipeline", "enable-stage-transition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-action-type", function()
		local result = common.execute_aws_command_with_input({ "codepipeline", "get-action-type" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-job-details", function()
		local result = common.execute_aws_command_with_input({ "codepipeline", "get-job-details" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-pipeline", function()
		local result = common.execute_aws_command_with_input({ "codepipeline", "get-pipeline" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-pipeline-execution", function()
		local result = common.execute_aws_command_with_input({ "codepipeline", "get-pipeline-execution" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-pipeline-state", function()
		local result = common.execute_aws_command_with_input({ "codepipeline", "get-pipeline-state" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-third-party-job-details", function()
		local result = common.execute_aws_command_with_input({ "codepipeline", "get-third-party-job-details" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-action-executions", function()
		local result = common.execute_aws_command_with_input({ "codepipeline", "list-action-executions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-action-types", function()
		local result = common.execute_aws_command_with_input({ "codepipeline", "list-action-types" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-pipeline-executions", function()
		local result = common.execute_aws_command_with_input({ "codepipeline", "list-pipeline-executions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-pipelines", function()
		local result = common.execute_aws_command_with_input({ "codepipeline", "list-pipelines" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-rule-executions", function()
		local result = common.execute_aws_command_with_input({ "codepipeline", "list-rule-executions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-rule-types", function()
		local result = common.execute_aws_command_with_input({ "codepipeline", "list-rule-types" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "codepipeline", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-webhooks", function()
		local result = common.execute_aws_command_with_input({ "codepipeline", "list-webhooks" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for override-stage-condition", function()
		local result = common.execute_aws_command_with_input({ "codepipeline", "override-stage-condition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for poll-for-jobs", function()
		local result = common.execute_aws_command_with_input({ "codepipeline", "poll-for-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for poll-for-third-party-jobs", function()
		local result = common.execute_aws_command_with_input({ "codepipeline", "poll-for-third-party-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-action-revision", function()
		local result = common.execute_aws_command_with_input({ "codepipeline", "put-action-revision" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-approval-result", function()
		local result = common.execute_aws_command_with_input({ "codepipeline", "put-approval-result" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-job-failure-result", function()
		local result = common.execute_aws_command_with_input({ "codepipeline", "put-job-failure-result" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-job-success-result", function()
		local result = common.execute_aws_command_with_input({ "codepipeline", "put-job-success-result" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-third-party-job-failure-result", function()
		local result = common.execute_aws_command_with_input({ "codepipeline", "put-third-party-job-failure-result" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-third-party-job-success-result", function()
		local result = common.execute_aws_command_with_input({ "codepipeline", "put-third-party-job-success-result" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-webhook", function()
		local result = common.execute_aws_command_with_input({ "codepipeline", "put-webhook" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for register-webhook-with-third-party", function()
		local result = common.execute_aws_command_with_input({ "codepipeline", "register-webhook-with-third-party" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for retry-stage-execution", function()
		local result = common.execute_aws_command_with_input({ "codepipeline", "retry-stage-execution" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for rollback-stage", function()
		local result = common.execute_aws_command_with_input({ "codepipeline", "rollback-stage" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-pipeline-execution", function()
		local result = common.execute_aws_command_with_input({ "codepipeline", "start-pipeline-execution" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-pipeline-execution", function()
		local result = common.execute_aws_command_with_input({ "codepipeline", "stop-pipeline-execution" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "codepipeline", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "codepipeline", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-action-type", function()
		local result = common.execute_aws_command_with_input({ "codepipeline", "update-action-type" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-pipeline", function()
		local result = common.execute_aws_command_with_input({ "codepipeline", "update-pipeline" })
		assert.is_true(result.success)
	end)

end)