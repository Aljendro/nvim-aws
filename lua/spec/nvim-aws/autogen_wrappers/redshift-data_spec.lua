-- AUTOGENERATED FILE - DO NOT EDIT
-- AWS Service: redshift-data

require("nvim-aws").setup()
local service = require("nvim-aws.autogen_wrappers.redshift-data")

describe("AWS redshift-data service testing", function()
	it("should generate a cli skeleton with batch_execute_statement", function()
		local result = service.batch_execute_statement()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with cancel_statement", function()
		local result = service.cancel_statement()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with describe_statement", function()
		local result = service.describe_statement()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with describe_table", function()
		local result = service.describe_table()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with execute_statement", function()
		local result = service.execute_statement()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_statement_result", function()
		local result = service.get_statement_result()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with get_statement_result_v2", function()
		local result = service.get_statement_result_v2()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_databases", function()
		local result = service.list_databases()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_schemas", function()
		local result = service.list_schemas()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_statements", function()
		local result = service.list_statements()
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton with list_tables", function()
		local result = service.list_tables()
		assert.is_true(result.success)
	end)

end)