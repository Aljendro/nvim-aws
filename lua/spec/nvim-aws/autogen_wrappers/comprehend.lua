-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: comprehend

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS comprehend service testing", function()
	it("should generate a cli skeleton for batch-detect-dominant-language", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "batch-detect-dominant-language" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-detect-entities", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "batch-detect-entities" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-detect-key-phrases", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "batch-detect-key-phrases" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-detect-sentiment", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "batch-detect-sentiment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-detect-syntax", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "batch-detect-syntax" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-detect-targeted-sentiment", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "batch-detect-targeted-sentiment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for classify-document", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "classify-document" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for contains-pii-entities", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "contains-pii-entities" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-dataset", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "create-dataset" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-document-classifier", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "create-document-classifier" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-endpoint", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "create-endpoint" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-entity-recognizer", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "create-entity-recognizer" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-flywheel", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "create-flywheel" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-document-classifier", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "delete-document-classifier" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-endpoint", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "delete-endpoint" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-entity-recognizer", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "delete-entity-recognizer" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-flywheel", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "delete-flywheel" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-resource-policy", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "delete-resource-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-dataset", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "describe-dataset" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-document-classification-job", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "describe-document-classification-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-document-classifier", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "describe-document-classifier" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-dominant-language-detection-job", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "describe-dominant-language-detection-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-endpoint", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "describe-endpoint" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-entities-detection-job", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "describe-entities-detection-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-entity-recognizer", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "describe-entity-recognizer" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-events-detection-job", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "describe-events-detection-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-flywheel", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "describe-flywheel" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-flywheel-iteration", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "describe-flywheel-iteration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-key-phrases-detection-job", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "describe-key-phrases-detection-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-pii-entities-detection-job", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "describe-pii-entities-detection-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-resource-policy", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "describe-resource-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-sentiment-detection-job", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "describe-sentiment-detection-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-targeted-sentiment-detection-job", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "describe-targeted-sentiment-detection-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-topics-detection-job", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "describe-topics-detection-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for detect-dominant-language", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "detect-dominant-language" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for detect-entities", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "detect-entities" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for detect-key-phrases", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "detect-key-phrases" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for detect-pii-entities", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "detect-pii-entities" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for detect-sentiment", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "detect-sentiment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for detect-syntax", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "detect-syntax" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for detect-targeted-sentiment", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "detect-targeted-sentiment" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for detect-toxic-content", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "detect-toxic-content" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for import-model", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "import-model" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-datasets", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "list-datasets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-document-classification-jobs", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "list-document-classification-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-document-classifier-summaries", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "list-document-classifier-summaries" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-document-classifiers", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "list-document-classifiers" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-dominant-language-detection-jobs", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "list-dominant-language-detection-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-endpoints", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "list-endpoints" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-entities-detection-jobs", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "list-entities-detection-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-entity-recognizer-summaries", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "list-entity-recognizer-summaries" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-entity-recognizers", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "list-entity-recognizers" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-events-detection-jobs", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "list-events-detection-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-flywheel-iteration-history", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "list-flywheel-iteration-history" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-flywheels", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "list-flywheels" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-key-phrases-detection-jobs", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "list-key-phrases-detection-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-pii-entities-detection-jobs", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "list-pii-entities-detection-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-sentiment-detection-jobs", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "list-sentiment-detection-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-targeted-sentiment-detection-jobs", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "list-targeted-sentiment-detection-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-topics-detection-jobs", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "list-topics-detection-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-resource-policy", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "put-resource-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-document-classification-job", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "start-document-classification-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-dominant-language-detection-job", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "start-dominant-language-detection-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-entities-detection-job", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "start-entities-detection-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-events-detection-job", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "start-events-detection-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-flywheel-iteration", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "start-flywheel-iteration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-key-phrases-detection-job", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "start-key-phrases-detection-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-pii-entities-detection-job", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "start-pii-entities-detection-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-sentiment-detection-job", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "start-sentiment-detection-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-targeted-sentiment-detection-job", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "start-targeted-sentiment-detection-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-topics-detection-job", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "start-topics-detection-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-dominant-language-detection-job", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "stop-dominant-language-detection-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-entities-detection-job", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "stop-entities-detection-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-events-detection-job", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "stop-events-detection-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-key-phrases-detection-job", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "stop-key-phrases-detection-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-pii-entities-detection-job", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "stop-pii-entities-detection-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-sentiment-detection-job", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "stop-sentiment-detection-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-targeted-sentiment-detection-job", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "stop-targeted-sentiment-detection-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-training-document-classifier", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "stop-training-document-classifier" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-training-entity-recognizer", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "stop-training-entity-recognizer" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-endpoint", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "update-endpoint" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-flywheel", function()
		local result = common.execute_aws_command_with_input({ "comprehend", "update-flywheel" })
		assert.is_true(result.success)
	end)

end)