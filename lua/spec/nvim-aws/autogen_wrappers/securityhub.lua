-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: securityhub

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS securityhub service testing", function()
	it("should generate a cli skeleton for accept-administrator-invitation", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "accept-administrator-invitation" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for accept-invitation", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "accept-invitation" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-delete-automation-rules", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "batch-delete-automation-rules" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-disable-standards", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "batch-disable-standards" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-enable-standards", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "batch-enable-standards" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-get-automation-rules", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "batch-get-automation-rules" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-get-configuration-policy-associations", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "batch-get-configuration-policy-associations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-get-security-controls", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "batch-get-security-controls" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-get-standards-control-associations", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "batch-get-standards-control-associations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-import-findings", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "batch-import-findings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-update-automation-rules", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "batch-update-automation-rules" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-update-findings", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "batch-update-findings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-update-standards-control-associations", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "batch-update-standards-control-associations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-action-target", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "create-action-target" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-automation-rule", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "create-automation-rule" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-configuration-policy", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "create-configuration-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-finding-aggregator", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "create-finding-aggregator" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-insight", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "create-insight" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-members", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "create-members" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for decline-invitations", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "decline-invitations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-action-target", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "delete-action-target" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-configuration-policy", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "delete-configuration-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-finding-aggregator", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "delete-finding-aggregator" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-insight", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "delete-insight" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-invitations", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "delete-invitations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-members", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "delete-members" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-action-targets", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "describe-action-targets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-hub", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "describe-hub" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-organization-configuration", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "describe-organization-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-products", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "describe-products" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-standards", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "describe-standards" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-standards-controls", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "describe-standards-controls" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disable-import-findings-for-product", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "disable-import-findings-for-product" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disable-organization-admin-account", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "disable-organization-admin-account" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disable-security-hub", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "disable-security-hub" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-from-administrator-account", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "disassociate-from-administrator-account" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-from-master-account", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "disassociate-from-master-account" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-members", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "disassociate-members" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for enable-import-findings-for-product", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "enable-import-findings-for-product" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for enable-organization-admin-account", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "enable-organization-admin-account" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for enable-security-hub", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "enable-security-hub" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-administrator-account", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "get-administrator-account" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-configuration-policy", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "get-configuration-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-configuration-policy-association", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "get-configuration-policy-association" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-enabled-standards", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "get-enabled-standards" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-finding-aggregator", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "get-finding-aggregator" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-finding-history", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "get-finding-history" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-findings", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "get-findings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-insight-results", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "get-insight-results" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-insights", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "get-insights" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-invitations-count", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "get-invitations-count" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-master-account", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "get-master-account" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-members", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "get-members" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-security-control-definition", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "get-security-control-definition" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for invite-members", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "invite-members" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-automation-rules", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "list-automation-rules" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-configuration-policies", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "list-configuration-policies" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-configuration-policy-associations", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "list-configuration-policy-associations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-enabled-products-for-import", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "list-enabled-products-for-import" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-finding-aggregators", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "list-finding-aggregators" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-invitations", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "list-invitations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-members", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "list-members" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-organization-admin-accounts", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "list-organization-admin-accounts" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-security-control-definitions", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "list-security-control-definitions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-standards-control-associations", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "list-standards-control-associations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-configuration-policy-association", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "start-configuration-policy-association" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-configuration-policy-disassociation", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "start-configuration-policy-disassociation" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-action-target", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "update-action-target" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-configuration-policy", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "update-configuration-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-finding-aggregator", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "update-finding-aggregator" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-findings", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "update-findings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-insight", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "update-insight" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-organization-configuration", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "update-organization-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-security-control", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "update-security-control" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-security-hub-configuration", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "update-security-hub-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-standards-control", function()
		local result = common.execute_aws_command_with_input({ "securityhub", "update-standards-control" })
		assert.is_true(result.success)
	end)

end)