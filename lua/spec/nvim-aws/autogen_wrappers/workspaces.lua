-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: workspaces

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS workspaces service testing", function()
	it("should generate a cli skeleton for accept-account-link-invitation", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "accept-account-link-invitation" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for associate-connection-alias", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "associate-connection-alias" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for associate-ip-groups", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "associate-ip-groups" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for associate-workspace-application", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "associate-workspace-application" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for authorize-ip-rules", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "authorize-ip-rules" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for copy-workspace-image", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "copy-workspace-image" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-account-link-invitation", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "create-account-link-invitation" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-connect-client-add-in", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "create-connect-client-add-in" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-connection-alias", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "create-connection-alias" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-ip-group", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "create-ip-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-standby-workspaces", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "create-standby-workspaces" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-tags", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "create-tags" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-updated-workspace-image", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "create-updated-workspace-image" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-workspace-bundle", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "create-workspace-bundle" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-workspace-image", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "create-workspace-image" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-workspaces", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "create-workspaces" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-workspaces-pool", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "create-workspaces-pool" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-account-link-invitation", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "delete-account-link-invitation" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-client-branding", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "delete-client-branding" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-connect-client-add-in", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "delete-connect-client-add-in" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-connection-alias", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "delete-connection-alias" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-ip-group", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "delete-ip-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-tags", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "delete-tags" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-workspace-bundle", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "delete-workspace-bundle" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-workspace-image", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "delete-workspace-image" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for deploy-workspace-applications", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "deploy-workspace-applications" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for deregister-workspace-directory", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "deregister-workspace-directory" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-account", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "describe-account" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-account-modifications", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "describe-account-modifications" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-application-associations", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "describe-application-associations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-applications", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "describe-applications" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-bundle-associations", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "describe-bundle-associations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-client-branding", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "describe-client-branding" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-client-properties", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "describe-client-properties" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-connect-client-add-ins", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "describe-connect-client-add-ins" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-connection-alias-permissions", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "describe-connection-alias-permissions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-connection-aliases", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "describe-connection-aliases" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-image-associations", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "describe-image-associations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-ip-groups", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "describe-ip-groups" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-tags", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "describe-tags" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-workspace-associations", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "describe-workspace-associations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-workspace-bundles", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "describe-workspace-bundles" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-workspace-directories", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "describe-workspace-directories" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-workspace-image-permissions", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "describe-workspace-image-permissions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-workspace-images", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "describe-workspace-images" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-workspace-snapshots", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "describe-workspace-snapshots" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-workspaces", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "describe-workspaces" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-workspaces-connection-status", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "describe-workspaces-connection-status" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-workspaces-pool-sessions", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "describe-workspaces-pool-sessions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-workspaces-pools", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "describe-workspaces-pools" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-connection-alias", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "disassociate-connection-alias" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-ip-groups", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "disassociate-ip-groups" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-workspace-application", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "disassociate-workspace-application" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-account-link", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "get-account-link" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for import-client-branding", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "import-client-branding" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for import-workspace-image", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "import-workspace-image" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-account-links", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "list-account-links" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-available-management-cidr-ranges", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "list-available-management-cidr-ranges" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for migrate-workspace", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "migrate-workspace" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for modify-account", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "modify-account" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for modify-certificate-based-auth-properties", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "modify-certificate-based-auth-properties" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for modify-client-properties", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "modify-client-properties" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for modify-endpoint-encryption-mode", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "modify-endpoint-encryption-mode" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for modify-saml-properties", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "modify-saml-properties" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for modify-selfservice-permissions", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "modify-selfservice-permissions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for modify-streaming-properties", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "modify-streaming-properties" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for modify-workspace-access-properties", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "modify-workspace-access-properties" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for modify-workspace-creation-properties", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "modify-workspace-creation-properties" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for modify-workspace-properties", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "modify-workspace-properties" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for modify-workspace-state", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "modify-workspace-state" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for reboot-workspaces", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "reboot-workspaces" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for rebuild-workspaces", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "rebuild-workspaces" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for register-workspace-directory", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "register-workspace-directory" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for reject-account-link-invitation", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "reject-account-link-invitation" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for restore-workspace", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "restore-workspace" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for revoke-ip-rules", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "revoke-ip-rules" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-workspaces", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "start-workspaces" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-workspaces-pool", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "start-workspaces-pool" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-workspaces", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "stop-workspaces" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-workspaces-pool", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "stop-workspaces-pool" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for terminate-workspaces", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "terminate-workspaces" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for terminate-workspaces-pool", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "terminate-workspaces-pool" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for terminate-workspaces-pool-session", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "terminate-workspaces-pool-session" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-connect-client-add-in", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "update-connect-client-add-in" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-connection-alias-permission", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "update-connection-alias-permission" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-rules-of-ip-group", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "update-rules-of-ip-group" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-workspace-bundle", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "update-workspace-bundle" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-workspace-image-permission", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "update-workspace-image-permission" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-workspaces-pool", function()
		local result = common.execute_aws_command_with_input({ "workspaces", "update-workspaces-pool" })
		assert.is_true(result.success)
	end)

end)