-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: kinesis-video

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS kinesis-video service testing", function()
	it("should generate a cli skeleton for create-signaling-channel", function()
		local result = common.execute_aws_command_with_input({ "kinesisvideo", "create-signaling-channel" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-stream", function()
		local result = common.execute_aws_command_with_input({ "kinesisvideo", "create-stream" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-edge-configuration", function()
		local result = common.execute_aws_command_with_input({ "kinesisvideo", "delete-edge-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-signaling-channel", function()
		local result = common.execute_aws_command_with_input({ "kinesisvideo", "delete-signaling-channel" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-stream", function()
		local result = common.execute_aws_command_with_input({ "kinesisvideo", "delete-stream" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-edge-configuration", function()
		local result = common.execute_aws_command_with_input({ "kinesisvideo", "describe-edge-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-image-generation-configuration", function()
		local result = common.execute_aws_command_with_input({ "kinesisvideo", "describe-image-generation-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-mapped-resource-configuration", function()
		local result = common.execute_aws_command_with_input({ "kinesisvideo", "describe-mapped-resource-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-media-storage-configuration", function()
		local result = common.execute_aws_command_with_input({ "kinesisvideo", "describe-media-storage-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-notification-configuration", function()
		local result = common.execute_aws_command_with_input({ "kinesisvideo", "describe-notification-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-signaling-channel", function()
		local result = common.execute_aws_command_with_input({ "kinesisvideo", "describe-signaling-channel" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-stream", function()
		local result = common.execute_aws_command_with_input({ "kinesisvideo", "describe-stream" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-data-endpoint", function()
		local result = common.execute_aws_command_with_input({ "kinesisvideo", "get-data-endpoint" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-signaling-channel-endpoint", function()
		local result = common.execute_aws_command_with_input({ "kinesisvideo", "get-signaling-channel-endpoint" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-edge-agent-configurations", function()
		local result = common.execute_aws_command_with_input({ "kinesisvideo", "list-edge-agent-configurations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-signaling-channels", function()
		local result = common.execute_aws_command_with_input({ "kinesisvideo", "list-signaling-channels" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-streams", function()
		local result = common.execute_aws_command_with_input({ "kinesisvideo", "list-streams" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "kinesisvideo", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-stream", function()
		local result = common.execute_aws_command_with_input({ "kinesisvideo", "list-tags-for-stream" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-edge-configuration-update", function()
		local result = common.execute_aws_command_with_input({ "kinesisvideo", "start-edge-configuration-update" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "kinesisvideo", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-stream", function()
		local result = common.execute_aws_command_with_input({ "kinesisvideo", "tag-stream" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "kinesisvideo", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-stream", function()
		local result = common.execute_aws_command_with_input({ "kinesisvideo", "untag-stream" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-data-retention", function()
		local result = common.execute_aws_command_with_input({ "kinesisvideo", "update-data-retention" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-image-generation-configuration", function()
		local result = common.execute_aws_command_with_input({ "kinesisvideo", "update-image-generation-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-media-storage-configuration", function()
		local result = common.execute_aws_command_with_input({ "kinesisvideo", "update-media-storage-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-notification-configuration", function()
		local result = common.execute_aws_command_with_input({ "kinesisvideo", "update-notification-configuration" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-signaling-channel", function()
		local result = common.execute_aws_command_with_input({ "kinesisvideo", "update-signaling-channel" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-stream", function()
		local result = common.execute_aws_command_with_input({ "kinesisvideo", "update-stream" })
		assert.is_true(result.success)
	end)

end)