-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: compute-optimizer

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS compute-optimizer service testing", function()
	it("should generate a cli skeleton for delete-recommendation-preferences", function()
		local result = common.execute_aws_command_with_input({ "compute-optimizer", "delete-recommendation-preferences" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-recommendation-export-jobs", function()
		local result = common.execute_aws_command_with_input({ "compute-optimizer", "describe-recommendation-export-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for export-auto-scaling-group-recommendations", function()
		local result = common.execute_aws_command_with_input({ "compute-optimizer", "export-auto-scaling-group-recommendations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for export-ebs-volume-recommendations", function()
		local result = common.execute_aws_command_with_input({ "compute-optimizer", "export-ebs-volume-recommendations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for export-ec2-instance-recommendations", function()
		local result = common.execute_aws_command_with_input({ "compute-optimizer", "export-ec2-instance-recommendations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for export-ecs-service-recommendations", function()
		local result = common.execute_aws_command_with_input({ "compute-optimizer", "export-ecs-service-recommendations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for export-idle-recommendations", function()
		local result = common.execute_aws_command_with_input({ "compute-optimizer", "export-idle-recommendations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for export-lambda-function-recommendations", function()
		local result = common.execute_aws_command_with_input({ "compute-optimizer", "export-lambda-function-recommendations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for export-license-recommendations", function()
		local result = common.execute_aws_command_with_input({ "compute-optimizer", "export-license-recommendations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for export-rds-database-recommendations", function()
		local result = common.execute_aws_command_with_input({ "compute-optimizer", "export-rds-database-recommendations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-auto-scaling-group-recommendations", function()
		local result = common.execute_aws_command_with_input({ "compute-optimizer", "get-auto-scaling-group-recommendations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-ebs-volume-recommendations", function()
		local result = common.execute_aws_command_with_input({ "compute-optimizer", "get-ebs-volume-recommendations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-ec2-instance-recommendations", function()
		local result = common.execute_aws_command_with_input({ "compute-optimizer", "get-ec2-instance-recommendations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-ec2-recommendation-projected-metrics", function()
		local result = common.execute_aws_command_with_input({ "compute-optimizer", "get-ec2-recommendation-projected-metrics" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-ecs-service-recommendation-projected-metrics", function()
		local result = common.execute_aws_command_with_input({ "compute-optimizer", "get-ecs-service-recommendation-projected-metrics" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-ecs-service-recommendations", function()
		local result = common.execute_aws_command_with_input({ "compute-optimizer", "get-ecs-service-recommendations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-effective-recommendation-preferences", function()
		local result = common.execute_aws_command_with_input({ "compute-optimizer", "get-effective-recommendation-preferences" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-enrollment-status", function()
		local result = common.execute_aws_command_with_input({ "compute-optimizer", "get-enrollment-status" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-enrollment-statuses-for-organization", function()
		local result = common.execute_aws_command_with_input({ "compute-optimizer", "get-enrollment-statuses-for-organization" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-idle-recommendations", function()
		local result = common.execute_aws_command_with_input({ "compute-optimizer", "get-idle-recommendations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-lambda-function-recommendations", function()
		local result = common.execute_aws_command_with_input({ "compute-optimizer", "get-lambda-function-recommendations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-license-recommendations", function()
		local result = common.execute_aws_command_with_input({ "compute-optimizer", "get-license-recommendations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-rds-database-recommendation-projected-metrics", function()
		local result = common.execute_aws_command_with_input({ "compute-optimizer", "get-rds-database-recommendation-projected-metrics" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-rds-database-recommendations", function()
		local result = common.execute_aws_command_with_input({ "compute-optimizer", "get-rds-database-recommendations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-recommendation-preferences", function()
		local result = common.execute_aws_command_with_input({ "compute-optimizer", "get-recommendation-preferences" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-recommendation-summaries", function()
		local result = common.execute_aws_command_with_input({ "compute-optimizer", "get-recommendation-summaries" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-recommendation-preferences", function()
		local result = common.execute_aws_command_with_input({ "compute-optimizer", "put-recommendation-preferences" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-enrollment-status", function()
		local result = common.execute_aws_command_with_input({ "compute-optimizer", "update-enrollment-status" })
		assert.is_true(result.success)
	end)

end)