-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: ecr-public

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS ecr-public service testing", function()
	it("should generate a cli skeleton for batch-check-layer-availability", function()
		local result = common.execute_aws_command_with_input({ "ecr-public", "batch-check-layer-availability" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-delete-image", function()
		local result = common.execute_aws_command_with_input({ "ecr-public", "batch-delete-image" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for complete-layer-upload", function()
		local result = common.execute_aws_command_with_input({ "ecr-public", "complete-layer-upload" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-repository", function()
		local result = common.execute_aws_command_with_input({ "ecr-public", "create-repository" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-repository", function()
		local result = common.execute_aws_command_with_input({ "ecr-public", "delete-repository" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-repository-policy", function()
		local result = common.execute_aws_command_with_input({ "ecr-public", "delete-repository-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-image-tags", function()
		local result = common.execute_aws_command_with_input({ "ecr-public", "describe-image-tags" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-images", function()
		local result = common.execute_aws_command_with_input({ "ecr-public", "describe-images" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-registries", function()
		local result = common.execute_aws_command_with_input({ "ecr-public", "describe-registries" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-repositories", function()
		local result = common.execute_aws_command_with_input({ "ecr-public", "describe-repositories" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-authorization-token", function()
		local result = common.execute_aws_command_with_input({ "ecr-public", "get-authorization-token" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-registry-catalog-data", function()
		local result = common.execute_aws_command_with_input({ "ecr-public", "get-registry-catalog-data" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-repository-catalog-data", function()
		local result = common.execute_aws_command_with_input({ "ecr-public", "get-repository-catalog-data" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-repository-policy", function()
		local result = common.execute_aws_command_with_input({ "ecr-public", "get-repository-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for initiate-layer-upload", function()
		local result = common.execute_aws_command_with_input({ "ecr-public", "initiate-layer-upload" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "ecr-public", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-image", function()
		local result = common.execute_aws_command_with_input({ "ecr-public", "put-image" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-registry-catalog-data", function()
		local result = common.execute_aws_command_with_input({ "ecr-public", "put-registry-catalog-data" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-repository-catalog-data", function()
		local result = common.execute_aws_command_with_input({ "ecr-public", "put-repository-catalog-data" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for set-repository-policy", function()
		local result = common.execute_aws_command_with_input({ "ecr-public", "set-repository-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "ecr-public", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "ecr-public", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for upload-layer-part", function()
		local result = common.execute_aws_command_with_input({ "ecr-public", "upload-layer-part" })
		assert.is_true(result.success)
	end)

end)