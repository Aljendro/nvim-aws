-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: route-53-domains

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS route-53-domains service testing", function()
	it("should generate a cli skeleton for accept-domain-transfer-from-another-aws-account", function()
		local result = common.execute_aws_command_with_input({ "route53domains", "accept-domain-transfer-from-another-aws-account" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for associate-delegation-signer-to-domain", function()
		local result = common.execute_aws_command_with_input({ "route53domains", "associate-delegation-signer-to-domain" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for cancel-domain-transfer-to-another-aws-account", function()
		local result = common.execute_aws_command_with_input({ "route53domains", "cancel-domain-transfer-to-another-aws-account" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for check-domain-availability", function()
		local result = common.execute_aws_command_with_input({ "route53domains", "check-domain-availability" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for check-domain-transferability", function()
		local result = common.execute_aws_command_with_input({ "route53domains", "check-domain-transferability" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-domain", function()
		local result = common.execute_aws_command_with_input({ "route53domains", "delete-domain" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-tags-for-domain", function()
		local result = common.execute_aws_command_with_input({ "route53domains", "delete-tags-for-domain" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disable-domain-auto-renew", function()
		local result = common.execute_aws_command_with_input({ "route53domains", "disable-domain-auto-renew" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disable-domain-transfer-lock", function()
		local result = common.execute_aws_command_with_input({ "route53domains", "disable-domain-transfer-lock" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-delegation-signer-from-domain", function()
		local result = common.execute_aws_command_with_input({ "route53domains", "disassociate-delegation-signer-from-domain" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for enable-domain-auto-renew", function()
		local result = common.execute_aws_command_with_input({ "route53domains", "enable-domain-auto-renew" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for enable-domain-transfer-lock", function()
		local result = common.execute_aws_command_with_input({ "route53domains", "enable-domain-transfer-lock" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-contact-reachability-status", function()
		local result = common.execute_aws_command_with_input({ "route53domains", "get-contact-reachability-status" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-domain-detail", function()
		local result = common.execute_aws_command_with_input({ "route53domains", "get-domain-detail" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-domain-suggestions", function()
		local result = common.execute_aws_command_with_input({ "route53domains", "get-domain-suggestions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-operation-detail", function()
		local result = common.execute_aws_command_with_input({ "route53domains", "get-operation-detail" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-domains", function()
		local result = common.execute_aws_command_with_input({ "route53domains", "list-domains" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-operations", function()
		local result = common.execute_aws_command_with_input({ "route53domains", "list-operations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-prices", function()
		local result = common.execute_aws_command_with_input({ "route53domains", "list-prices" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-domain", function()
		local result = common.execute_aws_command_with_input({ "route53domains", "list-tags-for-domain" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for push-domain", function()
		local result = common.execute_aws_command_with_input({ "route53domains", "push-domain" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for register-domain", function()
		local result = common.execute_aws_command_with_input({ "route53domains", "register-domain" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for reject-domain-transfer-from-another-aws-account", function()
		local result = common.execute_aws_command_with_input({ "route53domains", "reject-domain-transfer-from-another-aws-account" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for renew-domain", function()
		local result = common.execute_aws_command_with_input({ "route53domains", "renew-domain" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for resend-contact-reachability-email", function()
		local result = common.execute_aws_command_with_input({ "route53domains", "resend-contact-reachability-email" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for resend-operation-authorization", function()
		local result = common.execute_aws_command_with_input({ "route53domains", "resend-operation-authorization" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for retrieve-domain-auth-code", function()
		local result = common.execute_aws_command_with_input({ "route53domains", "retrieve-domain-auth-code" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for transfer-domain", function()
		local result = common.execute_aws_command_with_input({ "route53domains", "transfer-domain" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for transfer-domain-to-another-aws-account", function()
		local result = common.execute_aws_command_with_input({ "route53domains", "transfer-domain-to-another-aws-account" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-domain-contact", function()
		local result = common.execute_aws_command_with_input({ "route53domains", "update-domain-contact" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-domain-contact-privacy", function()
		local result = common.execute_aws_command_with_input({ "route53domains", "update-domain-contact-privacy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-domain-nameservers", function()
		local result = common.execute_aws_command_with_input({ "route53domains", "update-domain-nameservers" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-tags-for-domain", function()
		local result = common.execute_aws_command_with_input({ "route53domains", "update-tags-for-domain" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for view-billing", function()
		local result = common.execute_aws_command_with_input({ "route53domains", "view-billing" })
		assert.is_true(result.success)
	end)

end)