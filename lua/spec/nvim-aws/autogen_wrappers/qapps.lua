-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: qapps

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS qapps service testing", function()
	it("should generate a cli skeleton for associate-library-item-review", function()
		local result = common.execute_aws_command_with_input({ "qapps", "associate-library-item-review" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for associate-q-app-with-user", function()
		local result = common.execute_aws_command_with_input({ "qapps", "associate-q-app-with-user" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-create-category", function()
		local result = common.execute_aws_command_with_input({ "qapps", "batch-create-category" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-delete-category", function()
		local result = common.execute_aws_command_with_input({ "qapps", "batch-delete-category" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-update-category", function()
		local result = common.execute_aws_command_with_input({ "qapps", "batch-update-category" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-library-item", function()
		local result = common.execute_aws_command_with_input({ "qapps", "create-library-item" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-presigned-url", function()
		local result = common.execute_aws_command_with_input({ "qapps", "create-presigned-url" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-q-app", function()
		local result = common.execute_aws_command_with_input({ "qapps", "create-q-app" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-library-item", function()
		local result = common.execute_aws_command_with_input({ "qapps", "delete-library-item" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-q-app", function()
		local result = common.execute_aws_command_with_input({ "qapps", "delete-q-app" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-q-app-permissions", function()
		local result = common.execute_aws_command_with_input({ "qapps", "describe-q-app-permissions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-library-item-review", function()
		local result = common.execute_aws_command_with_input({ "qapps", "disassociate-library-item-review" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-q-app-from-user", function()
		local result = common.execute_aws_command_with_input({ "qapps", "disassociate-q-app-from-user" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for export-q-app-session-data", function()
		local result = common.execute_aws_command_with_input({ "qapps", "export-q-app-session-data" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-library-item", function()
		local result = common.execute_aws_command_with_input({ "qapps", "get-library-item" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-q-app", function()
		local result = common.execute_aws_command_with_input({ "qapps", "get-q-app" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-q-app-session", function()
		local result = common.execute_aws_command_with_input({ "qapps", "get-q-app-session" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-q-app-session-metadata", function()
		local result = common.execute_aws_command_with_input({ "qapps", "get-q-app-session-metadata" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for import-document", function()
		local result = common.execute_aws_command_with_input({ "qapps", "import-document" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-categories", function()
		local result = common.execute_aws_command_with_input({ "qapps", "list-categories" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-library-items", function()
		local result = common.execute_aws_command_with_input({ "qapps", "list-library-items" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-q-app-session-data", function()
		local result = common.execute_aws_command_with_input({ "qapps", "list-q-app-session-data" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-q-apps", function()
		local result = common.execute_aws_command_with_input({ "qapps", "list-q-apps" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "qapps", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for predict-q-app", function()
		local result = common.execute_aws_command_with_input({ "qapps", "predict-q-app" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-q-app-session", function()
		local result = common.execute_aws_command_with_input({ "qapps", "start-q-app-session" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-q-app-session", function()
		local result = common.execute_aws_command_with_input({ "qapps", "stop-q-app-session" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "qapps", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "qapps", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-library-item", function()
		local result = common.execute_aws_command_with_input({ "qapps", "update-library-item" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-library-item-metadata", function()
		local result = common.execute_aws_command_with_input({ "qapps", "update-library-item-metadata" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-q-app", function()
		local result = common.execute_aws_command_with_input({ "qapps", "update-q-app" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-q-app-permissions", function()
		local result = common.execute_aws_command_with_input({ "qapps", "update-q-app-permissions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-q-app-session", function()
		local result = common.execute_aws_command_with_input({ "qapps", "update-q-app-session" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-q-app-session-metadata", function()
		local result = common.execute_aws_command_with_input({ "qapps", "update-q-app-session-metadata" })
		assert.is_true(result.success)
	end)

end)