-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: application-discovery-service

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS application-discovery-service service testing", function()
	it("should generate a cli skeleton for associate-configuration-items-to-application", function()
		local result = common.execute_aws_command_with_input({ "discovery", "associate-configuration-items-to-application" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-delete-agents", function()
		local result = common.execute_aws_command_with_input({ "discovery", "batch-delete-agents" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for batch-delete-import-data", function()
		local result = common.execute_aws_command_with_input({ "discovery", "batch-delete-import-data" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-application", function()
		local result = common.execute_aws_command_with_input({ "discovery", "create-application" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-tags", function()
		local result = common.execute_aws_command_with_input({ "discovery", "create-tags" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-applications", function()
		local result = common.execute_aws_command_with_input({ "discovery", "delete-applications" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-tags", function()
		local result = common.execute_aws_command_with_input({ "discovery", "delete-tags" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-agents", function()
		local result = common.execute_aws_command_with_input({ "discovery", "describe-agents" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-batch-delete-configuration-task", function()
		local result = common.execute_aws_command_with_input({ "discovery", "describe-batch-delete-configuration-task" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-configurations", function()
		local result = common.execute_aws_command_with_input({ "discovery", "describe-configurations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-continuous-exports", function()
		local result = common.execute_aws_command_with_input({ "discovery", "describe-continuous-exports" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-export-configurations", function()
		local result = common.execute_aws_command_with_input({ "discovery", "describe-export-configurations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-export-tasks", function()
		local result = common.execute_aws_command_with_input({ "discovery", "describe-export-tasks" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-import-tasks", function()
		local result = common.execute_aws_command_with_input({ "discovery", "describe-import-tasks" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for describe-tags", function()
		local result = common.execute_aws_command_with_input({ "discovery", "describe-tags" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disassociate-configuration-items-from-application", function()
		local result = common.execute_aws_command_with_input({ "discovery", "disassociate-configuration-items-from-application" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for export-configurations", function()
		local result = common.execute_aws_command_with_input({ "discovery", "export-configurations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-discovery-summary", function()
		local result = common.execute_aws_command_with_input({ "discovery", "get-discovery-summary" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-configurations", function()
		local result = common.execute_aws_command_with_input({ "discovery", "list-configurations" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-server-neighbors", function()
		local result = common.execute_aws_command_with_input({ "discovery", "list-server-neighbors" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-batch-delete-configuration-task", function()
		local result = common.execute_aws_command_with_input({ "discovery", "start-batch-delete-configuration-task" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-continuous-export", function()
		local result = common.execute_aws_command_with_input({ "discovery", "start-continuous-export" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-data-collection-by-agent-ids", function()
		local result = common.execute_aws_command_with_input({ "discovery", "start-data-collection-by-agent-ids" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-export-task", function()
		local result = common.execute_aws_command_with_input({ "discovery", "start-export-task" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-import-task", function()
		local result = common.execute_aws_command_with_input({ "discovery", "start-import-task" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-continuous-export", function()
		local result = common.execute_aws_command_with_input({ "discovery", "stop-continuous-export" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-data-collection-by-agent-ids", function()
		local result = common.execute_aws_command_with_input({ "discovery", "stop-data-collection-by-agent-ids" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-application", function()
		local result = common.execute_aws_command_with_input({ "discovery", "update-application" })
		assert.is_true(result.success)
	end)

end)