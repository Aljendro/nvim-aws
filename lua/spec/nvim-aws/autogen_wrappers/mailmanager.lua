-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: mailmanager

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS mailmanager service testing", function()
	it("should generate a cli skeleton for create-addon-instance", function()
		local result = common.execute_aws_command_with_input({ "mailmanager", "create-addon-instance" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-addon-subscription", function()
		local result = common.execute_aws_command_with_input({ "mailmanager", "create-addon-subscription" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-address-list", function()
		local result = common.execute_aws_command_with_input({ "mailmanager", "create-address-list" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-address-list-import-job", function()
		local result = common.execute_aws_command_with_input({ "mailmanager", "create-address-list-import-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-archive", function()
		local result = common.execute_aws_command_with_input({ "mailmanager", "create-archive" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-ingress-point", function()
		local result = common.execute_aws_command_with_input({ "mailmanager", "create-ingress-point" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-relay", function()
		local result = common.execute_aws_command_with_input({ "mailmanager", "create-relay" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-rule-set", function()
		local result = common.execute_aws_command_with_input({ "mailmanager", "create-rule-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-traffic-policy", function()
		local result = common.execute_aws_command_with_input({ "mailmanager", "create-traffic-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-addon-instance", function()
		local result = common.execute_aws_command_with_input({ "mailmanager", "delete-addon-instance" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-addon-subscription", function()
		local result = common.execute_aws_command_with_input({ "mailmanager", "delete-addon-subscription" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-address-list", function()
		local result = common.execute_aws_command_with_input({ "mailmanager", "delete-address-list" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-archive", function()
		local result = common.execute_aws_command_with_input({ "mailmanager", "delete-archive" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-ingress-point", function()
		local result = common.execute_aws_command_with_input({ "mailmanager", "delete-ingress-point" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-relay", function()
		local result = common.execute_aws_command_with_input({ "mailmanager", "delete-relay" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-rule-set", function()
		local result = common.execute_aws_command_with_input({ "mailmanager", "delete-rule-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-traffic-policy", function()
		local result = common.execute_aws_command_with_input({ "mailmanager", "delete-traffic-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for deregister-member-from-address-list", function()
		local result = common.execute_aws_command_with_input({ "mailmanager", "deregister-member-from-address-list" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-addon-instance", function()
		local result = common.execute_aws_command_with_input({ "mailmanager", "get-addon-instance" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-addon-subscription", function()
		local result = common.execute_aws_command_with_input({ "mailmanager", "get-addon-subscription" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-address-list", function()
		local result = common.execute_aws_command_with_input({ "mailmanager", "get-address-list" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-address-list-import-job", function()
		local result = common.execute_aws_command_with_input({ "mailmanager", "get-address-list-import-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-archive", function()
		local result = common.execute_aws_command_with_input({ "mailmanager", "get-archive" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-archive-export", function()
		local result = common.execute_aws_command_with_input({ "mailmanager", "get-archive-export" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-archive-message", function()
		local result = common.execute_aws_command_with_input({ "mailmanager", "get-archive-message" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-archive-message-content", function()
		local result = common.execute_aws_command_with_input({ "mailmanager", "get-archive-message-content" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-archive-search", function()
		local result = common.execute_aws_command_with_input({ "mailmanager", "get-archive-search" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-archive-search-results", function()
		local result = common.execute_aws_command_with_input({ "mailmanager", "get-archive-search-results" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-ingress-point", function()
		local result = common.execute_aws_command_with_input({ "mailmanager", "get-ingress-point" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-member-of-address-list", function()
		local result = common.execute_aws_command_with_input({ "mailmanager", "get-member-of-address-list" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-relay", function()
		local result = common.execute_aws_command_with_input({ "mailmanager", "get-relay" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-rule-set", function()
		local result = common.execute_aws_command_with_input({ "mailmanager", "get-rule-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-traffic-policy", function()
		local result = common.execute_aws_command_with_input({ "mailmanager", "get-traffic-policy" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-addon-instances", function()
		local result = common.execute_aws_command_with_input({ "mailmanager", "list-addon-instances" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-addon-subscriptions", function()
		local result = common.execute_aws_command_with_input({ "mailmanager", "list-addon-subscriptions" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-address-list-import-jobs", function()
		local result = common.execute_aws_command_with_input({ "mailmanager", "list-address-list-import-jobs" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-address-lists", function()
		local result = common.execute_aws_command_with_input({ "mailmanager", "list-address-lists" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-archive-exports", function()
		local result = common.execute_aws_command_with_input({ "mailmanager", "list-archive-exports" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-archive-searches", function()
		local result = common.execute_aws_command_with_input({ "mailmanager", "list-archive-searches" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-archives", function()
		local result = common.execute_aws_command_with_input({ "mailmanager", "list-archives" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-ingress-points", function()
		local result = common.execute_aws_command_with_input({ "mailmanager", "list-ingress-points" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-members-of-address-list", function()
		local result = common.execute_aws_command_with_input({ "mailmanager", "list-members-of-address-list" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-relays", function()
		local result = common.execute_aws_command_with_input({ "mailmanager", "list-relays" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-rule-sets", function()
		local result = common.execute_aws_command_with_input({ "mailmanager", "list-rule-sets" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "mailmanager", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-traffic-policies", function()
		local result = common.execute_aws_command_with_input({ "mailmanager", "list-traffic-policies" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for register-member-to-address-list", function()
		local result = common.execute_aws_command_with_input({ "mailmanager", "register-member-to-address-list" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-address-list-import-job", function()
		local result = common.execute_aws_command_with_input({ "mailmanager", "start-address-list-import-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-archive-export", function()
		local result = common.execute_aws_command_with_input({ "mailmanager", "start-archive-export" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for start-archive-search", function()
		local result = common.execute_aws_command_with_input({ "mailmanager", "start-archive-search" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-address-list-import-job", function()
		local result = common.execute_aws_command_with_input({ "mailmanager", "stop-address-list-import-job" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-archive-export", function()
		local result = common.execute_aws_command_with_input({ "mailmanager", "stop-archive-export" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for stop-archive-search", function()
		local result = common.execute_aws_command_with_input({ "mailmanager", "stop-archive-search" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "mailmanager", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "mailmanager", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-archive", function()
		local result = common.execute_aws_command_with_input({ "mailmanager", "update-archive" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-ingress-point", function()
		local result = common.execute_aws_command_with_input({ "mailmanager", "update-ingress-point" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-relay", function()
		local result = common.execute_aws_command_with_input({ "mailmanager", "update-relay" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-rule-set", function()
		local result = common.execute_aws_command_with_input({ "mailmanager", "update-rule-set" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-traffic-policy", function()
		local result = common.execute_aws_command_with_input({ "mailmanager", "update-traffic-policy" })
		assert.is_true(result.success)
	end)

end)