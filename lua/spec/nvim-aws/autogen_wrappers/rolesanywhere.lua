-- AUTOGENERATED FILE - DO NOT EDIT
-- Generated: 2025-04-08
-- AWS Service: rolesanywhere

require("nvim-aws").setup()
local common = require("nvim-aws.wrappers.common")

describe("AWS rolesanywhere service testing", function()
	it("should generate a cli skeleton for create-profile", function()
		local result = common.execute_aws_command_with_input({ "rolesanywhere", "create-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for create-trust-anchor", function()
		local result = common.execute_aws_command_with_input({ "rolesanywhere", "create-trust-anchor" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-attribute-mapping", function()
		local result = common.execute_aws_command_with_input({ "rolesanywhere", "delete-attribute-mapping" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-crl", function()
		local result = common.execute_aws_command_with_input({ "rolesanywhere", "delete-crl" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-profile", function()
		local result = common.execute_aws_command_with_input({ "rolesanywhere", "delete-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for delete-trust-anchor", function()
		local result = common.execute_aws_command_with_input({ "rolesanywhere", "delete-trust-anchor" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disable-crl", function()
		local result = common.execute_aws_command_with_input({ "rolesanywhere", "disable-crl" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disable-profile", function()
		local result = common.execute_aws_command_with_input({ "rolesanywhere", "disable-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for disable-trust-anchor", function()
		local result = common.execute_aws_command_with_input({ "rolesanywhere", "disable-trust-anchor" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for enable-crl", function()
		local result = common.execute_aws_command_with_input({ "rolesanywhere", "enable-crl" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for enable-profile", function()
		local result = common.execute_aws_command_with_input({ "rolesanywhere", "enable-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for enable-trust-anchor", function()
		local result = common.execute_aws_command_with_input({ "rolesanywhere", "enable-trust-anchor" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-crl", function()
		local result = common.execute_aws_command_with_input({ "rolesanywhere", "get-crl" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-profile", function()
		local result = common.execute_aws_command_with_input({ "rolesanywhere", "get-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-subject", function()
		local result = common.execute_aws_command_with_input({ "rolesanywhere", "get-subject" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for get-trust-anchor", function()
		local result = common.execute_aws_command_with_input({ "rolesanywhere", "get-trust-anchor" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for import-crl", function()
		local result = common.execute_aws_command_with_input({ "rolesanywhere", "import-crl" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-crls", function()
		local result = common.execute_aws_command_with_input({ "rolesanywhere", "list-crls" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-profiles", function()
		local result = common.execute_aws_command_with_input({ "rolesanywhere", "list-profiles" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-subjects", function()
		local result = common.execute_aws_command_with_input({ "rolesanywhere", "list-subjects" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-tags-for-resource", function()
		local result = common.execute_aws_command_with_input({ "rolesanywhere", "list-tags-for-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for list-trust-anchors", function()
		local result = common.execute_aws_command_with_input({ "rolesanywhere", "list-trust-anchors" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-attribute-mapping", function()
		local result = common.execute_aws_command_with_input({ "rolesanywhere", "put-attribute-mapping" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for put-notification-settings", function()
		local result = common.execute_aws_command_with_input({ "rolesanywhere", "put-notification-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for reset-notification-settings", function()
		local result = common.execute_aws_command_with_input({ "rolesanywhere", "reset-notification-settings" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for tag-resource", function()
		local result = common.execute_aws_command_with_input({ "rolesanywhere", "tag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for untag-resource", function()
		local result = common.execute_aws_command_with_input({ "rolesanywhere", "untag-resource" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-crl", function()
		local result = common.execute_aws_command_with_input({ "rolesanywhere", "update-crl" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-profile", function()
		local result = common.execute_aws_command_with_input({ "rolesanywhere", "update-profile" })
		assert.is_true(result.success)
	end)

	it("should generate a cli skeleton for update-trust-anchor", function()
		local result = common.execute_aws_command_with_input({ "rolesanywhere", "update-trust-anchor" })
		assert.is_true(result.success)
	end)

end)